var U9=Object.defineProperty;var G9=(As,Ds,Io)=>Ds in As?U9(As,Ds,{enumerable:!0,configurable:!0,writable:!0,value:Io}):As[Ds]=Io;var Rm=(As,Ds,Io)=>G9(As,typeof Ds!="symbol"?Ds+"":Ds,Io);(function(){"use strict";function As(n,t){return t.forEach(function(e){e&&typeof e!="string"&&!Array.isArray(e)&&Object.keys(e).forEach(function(s){if(s!=="default"&&!(s in n)){var r=Object.getOwnPropertyDescriptor(e,s);Object.defineProperty(n,s,r.get?r:{enumerable:!0,get:function(){return e[s]}})}})}),Object.freeze(n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ds=1e-7,Io=1e-4;class zd{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class yl{refCount(t){return bn("refCount")}incRef(t){return bn("incRef")}timerAvailable(){return!0}time(t){return bn("time")}read(t){return bn("read")}readSync(t){return bn("readSync")}readToGPU(t,e){return bn("readToGPU")}numDataIds(){return bn("numDataIds")}disposeData(t,e){return bn("disposeData")}write(t,e,s){return bn("write")}move(t,e,s,r,o){return bn("move")}createTensorFromGPUData(t,e,s){return bn("createTensorFromGPUData")}memory(){return bn("memory")}floatPrecision(){return bn("floatPrecision")}epsilon(){return this.floatPrecision()===32?Ds:Io}dispose(){return bn("dispose")}}function bn(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mC(n){let t=n.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,ko(n,t,e)}function vr(n,t,e){return Math.max(n,Math.min(t,e))}function Wd(n){return n%2===0?n:n+1}function ko(n,t,e){const s=n[t];n[t]=n[e],n[e]=s}function gC(n){let t=0;for(let e=0;e<n.length;e++)t+=n[e];return t}function N(n,t){if(!n)throw new Error(typeof t=="string"?t:t())}function Sn(n,t,e=""){N(Kt(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function Am(n){N(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function L(n){if(n.length===0)return 1;let t=n[0];for(let e=1;e<n.length;e++)t*=n[e];return t}function Kt(n,t){if(n===t)return!0;if(n==null||t==null||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}function Co(n){return n%1===0}function Vd(n){const t=Math.ceil(Math.sqrt(n));return[t,Math.ceil(n/t)]}function $o(n,t){return t<=n.length?n:n+" ".repeat(t-n.length)}function Dm(n,t=r=>0,e,s){return new Promise((r,o)=>{let a=0;const i=()=>{if(n()){r();return}a++;const l=t(a);if(e!=null&&a>=e){o();return}s!=null?s(i,l):setTimeout(i,l)};i()})}function Ud(n,t){let e=1,s=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)e*=n[o];else if(n[o]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${o}`);s=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(s===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${n}`);return n}if(e===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const r=n.slice();return r[s]=t/e,r}function Et(n,t){const e=t.length;return n=n==null?t.map((s,r)=>r):[].concat(n),N(n.every(s=>s>=-e&&s<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${n}`),N(n.every(s=>Co(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?e+s:s)}function Xs(n,t){const e=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,o=t==null||r?null:Et(t,n).sort();let a=0;for(let i=0;i<n.length;++i){if(o!=null){if(o[a]===i&&n[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${n[i]}' is not 1`);(o[a]==null||o[a]>i)&&n[i]===1&&(e.push(n[i]),s.push(i)),o[a]<=i&&a++}n[i]!==1&&(e.push(n[i]),s.push(i))}return{newShape:e,keptDims:s}}function qe(n,t){return Ie(n,t)}function Ie(n,t){let e=null;if(n==null||n==="float32")e=new Float32Array(t);else if(n==="int32")e=new Int32Array(t);else if(n==="bool")e=new Uint8Array(t);else if(n==="string")e=new Array(t);else throw new Error(`Unknown data type ${n}`);return e}function bC(n,t){for(let e=0;e<n.length;e++){const s=n[e];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function xC(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function Fm(n,t){return!(t==="complex64"||t==="float32"&&n!=="complex64"||t==="int32"&&n!=="float32"&&n!=="complex64"||t==="bool"&&n==="bool")}function vo(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function yC(n){if(n==null)return 0;let t=0;return n.forEach(e=>t+=e.length),t}function Ni(n){return typeof n=="string"||n instanceof String}function wC(n){return typeof n=="boolean"}function Gd(n){return typeof n=="number"}function Sr(n){return Array.isArray(n)?Sr(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Gd(n)?"float32":Ni(n)?"string":wC(n)?"bool":"float32"}function Hd(n){return!!(n&&n.constructor&&n.call&&n.apply)}function jd(n,t){for(let e=t;e<n;++e)if(n%e===0)return e;return n}function pt(n){const t=n.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=n[t-1];for(let s=t-3;s>=0;--s)e[s]=e[s+1]*n[s+1];return e}function Mm(n,t,e,s=!1){const r=new Array;if(t.length===1){const o=t[0]*(s?2:1);for(let a=0;a<o;a++)r[a]=e[n+a]}else{const o=t[0],a=t.slice(1),i=a.reduce((l,c)=>l*c)*(s?2:1);for(let l=0;l<o;l++)r[l]=Mm(n+l*i,a,e,s)}return r}function Qn(n,t,e=!1){if(n.length===0)return t[0];const s=n.reduce((r,o)=>r*o)*(e?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${n}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return Mm(0,n,t,e)}function IC(n,t){if(Array.isArray(n))return n;if(t==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(t==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${t}`)}function qd(n,t){const e=Ke(n,t);for(let s=0;s<e.length;s++)e[s]=1;return e}function Ke(n,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${t}`)}function Om(n,t){const e=n.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return Qn(n,new Float32Array(e));if(t==="int32")return Qn(n,new Int32Array(e));if(t==="bool")return Qn(n,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function Fs(n){n.forEach(t=>{N(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function fs(n,t,e){if(t===0)return 0;if(t===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=e[r]*n[r];return s}function So(n,t,e){if(t===0)return[];if(t===1)return[n];const s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/e[r]),n-=s[r]*e[r];return s[s.length-1]=n,s}function Kd(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lm="tfjsflags";class kC{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=CC,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,s){if(this.flagRegistry[t]={evaluationFn:e,setHook:s},this.urlFlags[t]!=null){const r=this.urlFlags[t];H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${r}.`),this.set(t,r)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Kd(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=this.getQueryParams(this.global.location.search);Lm in t&&t[Lm].split(",").forEach(s=>{const[r,o]=s.split(":");this.urlFlags[r]=vC(r,o)})}}function CC(n){const t={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...s)=>($C(t,s[0],s[1]),s.join("="))),t}function $C(n,t,e){n[decodeURIComponent(t)]=decodeURIComponent(e||"")}function vC(n,t){const e=t.toLowerCase();return e==="true"||e==="false"?e==="true":`${+e}`===e?+e:t}function H(){return Pm}let Pm=null;function SC(n){Pm=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Xd;function Bm(){if(Xd==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");Xd=n}return Xd}function NC(){const n=Bm();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Yd(n,t){const e=NC();if(e.has(n))return e.get(n);{const s=t();return e.set(n,s),e.get(n)}}const Ti="Abs",No="Acos",To="Acosh",Nr="Add",_i="AddN",Ei="All",Ri="Any",Ai="ArgMax",Di="ArgMin",_o="Asin",Eo="Asinh",Ro="Atan",Ao="Atanh",Do="Atan2",Fo="AvgPool",wl="AvgPoolGrad",Fi="AvgPool3D",Il="AvgPool3DGrad",Mo="BatchMatMul",Mi="BatchToSpaceND",Oi="Bincount",kl="BitwiseAnd",TC="BroadcastTo",Zd="BroadcastArgs",Oo="Cast",Lo="Ceil",Tr="ClipByValue",Jd="Complex",Cl="ComplexAbs",Li="Concat",Po="Conv2D",Qd="Conv2DBackpropFilter",Bo="Conv2DBackpropInput",zo="Conv3D",Pi="Conv3DBackpropFilterV2",Bi="Conv3DBackpropInputV2",Wo="Cos",Vo="Cosh",zi="Cumprod",Uo="Cumsum",Wi="CropAndResize",$l="DenseBincount",Vi="DepthToSpace",Go="DepthwiseConv2dNative",th="DepthwiseConv2dNativeBackpropFilter",eh="DepthwiseConv2dNativeBackpropInput",nh="Diag",Ho="Dilation2D",Ui="Dilation2DBackpropInput",Gi="Dilation2DBackpropFilter",_C="Draw",jo="RealDiv",sh="Einsum",qo="Elu",Hi="EluGrad",Ko="Erf",ji="Equal",Xo="Exp",qi="ExpandDims",Yo="Expm1",rh="FFT",vl="Fill",Ki="FlipLeftRight",Zo="Floor",Jo="FloorDiv",Qo="FusedBatchNorm",Xi="GatherV2",Sl="GatherNd",Yi="Greater",ta="GreaterEqual",ea="Identity",oh="IFFT",ah="Imag",na="IsFinite",sa="IsInf",ra="IsNan",oa="LeakyRelu",Zi="Less",Ji="LessEqual",Qi="LinSpace",aa="Log",ia="Log1p",tu="LogicalAnd",eu="LogicalNot",nu="LogicalOr",EC="LogicalXor",RC="LogSoftmax",ua="LRN",su="LRNGrad",la="Max",ca="Maximum",da="MaxPool",Nl="MaxPoolGrad",ru="MaxPool3D",Tl="MaxPool3DGrad",ih="MaxPoolWithArgmax",ha="Mean",pa="Min",fa="Minimum",ma="MirrorPad",ga="Mod",_l="Multinomial",ba="Multiply",ou="Neg",au="NotEqual",iu="NonMaxSuppressionV3",uu="NonMaxSuppressionV4",lu="NonMaxSuppressionV5",cu="OnesLike",xa="OneHot",du="Pack",ya="PadV2",wa="Pow",Ia="Prelu",ka="Prod",zm="RaggedGather",Wm="RaggedRange",Vm="RaggedTensorToTensor",El="Range",uh="Real",Ca="Reciprocal",$a="Relu",hu="Reshape",va="ResizeNearestNeighbor",pu="ResizeNearestNeighborGrad",Sa="ResizeBilinear",fu="ResizeBilinearGrad",Na="Relu6",Ta="Reverse",_a="Round",Ea="Rsqrt",Rl="ScatterNd",Al="TensorScatterUpdate",Dl="SearchSorted",mu="Select",Ra="Selu",gu="Slice",Aa="Sin",Da="Sinh",Fa="Sign",Ma="Sigmoid",Oa="Softplus",La="Sqrt",Pa="Sum",bu="SpaceToBatchND",xu="SplitV",Ba="Softmax",lh="SparseFillEmptyRows",Fl="SparseReshape",ch="SparseSegmentMean",dh="SparseSegmentSum",Ml="SparseToDense",za="SquaredDifference",Ol="Square",hh="StaticRegexReplace",yu="StridedSlice",ph="StringNGrams",fh="StringSplit",mh="StringToHashBucketFast",Wa="Sub",Va="Tan",Ua="Tanh",_r="Tile",wu="TopK",Iu="Transform",Ys="Transpose",Ll="Unique",ku="Unpack",Pl="UnsortedSegmentSum",Cu="ZerosLike",Er="Step",AC="FromPixels",$u="RotateWithOffset",Ga="_FusedMatMul",Ha="FusedConv2D",Bl="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nn(...n){H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(...n)}function DC(...n){H().getBool("IS_TEST")||H().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zl=Yd("kernelRegistry",()=>new Map),gh=Yd("gradRegistry",()=>new Map);function Um(n,t){const e=jm(n,t);return zl.get(e)}function Gm(n){return gh.get(n)}function Hm(n){const t=zl.entries(),e=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[o,a]=r,[i]=o.split("_");i===n&&e.push(a)}return e}function bh(n){const{kernelName:t,backendName:e}=n,s=jm(t,e);zl.has(s)&&Nn(`The kernel '${t}' for backend '${e}' is already registered`),zl.set(s,n)}function FC(n){const{kernelName:t}=n;gh.has(t)&&H().getBool("DEBUG")&&Nn(`Overriding the gradient for '${t}'`),gh.set(t,n)}function jm(n,t){return`${t}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qm(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var Km=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function xh(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function MC(n){if(Object.prototype.hasOwnProperty.call(n,"__esModule"))return n;var t=n.default;if(typeof t=="function"){var e=function s(){return this instanceof s?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};e.prototype=t.prototype}else e={};return Object.defineProperty(e,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var r=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(e,s,r.get?r:{enumerable:!0,get:function(){return n[s]}})}),e}var yh,Xm;function OC(){if(Xm)return yh;Xm=1,yh=t;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function t($,k,R){this.low=$|0,this.high=k|0,this.unsigned=!!R}t.prototype.__isLong__,Object.defineProperty(t.prototype,"__isLong__",{value:!0});function e($){return($&&$.__isLong__)===!0}t.isLong=e;var s={},r={};function o($,k){var R,F,B;return k?($>>>=0,(B=0<=$&&$<256)&&(F=r[$],F)?F:(R=i($,($|0)<0?-1:0,!0),B&&(r[$]=R),R)):($|=0,(B=-128<=$&&$<128)&&(F=s[$],F)?F:(R=i($,$<0?-1:0,!1),B&&(s[$]=R),R))}t.fromInt=o;function a($,k){if(isNaN($))return k?x:b;if(k){if($<0)return x;if($>=f)return S}else{if($<=-9223372036854776e3)return T;if($+1>=m)return C}return $<0?a(-$,k).neg():i($%p|0,$/p|0,k)}t.fromNumber=a;function i($,k,R){return new t($,k,R)}t.fromBits=i;var l=Math.pow;function c($,k,R){if($.length===0)throw Error("empty string");if($==="NaN"||$==="Infinity"||$==="+Infinity"||$==="-Infinity")return b;if(typeof k=="number"?(R=k,k=!1):k=!!k,R=R||10,R<2||36<R)throw RangeError("radix");var F;if((F=$.indexOf("-"))>0)throw Error("interior hyphen");if(F===0)return c($.substring(1),k,R).neg();for(var B=a(l(R,8)),M=b,z=0;z<$.length;z+=8){var j=Math.min(8,$.length-z),V=parseInt($.substring(z,z+j),R);if(j<8){var q=a(l(R,j));M=M.mul(q).add(a(V))}else M=M.mul(B),M=M.add(a(V))}return M.unsigned=k,M}t.fromString=c;function u($,k){return typeof $=="number"?a($,k):typeof $=="string"?c($,k):i($.low,$.high,typeof k=="boolean"?k:$.unsigned)}t.fromValue=u;var d=65536,h=1<<24,p=d*d,f=p*p,m=f/2,g=o(h),b=o(0);t.ZERO=b;var x=o(0,!0);t.UZERO=x;var y=o(1);t.ONE=y;var w=o(1,!0);t.UONE=w;var I=o(-1);t.NEG_ONE=I;var C=i(-1,2147483647,!1);t.MAX_VALUE=C;var S=i(-1,-1,!0);t.MAX_UNSIGNED_VALUE=S;var T=i(0,-2147483648,!1);t.MIN_VALUE=T;var v=t.prototype;return v.toInt=function(){return this.unsigned?this.low>>>0:this.low},v.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},v.toString=function(k){if(k=k||10,k<2||36<k)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(T)){var R=a(k),F=this.div(R),B=F.mul(R).sub(this);return F.toString(k)+B.toInt().toString(k)}else return"-"+this.neg().toString(k);for(var M=a(l(k,6),this.unsigned),z=this,j="";;){var V=z.div(M),q=z.sub(V.mul(M)).toInt()>>>0,X=q.toString(k);if(z=V,z.isZero())return X+j;for(;X.length<6;)X="0"+X;j=""+X+j}},v.getHighBits=function(){return this.high},v.getHighBitsUnsigned=function(){return this.high>>>0},v.getLowBits=function(){return this.low},v.getLowBitsUnsigned=function(){return this.low>>>0},v.getNumBitsAbs=function(){if(this.isNegative())return this.eq(T)?64:this.neg().getNumBitsAbs();for(var k=this.high!=0?this.high:this.low,R=31;R>0&&(k&1<<R)==0;R--);return this.high!=0?R+33:R+1},v.isZero=function(){return this.high===0&&this.low===0},v.eqz=v.isZero,v.isNegative=function(){return!this.unsigned&&this.high<0},v.isPositive=function(){return this.unsigned||this.high>=0},v.isOdd=function(){return(this.low&1)===1},v.isEven=function(){return(this.low&1)===0},v.equals=function(k){return e(k)||(k=u(k)),this.unsigned!==k.unsigned&&this.high>>>31===1&&k.high>>>31===1?!1:this.high===k.high&&this.low===k.low},v.eq=v.equals,v.notEquals=function(k){return!this.eq(k)},v.neq=v.notEquals,v.ne=v.notEquals,v.lessThan=function(k){return this.comp(k)<0},v.lt=v.lessThan,v.lessThanOrEqual=function(k){return this.comp(k)<=0},v.lte=v.lessThanOrEqual,v.le=v.lessThanOrEqual,v.greaterThan=function(k){return this.comp(k)>0},v.gt=v.greaterThan,v.greaterThanOrEqual=function(k){return this.comp(k)>=0},v.gte=v.greaterThanOrEqual,v.ge=v.greaterThanOrEqual,v.compare=function(k){if(e(k)||(k=u(k)),this.eq(k))return 0;var R=this.isNegative(),F=k.isNegative();return R&&!F?-1:!R&&F?1:this.unsigned?k.high>>>0>this.high>>>0||k.high===this.high&&k.low>>>0>this.low>>>0?-1:1:this.sub(k).isNegative()?-1:1},v.comp=v.compare,v.negate=function(){return!this.unsigned&&this.eq(T)?T:this.not().add(y)},v.neg=v.negate,v.add=function(k){e(k)||(k=u(k));var R=this.high>>>16,F=this.high&65535,B=this.low>>>16,M=this.low&65535,z=k.high>>>16,j=k.high&65535,V=k.low>>>16,q=k.low&65535,X=0,Z=0,Q=0,J=0;return J+=M+q,Q+=J>>>16,J&=65535,Q+=B+V,Z+=Q>>>16,Q&=65535,Z+=F+j,X+=Z>>>16,Z&=65535,X+=R+z,X&=65535,i(Q<<16|J,X<<16|Z,this.unsigned)},v.subtract=function(k){return e(k)||(k=u(k)),this.add(k.neg())},v.sub=v.subtract,v.multiply=function(k){if(this.isZero())return b;if(e(k)||(k=u(k)),n){var R=n.mul(this.low,this.high,k.low,k.high);return i(R,n.get_high(),this.unsigned)}if(k.isZero())return b;if(this.eq(T))return k.isOdd()?T:b;if(k.eq(T))return this.isOdd()?T:b;if(this.isNegative())return k.isNegative()?this.neg().mul(k.neg()):this.neg().mul(k).neg();if(k.isNegative())return this.mul(k.neg()).neg();if(this.lt(g)&&k.lt(g))return a(this.toNumber()*k.toNumber(),this.unsigned);var F=this.high>>>16,B=this.high&65535,M=this.low>>>16,z=this.low&65535,j=k.high>>>16,V=k.high&65535,q=k.low>>>16,X=k.low&65535,Z=0,Q=0,J=0,ot=0;return ot+=z*X,J+=ot>>>16,ot&=65535,J+=M*X,Q+=J>>>16,J&=65535,J+=z*q,Q+=J>>>16,J&=65535,Q+=B*X,Z+=Q>>>16,Q&=65535,Q+=M*q,Z+=Q>>>16,Q&=65535,Q+=z*V,Z+=Q>>>16,Q&=65535,Z+=F*X+B*q+M*V+z*j,Z&=65535,i(J<<16|ot,Z<<16|Q,this.unsigned)},v.mul=v.multiply,v.divide=function(k){if(e(k)||(k=u(k)),k.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&k.low===-1&&k.high===-1)return this;var R=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,k.low,k.high);return i(R,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?x:b;var F,B,M;if(this.unsigned){if(k.unsigned||(k=k.toUnsigned()),k.gt(this))return x;if(k.gt(this.shru(1)))return w;M=x}else{if(this.eq(T)){if(k.eq(y)||k.eq(I))return T;if(k.eq(T))return y;var z=this.shr(1);return F=z.div(k).shl(1),F.eq(b)?k.isNegative()?y:I:(B=this.sub(k.mul(F)),M=F.add(B.div(k)),M)}else if(k.eq(T))return this.unsigned?x:b;if(this.isNegative())return k.isNegative()?this.neg().div(k.neg()):this.neg().div(k).neg();if(k.isNegative())return this.div(k.neg()).neg();M=b}for(B=this;B.gte(k);){F=Math.max(1,Math.floor(B.toNumber()/k.toNumber()));for(var j=Math.ceil(Math.log(F)/Math.LN2),V=j<=48?1:l(2,j-48),q=a(F),X=q.mul(k);X.isNegative()||X.gt(B);)F-=V,q=a(F,this.unsigned),X=q.mul(k);q.isZero()&&(q=y),M=M.add(q),B=B.sub(X)}return M},v.div=v.divide,v.modulo=function(k){if(e(k)||(k=u(k)),n){var R=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,k.low,k.high);return i(R,n.get_high(),this.unsigned)}return this.sub(this.div(k).mul(k))},v.mod=v.modulo,v.rem=v.modulo,v.not=function(){return i(~this.low,~this.high,this.unsigned)},v.and=function(k){return e(k)||(k=u(k)),i(this.low&k.low,this.high&k.high,this.unsigned)},v.or=function(k){return e(k)||(k=u(k)),i(this.low|k.low,this.high|k.high,this.unsigned)},v.xor=function(k){return e(k)||(k=u(k)),i(this.low^k.low,this.high^k.high,this.unsigned)},v.shiftLeft=function(k){return e(k)&&(k=k.toInt()),(k&=63)===0?this:k<32?i(this.low<<k,this.high<<k|this.low>>>32-k,this.unsigned):i(0,this.low<<k-32,this.unsigned)},v.shl=v.shiftLeft,v.shiftRight=function(k){return e(k)&&(k=k.toInt()),(k&=63)===0?this:k<32?i(this.low>>>k|this.high<<32-k,this.high>>k,this.unsigned):i(this.high>>k-32,this.high>=0?0:-1,this.unsigned)},v.shr=v.shiftRight,v.shiftRightUnsigned=function(k){if(e(k)&&(k=k.toInt()),k&=63,k===0)return this;var R=this.high;if(k<32){var F=this.low;return i(F>>>k|R<<32-k,R>>>k,this.unsigned)}else return k===32?i(R,0,this.unsigned):i(R>>>k-32,0,this.unsigned)},v.shru=v.shiftRightUnsigned,v.shr_u=v.shiftRightUnsigned,v.toSigned=function(){return this.unsigned?i(this.low,this.high,!1):this},v.toUnsigned=function(){return this.unsigned?this:i(this.low,this.high,!0)},v.toBytes=function(k){return k?this.toBytesLE():this.toBytesBE()},v.toBytesLE=function(){var k=this.high,R=this.low;return[R&255,R>>>8&255,R>>>16&255,R>>>24,k&255,k>>>8&255,k>>>16&255,k>>>24]},v.toBytesBE=function(){var k=this.high,R=this.low;return[k>>>24,k>>>16&255,k>>>8&255,k&255,R>>>24,R>>>16&255,R>>>8&255,R&255]},t.fromBytes=function(k,R,F){return F?t.fromBytesLE(k,R):t.fromBytesBE(k,R)},t.fromBytesLE=function(k,R){return new t(k[0]|k[1]<<8|k[2]<<16|k[3]<<24,k[4]|k[5]<<8|k[6]<<16|k[7]<<24,R)},t.fromBytesBE=function(k,R){return new t(k[4]<<24|k[5]<<16|k[6]<<8|k[7],k[0]<<24|k[1]<<16|k[2]<<8|k[3],R)},yh}var Ym=OC(),Zm=xh(Ym),LC=As({__proto__:null,default:Zm},[Ym]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rr=Zm||LC;function Wl(n){return Rr.fromString(n,!0,16)}const Jm=Wl("c3a5c85c97cb3127"),Ar=Wl("b492b66fbe98f273"),en=Wl("9ae16a3b2f90404f");function wh(n){return n.xor(n.shru(47))}function Qm(n,t,e){const s=n.slice(t,t+e);return Rr.fromBytes(Array.from(s),!0,!0)}function oe(n,t){return Qm(n,t,8)}function tg(n,t){return Qm(n,t,4)}function Me(n,t){return t===0?n:n.shru(t).or(n.shl(64-t))}function Zs(n,t,e=Wl("9ddfea08eb382d69")){let s=n.xor(t).mul(e);s=s.xor(s.shru(47));let r=t.xor(s).mul(e);return r=r.xor(r.shru(47)),r=r.mul(e),r}function PC(n,t,e,s,r,o){r=r.add(n),o=Me(o.add(r).add(s),21);const a=r;return r=r.add(t),r=r.add(e),o=o.add(Me(r,44)),[r.add(s),o.add(a)]}function Vl(n,t,e,s){return PC(oe(n,t),oe(n,t+8),oe(n,t+16),oe(n,t+24),e,s)}function BC(n,t=n.length){if(t>=8){const e=en.add(t*2),s=oe(n,0).add(en),r=oe(n,t-8),o=Me(r,37).mul(e).add(s),a=Me(s,25).add(r).mul(e);return Zs(o,a,e)}if(t>=4){const e=en.add(t*2),s=tg(n,0);return Zs(s.shl(3).add(t),tg(n,t-4),e)}if(t>0){const e=n[0],s=n[t>>1],r=n[t-1],o=e+(s<<8),a=t+(r<<2);return wh(en.mul(o).xor(Jm.mul(a))).mul(en)}return en}function zC(n,t=n.length){const e=en.add(t*2),s=oe(n,0).mul(Ar),r=oe(n,8),o=oe(n,t-8).mul(e),a=oe(n,t-16).mul(en);return Zs(Me(s.add(r),43).add(Me(o,30)).add(a),s.add(Me(r.add(en),18)).add(o),e)}function WC(n,t=n.length){const e=en.add(t*2),s=oe(n,0).mul(en),r=oe(n,8),o=oe(n,t-8).mul(e),a=oe(n,t-16).mul(en),i=Me(s.add(r),43).add(Me(o,30)).add(a),l=Zs(i,s.add(Me(r.add(en),18)).add(o),e),c=oe(n,16).mul(e),u=oe(n,24),d=i.add(oe(n,t-32)).mul(e),h=l.add(oe(n,t-24)).mul(e);return Zs(Me(c.add(u),43).add(Me(d,30)).add(h),c.add(Me(u.add(s),18)).add(d),e)}function VC(n,t=n.length){const e=Rr.fromNumber(81,!0);if(t<=32)return t<=16?BC(n,t):zC(n,t);if(t<=64)return WC(n,t);let s=e,r=e.mul(Ar).add(113),o=wh(r.mul(en).add(113)).mul(en),a=[Rr.UZERO,Rr.UZERO],i=[Rr.UZERO,Rr.UZERO];s=s.mul(en).add(oe(n,0));let l=0;const c=(t-1>>6)*64,u=c+(t-1&63)-63;do s=Me(s.add(r).add(a[0]).add(oe(n,l+8)),37).mul(Ar),r=Me(r.add(a[1]).add(oe(n,l+48)),42).mul(Ar),s=s.xor(i[1]),r=r.add(a[0]).add(oe(n,l+40)),o=Me(o.add(i[0]),33).mul(Ar),a=Vl(n,l,a[1].mul(Ar),s.add(i[0])),i=Vl(n,l+32,o.add(i[1]),r.add(oe(n,l+16))),[o,s]=[s,o],l+=64;while(l!==c);const d=Ar.add(o.and(255).shl(1));return l=u,i[0]=i[0].add(t-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),s=Me(s.add(r).add(a[0]).add(oe(n,l+8)),37).mul(d),r=Me(r.add(a[1]).add(oe(n,l+48)),42).mul(d),s=s.xor(i[1].mul(9)),r=r.add(a[0].mul(9).add(oe(n,l+40))),o=Me(o.add(i[0]),33).mul(d),a=Vl(n,l,a[1].mul(d),s.add(i[0])),i=Vl(n,l+32,o.add(i[1]),r.add(oe(n,l+16))),[o,s]=[s,o],Zs(Zs(a[0],i[0],d).add(wh(r).mul(Jm)).add(o),Zs(a[1],i[1],d).add(s),d)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Js(n,t){return t==="string"?Qs(n):Dr([n],t)}function UC(n,t){return n instanceof Float32Array&&t==="float32"||n instanceof Int32Array&&t==="int32"||n instanceof Uint8Array&&t==="bool"}function Dr(n,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=Fr(n)),H().getBool("DEBUG")&&bC(n,t),UC(n,t))return n;if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool"){const e=new Uint8Array(n.length);for(let s=0;s<e.length;++s)Math.round(n[s])!==0&&(e[s]=1);return e}else throw new Error(`Unknown data type ${t}`)}function Xe(){return H().platform.now()}function GC(n,t){return H().platform.fetch(n,t)}function Qs(n,t="utf-8"){return t=t||"utf-8",H().platform.encode(n,t)}function tr(n,t="utf-8"){return t=t||"utf-8",H().platform.decode(n,t)}function zn(n){return H().platform.isTypedArray!=null?H().platform.isTypedArray(n):qm(n)}function Fr(n,t=[],e=!1){if(t==null&&(t=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||Kd(n)||n==null||zn(n)&&e)t.push(n);else if(Array.isArray(n)||zn(n))for(let s=0;s<n.length;++s)Fr(n[s],t,e);else{let s=-1;for(const r of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)Fr(n[r],t,e)}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HC{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new qC)}profileKernel(t,e,s){let r;const o=()=>{r=s()};let a;const i=Xe();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(o);else{o();for(const c of r)c.dataSync();a=Promise.resolve({kernelMs:Xe()-i})}if(H().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<r.length;c++){const u=r[c];u.data().then(d=>{jC(d,u.dtype,t)})}return{kernelName:t,outputs:r,inputs:e,timeMs:a.then(c=>c.kernelMs),extraInfo:a.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:s,timeMs:r,inputs:o,extraInfo:a}=t;s.forEach(i=>{Promise.all([i.data(),r,a]).then(l=>{this.logger.logKernelProfile(e,i,l[0],l[1],o,l[2])})})}}function jC(n,t,e){if(t!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${e}'`),!0}return!1}class qC{logKernelProfile(t,e,s,r,o,a){const i=typeof r=="number"?$o(`${r}ms`,9):r.error,l=$o(t,25),c=e.rank,u=e.size,d=$o(e.shape.toString(),14);let h="";for(const p in o){const f=o[p];if(f!=null){const m=f.shape||e.shape,g=m.length;h+=`${p}: ${g}D ${g>0?m:""} `}}console.log(`%c${l}	%c${i}	%c${c}D ${d}	%c${u}	%c${h}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KC(n,t,e){const s={},r={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<n.length;l++){const c=n[l],u=c.inputs;for(const d in u){const h=u[d];let p=!1;for(let f=0;f<t.length;f++)if(s[h.id]){c.outputs.forEach(m=>s[m.id]=!0),p=!0,r[c.id]=!0;break}if(p)break}}const o={};o[e.id]=!0;const a={};for(let l=n.length-1;l>=0;l--){const c=n[l],u=c.inputs;for(let d=0;d<c.outputs.length;d++)if(o[c.outputs[d].id]){for(const h in u)o[u[h].id]=!0,a[c.id]=!0;break}}const i=[];for(let l=0;l<n.length;l++){const c=n[l];if(r[c.id]&&a[c.id]){const u={};for(const h in c.inputs){const p=c.inputs[h];s[p.id]&&(u[h]=p)}const d=Object.assign({},c);d.inputs=u,d.outputs=c.outputs,i.push(d)}}return i}function XC(n,t,e,s){for(let r=t.length-1;r>=0;r--){const o=t[r],a=[];if(o.outputs.forEach(l=>{const c=n[l.id];c!=null?a.push(c):a.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(a);for(const l in o.inputs){if(!(l in i))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(i)}.`);const c=e(()=>i[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);const u=o.inputs[l];if(!Kt(c.shape,u.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(n[u.id]==null)n[u.id]=c;else{const d=n[u.id];n[u.id]=s(d,c),d.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eg=20,vu=3,Ih=7;function YC(n,t,e,s){const r=pt(t),o=ZC(n,t,e,r),a=t.length,i=Ul(n,t,e,r,o),l=["Tensor"];return s&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${a}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(i.map(c=>"    "+c).join(`
`)),l.join(`
`)}function ZC(n,t,e,s){const r=L(t),o=s[s.length-1],a=new Array(o).fill(0),i=t.length,l=e==="complex64"?Nu(n):n;if(i>1)for(let c=0;c<r/o;c++){const u=c*o;for(let d=0;d<o;d++)a[d]=Math.max(a[d],Su(l[u+d],0,e).length)}return a}function Su(n,t,e){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(Ih))} + ${parseFloat(n[1].toFixed(Ih))}j`:Ni(n)?s=`'${n}'`:e==="bool"?s=ng(n):s=parseFloat(n.toFixed(Ih)).toString(),$o(s,t)}function ng(n){return n===0?"false":"true"}function Ul(n,t,e,s,r,o=!0){const a=e==="complex64"?2:1,i=t[0],l=t.length;if(l===0){if(e==="complex64"){const m=Nu(n);return[Su(m[0],0,e)]}return e==="bool"?[ng(n[0])]:[n[0].toString()]}if(l===1){if(i>eg){const g=vu*a;let b=Array.from(n.slice(0,g)),x=Array.from(n.slice((i-vu)*a,i*a));return e==="complex64"&&(b=Nu(b),x=Nu(x)),["["+b.map((y,w)=>Su(y,r[w],e)).join(", ")+", ..., "+x.map((y,w)=>Su(y,r[i-vu+w],e)).join(", ")+"]"]}return["["+(e==="complex64"?Nu(n):Array.from(n)).map((g,b)=>Su(g,r[b],e)).join(", ")+"]"]}const c=t.slice(1),u=s.slice(1),d=s[0]*a,h=[];if(i>eg){for(let m=0;m<vu;m++){const g=m*d,b=g+d;h.push(...Ul(n.slice(g,b),c,e,u,r,!1))}h.push("...");for(let m=i-vu;m<i;m++){const g=m*d,b=g+d;h.push(...Ul(n.slice(g,b),c,e,u,r,m===i-1))}}else for(let m=0;m<i;m++){const g=m*d,b=g+d;h.push(...Ul(n.slice(g,b),c,e,u,r,m===i-1))}const p=l===2?",":"";h[0]="["+(i>0?h[0]+p:"");for(let m=1;m<h.length-1;m++)h[m]=" "+h[m]+p;let f=`,
`;for(let m=2;m<l;m++)f+=`
`;return h[h.length-1]=" "+h[h.length-1]+"]"+(o?"":f),h}function Nu(n){const t=[];for(let e=0;e<n.length;e+=2)t.push([n[e],n[e+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ze{constructor(t,e,s){if(this.dtype=e,this.shape=t.slice(),this.size=L(t),s!=null){const r=s.length;N(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Ie(e,this.size),this.strides=pt(t)}set(t,...e){e.length===0&&(e=[0]),N(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const s=this.locToIndex(e);this.values[s]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(const r of t){if(r<0||r>=this.shape[e]){const o=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(o)}e++}let s=t[t.length-1];for(let r=0;r<t.length-1;++r)s+=this.strides[r]*t[r];return this.values[s]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let s=0;s<t.length-1;++s)e+=this.strides[s]*t[s];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const e=new Array(this.shape.length);for(let s=0;s<e.length-1;++s)e[s]=Math.floor(t/this.strides[s]),t-=e[s]*this.strides[s];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return ts().makeTensor(this.values,this.shape,this.dtype)}}let ts=null,ja=null;function JC(n){ts=n}function QC(n){ja=n}class Te{constructor(t,e,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=L(t),this.strides=pt(t),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return ja.buffer(this.shape,this.dtype,t)}bufferSync(){return ja.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Qn(this.shape,t,this.dtype==="complex64")}arraySync(){return Qn(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=ts().read(this.dataId);if(this.dtype==="string"){const e=await t;try{return e.map(s=>tr(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),ts().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=ts().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>tr(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await ts().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),ts().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return ja.print(this,t)}clone(){return this.throwIfDisposed(),ja.clone(this)}toString(t=!1){const e=this.dataSync();return YC(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),ja.cast(this,t)}variable(t=!0,e,s){return this.throwIfDisposed(),ts().makeVariable(this,t,e,s)}}Object.defineProperty(Te,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function K(){return Yd("Tensor",()=>Te)}K();class Gl extends Te{constructor(t,e,s,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=s}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Kt(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);ts().disposeTensor(this),this.dataId=t.dataId,ts().incRef(this,null)}dispose(){ts().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Gl,Symbol.hasInstance,{value:n=>n instanceof Te&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var sg;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(sg||(sg={}));var kh;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(kh||(kh={}));var Ch;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(Ch||(Ch={}));var $h;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})($h||($h={}));var vh;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(vh||(vh={}));const t$={float32:$h,int32:kh,bool:Ch,complex64:vh};function xn(n,t){if(n==="string"||t==="string"){if(n==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${n} with ${t}`)}return t$[n][t]}function Sh(n){return xn(n,"int32")}function rg(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function og(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ke(n,t){if(n.dtype===t.dtype)return[n,t];const e=xn(n.dtype,t.dtype);return[n.cast(e),t.cast(e)]}function ag(n){const t=[];return ig(n,t,new Set),t}function ig(n,t,e){if(n==null)return;if(n instanceof Te){t.push(n);return}if(!e$(n))return;const s=n;for(const r in s){const o=s[r];e.has(o)||(e.add(o),ig(o,t,e))}}function e$(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nh(n){return n.kernelName!=null}class ug{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class qa{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ug}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,s=1){return t in this.registryFactory?(Nn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:s},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:e,asyncInit:s}=this.initializeBackend(t);if(!(s?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new HC(this.backendInstance),!0}setupRegisteredKernels(){Hm(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Hm(t).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const s=e.factory();if(s&&!(s instanceof yl)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,o=s.then(a=>r<this.pendingBackendInitId?!1:(this.registry[t]=a,this.pendingBackendInit=null,!0)).catch(a=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,Nn(`Initialization of backend ${t} failed`),Nn(a.stack||a.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[t]=s,{success:!0,asyncInit:!1}}catch(s){return Nn(`Initialization of backend ${t} failed`),Nn(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e],{success:r,asyncInit:o}=this.initializeBackend(s);if(o||r)return{name:s,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const s=this.state.tensorInfo.get(e),r=s.backend,o=this.readSync(e),a=r.refCount(e);r.disposeData(e,!0),s.backend=t,t.move(e,o,s.shape,s.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let s=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=e(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(t,e,s){t();try{const r=s();return e(),r}catch(r){throw e(),r}}nextTensorId(){return qa.nextTensorId++}nextVariableId(){return qa.nextVariableId++}clone(t){const e=O.runKernel(ea,{x:t}),s={x:t},r=a=>({x:()=>{const i="float32",l={x:a},c={dtype:i};return O.runKernel(Oo,l,c)}}),o=[];return this.addTapeNode(this.state.activeScope.name,s,[e],r,o,{}),e}runKernel(t,e,s){if(this.backendName==null&&this.backend,!(Um(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,s){const r=this.backend.numDataIds();let o=0;s.forEach(l=>{o+=l.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-e-o-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t){let e,s=[];const r=this.isTapeOn(),o=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let l;const c=Nh(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Nh(t)){const{kernelName:f,inputs:m,attrs:g}=t;this.backendName==null&&this.backend;const b=Um(f,this.backendName);N(b!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),i=()=>{const x=this.backend.numDataIds();l=b.kernelFunc({inputs:m,attrs:g,backend:this.backend});const y=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,x,y);const w=y.map(I=>I.rank!=null?I:this.makeTensorFromTensorInfo(I));if(r){const I=this.getTensorsForGradient(f,m,w);s=this.saveTensorsForBackwardMode(I)}return w}}else{const{forwardFunc:f}=t,m=g=>{r&&(s=g.map(b=>this.keep(this.clone(b))))};i=()=>{const g=this.backend.numDataIds();l=this.tidy(()=>f(this.backend,m));const b=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,g,b),b}}const{inputs:u,attrs:d}=t,h=Nh(t)?null:t.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=i():(p=this.profiler.profileKernel(c,u,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),e=p.outputs)}),r&&this.addTapeNode(c,u,e,h,s,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(f=>u[f]!=null?u[f].shape:null),outputShapes:e.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(l)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(t,e,s){const r=Gm(t);if(r!=null){const o=r.inputsToSave||[],a=r.outputsToSave||[];let i;r.saveAllInputs?(N(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(e).map(c=>e[c])):i=o.map(c=>e[c]);const l=s.filter((c,u)=>a[u]);return i.concat(l)}return[]}makeTensor(t,e,s,r){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let o=t;s==="string"&&Ni(t[0])&&(o=t.map(l=>Qs(l)));const a=r.write(o,e,s),i=new Te(e,s,a,this.nextTensorId());if(this.trackTensor(i,r),s==="string"){const l=this.state.tensorInfo.get(a),c=yC(o);this.state.numBytes+=c-l.bytes,l.bytes=c}return i}makeTensorFromDataId(t,e,s,r){s=s||"float32";const o={dataId:t,shape:e,dtype:s};return this.makeTensorFromTensorInfo(o,r)}makeTensorFromTensorInfo(t,e){const{dataId:s,shape:r,dtype:o}=t,a=new Te(r,o,s,this.nextTensorId());return this.trackTensor(a,e),a}makeVariable(t,e=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==t.dtype&&(t=t.cast(r));const o=new Gl(t,e,s,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let s=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(s=t.size*vo(t.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:s})),t instanceof Gl||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const s=t.size*vo(t.dtype);this.state.numBytes-=s}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,s,r,o,a){const i={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:s,saved:o},l=Gm(t);l!=null&&(r=l.gradFunc),r!=null&&(i.gradient=c=>(c=c.map((u,d)=>{if(u==null){const h=s[d],p=Ke(h.size,h.dtype);return this.makeTensor(p,h.shape,h.dtype)}return u}),r(c.length>1?c:c[0],o,a))),this.state.activeTape.push(i)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=ag(t),s=new Set(e.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const a=this.state.activeScope.track[o];!a.kept&&!s.has(a.id)&&a.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(o=>{!o.kept&&o.scopeId===r.id&&this.track(o)})}gradients(t,e,s,r=!1){if(N(e.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));N(o instanceof Te,()=>"The result y returned by f() must be a tensor.");const a=KC(this.state.activeTape,e,o);if(!r&&a.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const i={};i[o.id]=s??n$(o.shape),XC(i,a,c=>this.tidy(c),s$);const l=e.map(c=>i[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const u of c.saved)u.dispose()}),this.state.activeTape=null),{value:o,grads:l}})}customGrad(t){return N(Hd(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{N(e.every(i=>i instanceof Te),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};e.forEach((i,l)=>{r[l]=i});const o=(i,l)=>(s=t(...e,l),N(s.value instanceof Te,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),N(Hd(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),a=(i,l)=>{const c=s.gradFunc(i,l),u=Array.isArray(c)?c:[c];N(u.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),N(u.every(h=>h instanceof Te),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return u.forEach((h,p)=>{d[p]=()=>h}),d};return this.runKernelFunc({forwardFunc:o,backwardsFunc:a,inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=Xe(),s=await this.backend.time(t);return s.wallMs=Xe()-e,s}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ug;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}qa.nextTensorId=0,qa.nextVariableId=0;function n$(n){const t=qd(L(n),"float32");return O.makeTensor(t,n,"float32")}function lg(){const n=Bm();if(n._tfengine==null){const t=new kC(n);n._tfengine=new qa(t)}return SC(n._tfengine.ENV),JC(()=>n._tfengine),n._tfengine}const O=lg();function s$(n,t){const e={a:n,b:t};return O.runKernel(Nr,e)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r$(){return typeof navigator<"u"&&navigator!=null}function cg(n){if(n||r$()){if(n||(n=navigator),n.product==="ReactNative")return!0;const t=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!t){const e=n;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function dg(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ln=H();ln.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),ln.registerFlag("IS_BROWSER",()=>dg()),ln.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u"),ln.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),ln.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),ln.registerFlag("PROD",()=>!1),ln.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ln.getBool("DEBUG")),ln.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),ln.registerFlag("IS_TEST",()=>!1),ln.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>ln.getBool("DEBUG")),ln.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),ln.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),ln.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hl(n,t){let e=n;if(zn(n))return t==="string"?[]:[n.length];if(rg(n)){const r=n.channels||"RGBA";return[n.height,n.width*r.length]}else if(og(n))return[n.buffer.size/(t==null?4:vo(t))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(e)||zn(e)&&t!=="string";)s.push(e.length),e=e[0];return Array.isArray(n)&&H().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&hg(n,s,[]),s}function hg(n,t,e){if(e=e||[],!Array.isArray(n)&&!zn(n)){N(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}N(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${n.length} elements`),N(n.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${n.length} elements`);const s=t.slice(1);for(let r=0;r<n.length;++r)hg(n[r],s,e.concat(r))}function pg(n,t,e,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==t||n==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${s}' must be ${n} tensor, but got ${t} tensor`)}}function _(n,t,e,s="numeric"){if(n instanceof K())return pg(s,n.dtype,t,e),n;let r=Sr(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),pg(s,r,t,e),n==null||!zn(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const l=n==null?"null":n.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${l}'`)}const o=Hl(n,r);!zn(n)&&!Array.isArray(n)&&(n=[n]);const i=r!=="string"?Dr(n,r):Fr(n,[],!0);return O.makeTensor(i,o,r)}function fg(n,t,e,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,a)=>_(o,`${t}[${a}]`,e,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o$="__op";function P(n){const t=Object.keys(n);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const s=n[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+o$;const r=(...o)=>{O.startScope(e);try{const a=s(...o);return Kd(a)&&console.error("Cannot return a Promise inside of tidy."),O.endScope(a),a}catch(a){throw O.endScope(null),a}};return Object.defineProperty(r,"name",{value:e,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a$(n,t){const e=_(n,"real","complex"),s=_(t,"imag","complex");Sn(e.shape,s.shape,`real and imag shapes, ${e.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:e,imag:s};return O.runKernel(Jd,r)}const Mr=P({complex_:a$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jl(n,t,e,s){if(s==null)s=Sr(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(og(n)||rg(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return O.backend.createTensorFromGPUData(n,t||e,s)}if(!zn(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Fs(t);const r=L(t),o=L(e);N(r===o,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${o}`);for(let a=0;a<e.length;++a){const i=e[a],l=a===e.length-1?i!==L(t.slice(a)):!0;N(e[a]===t[a]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!zn(n)&&!Array.isArray(n)&&(n=[n]),t=t||e,n=s!=="string"?Dr(n,s):Fr(n,[],!0),O.makeTensor(n,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ka(n,t,e){const s=Hl(n,e);return jl(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ql={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class er{static join(t){return new er(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,t==null||(t instanceof Array||(t=[t]),t=t.map(s=>zn(s)?s.buffer:s),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let s=0;s<t.length;s++){const r=t[s];s!==t.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=e+r.byteLength;this.shards.push({buffer:r,start:e,end:o}),e=o}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,e=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),e=Math.min(this.byteLength,e),e<=t)return new ArrayBuffer(0);const s=this.findShardForByte(t);if(s===-1)throw new Error(`Could not find start shard for byte ${t}`);const r=e-t,o=new ArrayBuffer(r),a=new Uint8Array(o);let i=0;for(let l=s;l<this.shards.length;l++){const c=this.shards[l],d=t+i-c.start,h=i,f=Math.min(e,c.end)-c.start,m=new Uint8Array(c.buffer,d,f-d);if(a.set(m,h),i+=m.length,e<c.end)break}return o}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(r){return t<r.start?-1:t>=r.end?1:0}if(e(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=i$(this.shards,e);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function i$(n,t){let e=0,s=n.length;for(;e<=s;){const r=Math.floor((s-e)/2)+e,o=t(n[r]);if(o===0)return r;o<0?s=r:e=r+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function es(){return O}function mg(){return O.memory()}function G(n,t){return O.tidy(n,t)}function Mt(n){ag(n).forEach(e=>e.dispose())}function ms(n){return O.keep(n)}function u$(n){return O.setBackend(n)}function l$(){return O.ready()}function Th(n,t,e=1){return O.registerBackend(n,t,e)}function c$(){return O.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xa=4;async function gg(n,t){const e=[],s=[],r=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<r.length;++a){const i=r[a],l=Array.isArray(n)?n[a].tensor:n[i];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${l.dtype}`);const c={name:i,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const u=new Promise(async d=>{const h=await l.bytes(),p=h.reduce((g,b)=>g+b.length,0)+Xa*h.length,f=new Uint8Array(p);let m=0;for(let g=0;g<h.length;g++){const b=h[g],x=new Uint8Array(new Uint32Array([b.length]).buffer);f.set(x,m),m+=Xa,f.set(b,m),m+=b.length}d(f)});s.push(u)}else s.push(l.data());t!=null&&(c.group=t),e.push(c)}const o=await Promise.all(s);return{data:f$(o),specs:e}}function d$(n,t){const e=new er(n),s={};let r=0;for(const o of t){const a=h$(o,(i,l)=>e.slice(r+i,r+l));s[o.name]=p$(o,e.slice(r,r+a)),r+=a}return s}function h$(n,t){const e=L(n.shape);let s;if("quantization"in n){const r=n.quantization;s=ql[r.dtype]}else if(n.dtype==="string"){let r=0;for(let o=0;o<e;o++)r+=Xa+new Uint32Array(t(r,r+Xa))[0];return r}else s=ql[n.dtype];return e*s}function p$(n,t){const e=n.name,s=n.dtype,r=n.shape,o=L(r);let a,i=0;if("quantization"in n){const l=n.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${n.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const c=ql[l.dtype],u=l.dtype==="uint8"?new Uint8Array(t):new Uint16Array(t);if(s==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){a=new Float32Array(u.length);for(let d=0;d<u.length;d++){const h=u[d];a[d]=h*l.scale+l.min}}else if(l.dtype==="float16")a=$$()(u);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(s==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);a=new Int32Array(u.length);for(let d=0;d<u.length;d++){const h=u[d];a[d]=Math.round(h*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${e}': ${s}`);i+=o*c}else if(s==="string"){const l=L(n.shape);a=[];for(let c=0;c<l;c++){const u=new Uint32Array(t.slice(i,i+Xa))[0];i+=Xa;const d=new Uint8Array(t.slice(i,i+u));a.push(d),i+=u}}else{const l=ql[s];if(s==="float32")a=new Float32Array(t);else if(s==="int32")a=new Int32Array(t);else if(s==="bool")a=new Uint8Array(t);else if(s==="complex64"){a=new Float32Array(t);const c=new Float32Array(a.length/2),u=new Float32Array(a.length/2);for(let f=0;f<c.length;f++)c[f]=a[f*2],u[f]=a[f*2+1];const d=Ka(c,r,"float32"),h=Ka(u,r,"float32"),p=Mr(d,h);return d.dispose(),h.dispose(),p}else throw new Error(`Unsupported dtype in weight '${e}': ${s}`);i+=o*l}return Ka(a,r,s)}function f$(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let t=0;const e=[];n.forEach(o=>{if(t+=o.byteLength,e.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const s=new Uint8Array(t);let r=0;return e.forEach(o=>{s.set(new Uint8Array(o.buffer),r),r+=o.byteLength}),s.buffer}const _h=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function bg(n){return _h?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function m$(n){if(_h)return Buffer.from(n).toString("base64");const t=new Uint8Array(n);let e="";for(let s=0,r=t.length;s<r;s++)e+=String.fromCharCode(t[s]);return btoa(e)}function g$(n){if(_h){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const t=atob(n),e=new Uint8Array(t.length);for(let s=0;s<t.length;++s)e.set([t.charCodeAt(s)],s);return e.buffer}function b$(n){return er.join(n)}function x$(n,t){const e={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:t};return n.signature!=null&&(e.signature=n.signature),n.userDefinedMetadata!=null&&(e.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(e.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(e.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(e.trainingConfig=n.trainingConfig),e}function y$(n,t,e){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=e}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function w$(n,t){let e,s;return n.weightsManifest!=null&&([e,s]=await t(n.weightsManifest)),y$(n,e,s)}function Eh(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:bg(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:bg(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new er(n.weightData).byteLength}}function xg(n){const t=[];for(const e of n)t.push(...e.weights);return t}function I$(){const n=e=>{let s=e<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=n(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function k$(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let t=1;t<31;t++)n[t]=t<<23;for(let t=33;t<63;t++)n[t]=2147483648+(t-32<<23);return n}function C$(){const n=new Uint32Array(64);for(let t=0;t<64;t++)n[t]=1024;return n[0]=n[32]=0,n}function $$(){const n=I$(),t=k$(),e=C$();return s=>{const r=new ArrayBuffer(4*s.length),o=new Uint32Array(r);for(let a=0;a<s.length;a++){const i=s[a],l=n[e[i>>10]+(i&1023)]+t[i>>10];o[a]=l}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oe{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Oe.instance==null&&(Oe.instance=new Oe),Oe.instance}static registerSaveRouter(t){Oe.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Oe.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Oe.getHandlers(t,"save")}static getLoadHandlers(t,e){return Oe.getHandlers(t,"load",e)}static getHandlers(t,e,s){const r=[];return(e==="load"?Oe.getInstance().loadRouters:Oe.getInstance().saveRouters).forEach(a=>{const i=a(t,s);i!==null&&r.push(i)}),r}}const v$=n=>Oe.getSaveHandlers(n),S$=(n,t)=>Oe.getLoadHandlers(n,t);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rh="tensorflowjs",Ah=1,Or="models_store",nr="model_info_store";function yg(){if(!H().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,t=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Dh(n){const t=n.result;t.createObjectStore(Or,{keyPath:"modelPath"}),t.createObjectStore(nr,{keyPath:"modelPath"})}class Lr{constructor(t){if(this.indexedDB=yg(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((s,r)=>{const o=this.indexedDB.open(Rh,Ah);o.onupgradeneeded=()=>Dh(o),o.onsuccess=()=>{const a=o.result;if(e==null){const i=a.transaction(Or,"readonly"),c=i.objectStore(Or).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return a.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(c.result.modelArtifacts)},c.onerror=u=>(a.close(),r(c.error)),i.oncomplete=()=>a.close()}else{e.weightData=er.join(e.weightData);const i=Eh(e),l=a.transaction(nr,"readwrite");let c=l.objectStore(nr),u;try{u=c.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(h){return r(h)}let d;u.onsuccess=()=>{d=a.transaction(Or,"readwrite");const h=d.objectStore(Or);let p;try{p=h.put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:i})}catch(f){return r(f)}p.onsuccess=()=>s({modelArtifactsInfo:i}),p.onerror=f=>{c=l.objectStore(nr);const m=c.delete(this.modelPath);m.onsuccess=()=>(a.close(),r(p.error)),m.onerror=g=>(a.close(),r(p.error))}},u.onerror=h=>(a.close(),r(u.error)),l.oncomplete=()=>{d==null?a.close():d.oncomplete=()=>a.close()}}},o.onerror=a=>r(o.error)})}}Lr.URL_SCHEME="indexeddb://";const wg=n=>H().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Lr.URL_SCHEME)?N$(n.slice(Lr.URL_SCHEME.length)):null;Oe.registerSaveRouter(wg),Oe.registerLoadRouter(wg);function N$(n){return new Lr(n)}function T$(n){return n.startsWith(Lr.URL_SCHEME)?n.slice(Lr.URL_SCHEME.length):n}class _${constructor(){this.indexedDB=yg()}async listModels(){return new Promise((t,e)=>{const s=this.indexedDB.open(Rh,Ah);s.onupgradeneeded=()=>Dh(s),s.onsuccess=()=>{const r=s.result,o=r.transaction(nr,"readonly"),i=o.objectStore(nr).getAll();i.onsuccess=()=>{const l={};for(const c of i.result)l[c.modelPath]=c.modelArtifactsInfo;t(l)},i.onerror=l=>(r.close(),e(i.error)),o.oncomplete=()=>r.close()},s.onerror=r=>e(s.error)})}async removeModel(t){return t=T$(t),new Promise((e,s)=>{const r=this.indexedDB.open(Rh,Ah);r.onupgradeneeded=()=>Dh(r),r.onsuccess=()=>{const o=r.result,a=o.transaction(nr,"readwrite"),i=a.objectStore(nr),l=i.get(t);let c;l.onsuccess=()=>{if(l.result==null)return o.close(),s(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const u=i.delete(t),d=()=>{c=o.transaction(Or,"readwrite");const p=c.objectStore(Or).delete(t);p.onsuccess=()=>e(l.result.modelArtifactsInfo),p.onerror=f=>s(l.error)};u.onsuccess=d,u.onerror=h=>(d(),o.close(),s(l.error))}},l.onerror=u=>(o.close(),s(l.error)),a.oncomplete=()=>{c==null?o.close():c.oncomplete=()=>o.close()}},r.onerror=o=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ms="/",Ya="tensorflowjs_models",Ig="info",E$="model_topology",R$="weight_specs",A$="weight_data",D$="model_metadata";function kg(n){return{info:[Ya,n,Ig].join(Ms),topology:[Ya,n,E$].join(Ms),weightSpecs:[Ya,n,R$].join(Ms),weightData:[Ya,n,A$].join(Ms),modelMetadata:[Ya,n,D$].join(Ms)}}function Cg(n){for(const t of Object.values(n))window.localStorage.removeItem(t)}function F$(n){const t=n.split(Ms);if(t.length<3)throw new Error(`Invalid key format: ${n}`);return t.slice(1,t.length-1).join(Ms)}function M$(n){return n.startsWith(Pr.URL_SCHEME)?n.slice(Pr.URL_SCHEME.length):n}class Pr{constructor(t){if(!H().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=kg(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),s=JSON.stringify(t.weightSpecs),r=Eh(t),o=er.join(t.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,m$(o));const a={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch{throw Cg(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const i=JSON.parse(o);e.format=i.format,e.generatedBy=i.generatedBy,e.convertedBy=i.convertedBy,i.signature!=null&&(e.signature=i.signature),i.userDefinedMetadata!=null&&(e.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(e.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(e.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(e.trainingConfig=i.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=g$(a),e}}Pr.URL_SCHEME="localstorage://";const $g=n=>H().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Pr.URL_SCHEME)?O$(n.slice(Pr.URL_SCHEME.length)):null;Oe.registerSaveRouter($g),Oe.registerLoadRouter($g);function O$(n){return new Pr(n)}class L${constructor(){N(H().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),N(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=Ya+Ms,s=Ms+Ig;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(e)&&o.endsWith(s)){const a=F$(o);t[a]=JSON.parse(this.LS.getItem(o))}}return t}async removeModel(t){t=M$(t);const e=kg(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(e.info));return Cg(e),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vg="://";class gs{constructor(){this.managers={}}static getInstance(){return gs.instance==null&&(gs.instance=new gs),gs.instance}static registerManager(t,e){N(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(vg)&&(t=t.slice(0,t.indexOf(vg))),N(t.length>0,()=>"scheme must not be an empty string.");const s=gs.getInstance();N(s.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),s.managers[t]=e}static getManager(t){const e=gs.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(gs.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class P${constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!H().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(t){return qm(t)}}if(H().get("IS_BROWSER")){H().setPlatform("browser",new P$);try{gs.registerManager(Pr.URL_SCHEME,new L$)}catch{}try{gs.registerManager(Lr.URL_SCHEME,new _$)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B$={importFetch:()=>require("node-fetch")};let Fh;class z${constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return H().global.fetch!=null?H().global.fetch(t,e):(Fh==null&&(Fh=B$.importFetch()),Fh(t,e))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}}H().get("IS_NODE")&&!H().get("IS_BROWSER")&&H().setPlatform("node",new z$);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ot(n,t="float32",e){return t=t||"float32",Fs(n),new ze(n,t,e)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W$(n,t){const e=_(n,"x","cast");if(!xC(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:e},r={dtype:t};return O.runKernel(Oo,s,r)}const it=P({cast_:W$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V$(n){const e={x:_(n,"x","clone","string_or_numeric")};return O.runKernel(ea,e)}const Br=P({clone_:V$});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U$(n,t=!1){console.log(n.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */lg(),QC({buffer:Ot,cast:it,clone:Br,print:U$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G$(n,t){let e=_(n,"a","add"),s=_(t,"b","add");[e,s]=ke(e,s);const r={a:e,b:s};return O.runKernel(Nr,r)}const et=P({add_:G$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H$(n,t){let e=_(n,"a","floorDiv"),s=_(t,"b","floorDiv");[e,s]=ke(e,s);const r={a:e,b:s};return O.runKernel(Jo,r)}const Sg=P({floorDiv_:H$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j$(n,t){let e=_(n,"a","div"),s=_(t,"b","div");if([e,s]=ke(e,s),e.dtype==="int32"&&s.dtype==="int32")return Sg(e,s);const r={a:e,b:s},o={};return O.runKernel(jo,r,o)}const wt=P({div_:j$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q$(n,t){let e=_(n,"a","mul"),s=_(t,"b","mul");[e,s]=ke(e,s);const r={a:e,b:s};return O.runKernel(ba,r)}const A=P({mul_:q$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K$(n){const t=_(n,"x","abs");if(t.dtype==="complex64"){const e={x:t};return O.runKernel(Cl,e)}else{const e={x:t};return O.runKernel(Ti,e)}}const Le=P({abs_:K$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X$(n){const e={x:_(n,"x","acos")};return O.runKernel(No,e)}const Y$=P({acos_:X$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z$(n){const e={x:_(n,"x","acosh")};return O.runKernel(To,e)}const J$=P({acosh_:Z$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q$(n,t=null,e=!1){const r={x:_(n,"x","all","bool")},o={axis:t,keepDims:e};return O.runKernel(Ei,r,o)}const Ng=P({all_:Q$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tv(n,t=null,e=!1){const r={x:_(n,"x","any","bool")},o={axis:t,keepDims:e};return O.runKernel(Ri,r,o)}const Mh=P({any_:tv});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ev(n,t=0){const s={x:_(n,"x","argMax")},r={axis:t};return O.runKernel(Ai,s,r)}const Tu=P({argMax_:ev});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nv(n,t=0){const s={x:_(n,"x","argMin")},r={axis:t};return O.runKernel(Di,s,r)}const sv=P({argMin_:nv});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rv(n){const e={x:_(n,"x","asin")};return O.runKernel(_o,e)}const ov=P({asin_:rv});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function av(n){const e={x:_(n,"x","asinh")};return O.runKernel(Eo,e)}const iv=P({asinh_:av});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uv(n){const e={x:_(n,"x","atan")};return O.runKernel(Ro,e)}const lv=P({atan_:uv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cv(n,t){let e=_(n,"a","atan2"),s=_(t,"b","atan2");[e,s]=ke(e,s);const r={a:e,b:s};return O.runKernel(Do,r)}const dv=P({atan2_:cv});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hv(n){const e={x:_(n,"x","atanh")};return O.runKernel(Ao,e)}const pv=P({atanh_:hv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sr(n,t,e,s,r="NHWC",o){const a=n[3],i=[...t,a],l=ss(r);return we(n,i,e,o,s,null,null,l)}function Ye(n,t,e,s,r,o,a="channelsLast"){const[i,l]=_u(t);let c;if(a==="channelsLast")c=[i,l,n[3],n[3]];else if(a==="channelsFirst")c=[i,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return we(n,c,e,s,r,o,!1,a)}function Tn(n,t,e,s,r,o,a="NDHWC"){const[i,l,c]=Lh(t);let u,d;if(a==="NDHWC")d="channelsLast",u=[i,l,c,n[4],n[4]];else if(a==="NCDHW")d="channelsFirst",u=[i,l,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return ns(n,u,e,s,r,!1,d,o)}function we(n,t,e,s,r,o,a=!1,i="channelsLast"){let[l,c,u,d]=[-1,-1,-1,-1];if(i==="channelsLast")[l,c,u,d]=n;else if(i==="channelsFirst")[l,d,c,u]=n;else throw new Error(`Unknown dataFormat ${i}`);const[h,p,,f]=t,[m,g]=_u(e),[b,x]=_u(s),y=Za(h,b),w=Za(p,x),{padInfo:I,outHeight:C,outWidth:S}=gv(r,c,u,m,g,y,w,o,i),T=a?f*d:f;let v;return i==="channelsFirst"?v=[l,T,C,S]:i==="channelsLast"&&(v=[l,C,S,T]),{batchSize:l,dataFormat:i,inHeight:c,inWidth:u,inChannels:d,outHeight:C,outWidth:S,outChannels:T,padInfo:I,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:p,effectiveFilterHeight:y,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:x,inShape:n,outShape:v,filterShape:t}}function ns(n,t,e,s,r,o=!1,a="channelsLast",i){let[l,c,u,d,h]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[l,c,u,d,h]=n;else if(a==="channelsFirst")[l,h,c,u,d]=n;else throw new Error(`Unknown dataFormat ${a}`);const[p,f,m,,g]=t,[b,x,y]=Lh(e),[w,I,C]=Lh(s),S=Za(p,w),T=Za(f,I),v=Za(m,C),{padInfo:$,outDepth:k,outHeight:R,outWidth:F}=bv(r,c,u,d,b,x,y,S,T,v,i),B=o?g*h:g;let M;return a==="channelsFirst"?M=[l,B,k,R,F]:a==="channelsLast"&&(M=[l,k,R,F,B]),{batchSize:l,dataFormat:a,inDepth:c,inHeight:u,inWidth:d,inChannels:h,outDepth:k,outHeight:R,outWidth:F,outChannels:B,padInfo:$,strideDepth:b,strideHeight:x,strideWidth:y,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:T,effectiveFilterWidth:v,dilationDepth:w,dilationHeight:I,dilationWidth:C,inShape:n,outShape:M,filterShape:t}}function fv(n,t,e,s,r){s==null&&(s=Oh(n,t,e));const o=n[0],a=n[1],i=Eu((o-t+2*s)/e+1,r),l=Eu((a-t+2*s)/e+1,r);return[i,l]}function mv(n,t,e,s,r,o){r==null&&(r=Oh(n,t[0],s[0]));const a=[0,0,0,e];for(let i=0;i<3;i++)n[i]+2*r>=t[i]&&(a[i]=Eu((n[i]-t[i]+2*r)/s[i]+1,o));return a}function Oh(n,t,e,s=1){const r=Za(t,s);return Math.floor((n[0]*(e-1)-e+r)/2)}function _u(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function Lh(n){return typeof n=="number"?[n,n,n]:n}function Za(n,t){return t<=1?n:n+(n-1)*(t-1)}function gv(n,t,e,s,r,o,a,i,l){let c,u,d;if(typeof n=="number"){c={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=fv([t,e],o,s,n,i);u=p[0],d=p[1]}else if(n==="same"){u=Math.ceil(t/s),d=Math.ceil(e/r);const h=Math.max(0,(u-1)*s+o-t),p=Math.max(0,(d-1)*r+a-e),f=Math.floor(h/2),m=h-f,g=Math.floor(p/2),b=p-g;c={top:f,bottom:m,left:g,right:b,type:"SAME"}}else if(n==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-o+1)/s),d=Math.ceil((e-a+1)/r);else if(typeof n=="object"){const h=l==="channelsLast"?n[1][0]:n[2][0],p=l==="channelsLast"?n[1][1]:n[2][1],f=l==="channelsLast"?n[2][0]:n[3][0],m=l==="channelsLast"?n[2][1]:n[3][1];c={top:h,bottom:p,left:f,right:m,type:h===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},u=Eu((t-o+h+p)/s+1,i),d=Eu((e-a+f+m)/r+1,i)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:c,outHeight:u,outWidth:d}}function bv(n,t,e,s,r,o,a,i,l,c,u){let d,h,p,f;if(n==="valid"&&(n=0),typeof n=="number"){d={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=mv([t,e,s,1],[i,l,c],1,[r,o,a],n,u);h=g[0],p=g[1],f=g[2]}else if(n==="same"){h=Math.ceil(t/r),p=Math.ceil(e/o),f=Math.ceil(s/a);const m=(h-1)*r+i-t,g=(p-1)*o+l-e,b=(f-1)*a+c-s,x=Math.floor(m/2),y=m-x,w=Math.floor(g/2),I=g-w,C=Math.floor(b/2),S=b-C;d={top:w,bottom:I,left:C,right:S,front:x,back:y,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:d,outDepth:h,outHeight:p,outWidth:f}}function Eu(n,t){if(!t)return Math.trunc(n);switch(t){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${t}`)}}function zr(n){const[t,e,s]=_u(n);return t===1&&e===1&&s===1}function We(n,t){return zr(n)||zr(t)}function Wr(n){return _u(n).every(t=>t>0)}function ss(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function cn(n,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")N(Co(t),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(r=>{N(Co(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${r}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${t}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xv(n,t){const s={x:_(n,"x","reshape","string_or_numeric")},r={shape:t};return O.runKernel(hu,s,r)}const W=P({reshape_:xv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yv(n,t,e,s,r){const o=_(n,"x","avgPool","float32"),a=1;N(We(e,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`);let i=o,l=!1;o.rank===3&&(l=!0,i=W(o,[1,o.shape[0],o.shape[1],o.shape[2]])),N(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),cn("avgPool",s,r);const c={x:i},u={filterSize:t,strides:e,pad:s,dimRoundingMode:r};let d=O.runKernel(Fo,c,u);return d=it(d,o.dtype),l?W(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Ph=P({avgPool_:yv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wv(n,t,e,s,r,o="NDHWC"){const a=_(n,"x","avgPool3d","float32");let i=a,l=!1;a.rank===4&&(l=!0,i=W(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),N(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),N(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),N(typeof e=="number"&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),cn("avgPool3d",s,r);const c={x:i},u={filterSize:t,strides:e,pad:s,dimRoundingMode:r,dataFormat:o};let d=O.runKernel(Fi,c,u);return d=it(d,i.dtype),l?W(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Iv=P({avgPool3d_:wv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kv(n,t=0){N(n.length>=1,()=>"Pass at least one tensor to concat");const e=fg(n,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),e.length===1)return Br(e[0]);const s=e,r={axis:t};return O.runKernel(Li,s,r)}const nn=P({concat_:kv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cv(n,t,e=!1,s=!1){let r=_(n,"a","matMul"),o=_(t,"b","matMul");[r,o]=ke(r,o);const a={a:r,b:o},i={transposeA:e,transposeB:s};return O.runKernel(Mo,a,i)}const Xt=P({matMul_:Cv});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $v(n){const e={x:_(n,"x","sigmoid","float32")};return O.runKernel(Ma,e)}const Ja=P({sigmoid_:$v});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vv(n,t,e){const s=_(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},o={begin:t,size:e};return O.runKernel(gu,r,o)}const ae=P({slice_:vv});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sv(n){const e={x:_(n,"x","tanh","float32")};return O.runKernel(Ua,e)}const Kl=P({tanh_:Sv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nv(n,t,e){const s=_(n,"x","batchToSpaceND"),r=t.reduce((i,l)=>i*l);N(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),N(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),N(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);const o={x:s},a={blockShape:t,crops:e};return O.runKernel(Mi,o,a)}const Bh=P({batchToSpaceND_:Nv});function Tv(n){let t;return n.rank===0||n.rank===1?t=W(n,[1,1,1,n.size]):n.rank===2?t=W(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?t=W(n,[1,n.shape[0],n.shape[1],n.shape[2]]):t=n,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _v(n,t,e,s,r,o){o==null&&(o=.001);const a=_(n,"x","batchNorm"),i=_(t,"mean","batchNorm"),l=_(e,"variance","batchNorm");let c;r!=null&&(c=_(r,"scale","batchNorm"));let u;s!=null&&(u=_(s,"offset","batchNorm")),N(i.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),N(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),N(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:Tv(a),scale:c,offset:u,mean:i,variance:l},p={varianceEpsilon:o},f=O.runKernel(Qo,h,p);return W(f,a.shape)}const Xl=P({batchNorm_:_v});function Ev(n,t,e,s,r,o){const a=_(n,"x","batchNorm"),i=_(t,"mean","batchNorm"),l=_(e,"variance","batchNorm");let c;r!=null&&(c=_(r,"scale","batchNorm"));let u;return s!=null&&(u=_(s,"offset","batchNorm")),N(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),N(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),N(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&N(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&N(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),Xl(a,i,l,u,c,o)}const Rv=P({batchNorm2d_:Ev});function Av(n,t,e,s,r,o){const a=_(n,"x","batchNorm"),i=_(t,"mean","batchNorm"),l=_(e,"variance","batchNorm");let c;r!=null&&(c=_(r,"scale","batchNorm"));let u;return s!=null&&(u=_(s,"offset","batchNorm")),N(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),N(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),N(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&N(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&N(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),Xl(a,i,l,u,c,o)}const Dv=P({batchNorm3d_:Av});function Fv(n,t,e,s,r,o){const a=_(n,"x","batchNorm"),i=_(t,"mean","batchNorm"),l=_(e,"variance","batchNorm");let c;r!=null&&(c=_(r,"scale","batchNorm"));let u;return s!=null&&(u=_(s,"offset","batchNorm")),N(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),N(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),N(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&N(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&N(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),Xl(a,i,l,u,c,o)}const Mv=P({batchNorm4d_:Fv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ov(n,t,e){const s=_(n,"x","bincount"),r=_(t,"weights","bincount");N(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),N(e>=0,()=>`size must be non-negative, but got ${e}.`),N(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const o={x:s,weights:r},a={size:e};return O.runKernel(Oi,o,a)}const Lv=P({bincount_:Ov});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pv(n,t){let e=_(n,"broadcastTo","x");const s=e.shape;if(Fs(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const c=e.shape.slice();for(;c.length<t.length;)c.unshift(1);e=W(e,c)}const r=e.shape,o=Array.from(t);for(let c=t.length-1;c>=0;c--)if(r[c]===t[c])o[c]=1;else if(e.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(o.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return Br(e);const i={x:e},l={reps:o};return O.runKernel(_r,i,l)}const Ru=P({broadcastTo_:Pv});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bv(n){const e={x:_(n,"x","ceil","float32")};return O.runKernel(Lo,e)}const zv=P({ceil_:Bv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yl(n,t,e){Fs(n),e=e||Sr(t);const s={shape:n,value:t,dtype:e};return O.runKernel(vl,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wv(n,t,e){const s=_(n,"x","clipByValue");if(N(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return Yl(s.shape,t,s.dtype);const r={x:s},o={clipValueMin:t,clipValueMax:e};return O.runKernel(Tr,r,o)}const _n=P({clipByValue_:Wv});function Vv(n){return nn(n,0)}const Uv=P({concat1d_:Vv});function Gv(n,t){return nn(n,t)}const Hv=P({concat2d_:Gv});function jv(n,t){return nn(n,t)}const qv=P({concat3d_:jv});function Kv(n,t){return nn(n,t)}const Xv=P({concat4d_:Kv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yv(n,t,e,s,r="NHWC",o=[1,1],a){const i=_(n,"x","conv2d","float32"),l=_(t,"filter","conv2d","float32");let c=i,u=!1;i.rank===3&&(u=!0,c=W(i,[1,i.shape[0],i.shape[1],i.shape[2]])),N(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),N(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),cn("conv2d",s,a);const d=r==="NHWC"?c.shape[3]:c.shape[1];N(d===l.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`),N(We(e,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),N(Wr(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),N(Wr(e),()=>"Error in conv2D: Strides should be larger than 0.");const h={x:c,filter:l},p={strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a},f=O.runKernel(Po,h,p);return u?W(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Vr=P({conv2d_:Yv});function Zv(n,t,e,s,r="NWC",o=1,a){const i=_(n,"x","conv1d"),l=_(t,"filter","conv1d");let c=i,u=!1;i.rank===2&&(u=!0,c=W(i,[1,i.shape[0],i.shape[1]])),N(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),N(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),cn("conv1d",s,a),N(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),N(We(e,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${o}'`),N(Wr(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),N(Wr(e),()=>"Error in conv1D: Stride should be larger than 0."),N(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const d=W(l,[1,l.shape[0],l.shape[1],l.shape[2]]),h=W(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=Vr(h,d,[1,e],s,"NHWC",[1,o],a);return u?W(g,[g.shape[2],g.shape[3]]):W(g,[g.shape[0],g.shape[2],g.shape[3]])}const Tg=P({conv1d_:Zv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jv(n,t,e,s,r,o="NHWC",a){N(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let i=n,l=t,c=!1;t.rank===3&&(c=!0,l=W(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,n[0],n[1],n[2]]),N(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),N(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),N(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const u=o==="NHWC"?i[3]:i[1],d=o==="NHWC"?l.shape[3]:l.shape[1];N(u===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[2]}.`),N(d===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${e.shape[3]}.`),cn("conv2dDerInput",r,a);const h={dy:l,filter:e},p={strides:s,pad:r,dataFormat:o,dimRoundingMode:a,inputShape:i},f=O.runKernel(Bo,h,p);return c?W(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const zh=P({conv2DBackpropInput_:Jv});function Qv(n,t,e,s,r,o){const a=_(n,"x","conv2dTranspose"),i=_(t,"filter","conv2dTranspose");return zh(e,a,i,s,r,"NHWC",o)}const _g=P({conv2dTranspose_:Qv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tS(n,t,e,s,r="NDHWC",o=[1,1,1]){const a=_(n,"x","conv3d"),i=_(t,"filter","conv3d");let l=a,c=!1;a.rank===4&&(c=!0,l=W(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),N(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),N(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),N(l.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`),N(We(e,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`),N(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),N(Wr(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),N(Wr(e),()=>"Error in conv3D: Strides should be larger than 0.");const u={x:l,filter:i},d={strides:e,pad:s,dataFormat:r,dilations:o},h=O.runKernel(zo,u,d);return c?W(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const eS=P({conv3d_:tS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nS(n,t,e,s,r){N(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let o=n,a=t,i=!1;t.rank===4&&(i=!0,a=W(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const l=o[4],c=a.shape[4];N(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),N(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),N(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),N(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),N(c===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${e.shape[4]}.`);const u={dy:a,filter:e},d={pad:r,strides:s,inputShape:o},h=O.runKernel(Bi,u,d);return i?W(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const Eg=P({conv3DBackpropInput_:nS});function sS(n,t,e,s,r){const o=_(n,"x","conv3dTranspose"),a=_(t,"filter","conv3dTranspose");return Eg(e,o,a,s,r)}const rS=P({conv3dTranspose_:sS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oS(n){const e={x:_(n,"x","cos","float32")};return O.runKernel(Wo,e)}const Wh=P({cos_:oS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aS(n){const e={x:_(n,"x","cosh","float32")};return O.runKernel(Vo,e)}const Rg=P({cosh_:aS});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iS(n,t=0,e=!1,s=!1){const o={x:_(n,"x","cumprod")},a={axis:t,exclusive:e,reverse:s};return O.runKernel(zi,o,a)}const Vh=P({cumprod_:iS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uS(n,t=0,e=!1,s=!1){const o={x:_(n,"x","cumsum")},a={axis:t,exclusive:e,reverse:s};return O.runKernel(Uo,o,a)}const Ag=P({cumsum_:uS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lS(n,t,e,s=!1){const r=_(n,"x","denseBincount"),o=_(t,"weights","denseBincount");N(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),N(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),N(e>=0,()=>`size must be non-negative, but got ${e}.`),N(o.size===r.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${o.shape}.`);const a={x:r,weights:o},i={size:e,binaryOutput:s};return O.runKernel($l,a,i)}const Dg=P({denseBincount_:lS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cS(n,t,e="NHWC"){const s=_(n,"x","depthToSpace","float32"),r=e==="NHWC"?s.shape[1]:s.shape[2],o=e==="NHWC"?s.shape[2]:s.shape[3],a=e==="NHWC"?s.shape[3]:s.shape[1];N(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),N(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),N(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${t} for depthToSpace with input shape
        ${s.shape}`),N(a%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${a} for depthToSpace with input shape ${s.shape}`);const i={x:s},l={blockSize:t,dataFormat:e};return O.runKernel(Vi,i,l)}const dS=P({depthToSpace_:cS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hS(n,t,e,s,r="NHWC",o=[1,1],a){const i=_(n,"x","depthwiseConv2d","float32"),l=_(t,"filter","depthwiseConv2d","float32");let c=i,u=!1;i.rank===3&&(u=!0,c=W(i,[1,i.shape[0],i.shape[1],i.shape[2]])),N(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),N(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const d=r==="NHWC"?c.shape[3]:c.shape[1];N(d===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${l.shape[2]}.`),cn("depthwiseConv2d",s,a);const h={x:c,filter:l},p={strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a},f=O.runKernel(Go,h,p);return u?W(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Uh=P({depthwiseConv2d_:hS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pS(n,t,e,s,r=[1,1],o="NHWC"){const a=_(n,"x","dilation2d"),i=_(t,"filter","dilation2d");N(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),N(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),N(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let l=a,c=!1;a.rank===3&&(l=W(a,[1,a.shape[0],a.shape[1],a.shape[2]]),c=!0),N(l.shape[3]===i.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${i.shape[2]}`);const u={x:l,filter:i},d={strides:e,pad:s,dilations:r},h=O.runKernel(Ho,u,d);return c?W(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const fS=P({dilation2d_:pS});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qa(n,t){const e=n.length,s=[];for(let r=0;r<e;r++){const o=e-1-r,a=n[o]||1;(t[t.length-1-r]||1)>1&&a===1&&s.unshift(o)}return s}function _e(n,t){const e=[];for(let s=0;s<t.length;s++){const r=n[n.length-s-1],o=t.length-s-1,a=t[o];(r==null||r===1&&a>1)&&e.unshift(o)}return e}function vt(n,t){const e=Math.max(n.length,t.length),s=new Array(e);for(let r=0;r<e;r++){let o=n[n.length-r-1];o==null&&(o=1);let a=t[t.length-r-1];if(a==null&&(a=1),o===1)s[e-r-1]=a;else if(a===1)s[e-r-1]=o;else if(o!==a){const i=`Operands could not be broadcast together with shapes ${n} and ${t}.`;throw Error(i)}else s[e-r-1]=o}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mS(n,t){let e=_(n,"a","equal","string_or_numeric"),s=_(t,"b","equal","string_or_numeric");[e,s]=ke(e,s),vt(e.shape,s.shape);const r={a:e,b:s};return O.runKernel(ji,r)}const bs=P({equal_:mS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gS(n,t,e){const s=_(t,"a","where"),r=_(e,"b","where"),o=_(n,"condition","where","bool"),a=vt(vt(o.shape,s.shape),r.shape),i=Ru(o,a),l=Ru(s,a),c=Ru(r,a),u={condition:i,t:l,e:c};return O.runKernel(mu,u)}const sn=P({where_:gS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bS(n){const e={x:_(n,"x","zerosLike")};return O.runKernel(Cu,e)}const Wt=P({zerosLike_:bS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xS(n,t){let e=_(n,"a","div"),s=_(t,"b","div");[e,s]=ke(e,s);const r=wt(e,s),o=Wt(r),a=bs(s,o);return sn(a,o,r)}const yS=P({divNoNan_:xS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wS(n,t){const e=_(n,"t1","dot"),s=_(t,"t2","dot");N((e.rank===1||e.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${s.rank}.`);const r=e.rank===1?e.size:e.shape[1],o=s.rank===1?s.size:s.shape[0];if(N(r===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${o}.`),e.rank===1&&s.rank===1){const a=W(e,[1,-1]),i=W(s,[-1,1]),l=Xt(a,i);return W(l,[])}else if(e.rank===1&&s.rank===2){const a=W(e,[1,-1]),i=W(s,[s.shape[0],s.shape[1]]),l=Xt(a,i);return W(l,[l.size])}else if(e.rank===2&&s.rank===1){const a=W(s,[-1,1]),i=Xt(e,a);return W(i,[i.size])}else{const a=W(s,[s.shape[0],s.shape[1]]);return Xt(e,a)}}const IS=P({dot_:wS});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kS(n,...t){const e=t.map((r,o)=>_(r,`tensors${o}`,"einsum")),s={equation:n};return O.runKernel(sh,e,s)}const Au=P({einsum_:kS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CS(n){const e={x:_(n,"x","elu","float32")};return O.runKernel(qo,e)}const Zl=P({elu_:CS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $S(n){let t=_(n,"x","erf");N(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=it(t,"float32"));const e={x:t};return O.runKernel(Ko,e)}const Fg=P({erf_:$S});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gh(n,t){for(let e=0;e<n.length;++e)if(n[n.length-e-1]!==t-1-e)return!1;return!0}function Mg(n,t,e){const s=n.length+t.length,r=[];let o=0,a=0;for(let i=0;i<s;i++)e.indexOf(i)===-1?r.push(n[o++]):r.push(t[a++]);return r}function he(n,t){const e=[],s=n.length;for(let o=0;o<s;o++)t.indexOf(o)===-1&&e.push(n[o]);const r=t.map(o=>n[o]);return[e,r]}function ee(n,t){const e=t.map(s=>1);return Mg(n,e,t)}function ie(n,t,e){N(Gh(t,e),()=>`${n} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function ue(n,t){if(Gh(n,t))return null;const e=[];for(let s=0;s<t;++s)n.indexOf(s)===-1&&e.push(s);return n.forEach(s=>e.push(s)),e}function xs(n){return n.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function se(n,t){const e=[];for(let s=t-n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vS(n,t=null,e=!1){const r={x:_(n,"x","max")},o={reductionIndices:t,keepDims:e};return O.runKernel(la,r,o)}const rs=P({max_:vS});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SS(n,t=null,e=!1){const r={x:_(n,"x","min")},o={axis:t,keepDims:e};return O.runKernel(pa,r,o)}const Jl=P({min_:SS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NS(n,t){let e=_(n,"base","pow"),s=_(t,"exp","pow");[e,s]=ke(e,s);const r={a:e,b:s};return O.runKernel(wa,r)}const Ur=P({pow_:NS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function St(n,t){if((zn(n)&&t!=="string"||Array.isArray(n))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&zn(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return jl(n,[],[],t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TS(n){const e={x:_(n,"x","sqrt","float32")};return O.runKernel(La,e)}const Ze=P({sqrt_:TS});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _S(n){const t=_(n,"x","square"),e={};return O.runKernel("Square",{x:t},e)}const le=P({square_:_S});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ES(n,t=null,e=!1){let s=_(n,"x","sum");s.dtype==="bool"&&(s=it(s,"int32"));const r={x:s},o={axis:t,keepDims:e};return O.runKernel(Pa,r,o)}const gt=P({sum_:ES});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RS(n,t="euclidean",e=null,s=!1){n=_(n,"x","norm");const r=Og(n,t,e);let o=r.shape;if(s){const a=Et(e,n.shape);o=ee(r.shape,a)}return W(r,o)}function Og(n,t,e=null){if(n.rank===0)return Le(n);if(n.rank!==1&&e===null)return Og(W(n,[-1]),t,e);if(n.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return gt(Le(n),e);if(t===1/0)return rs(Le(n),e);if(t===-1/0)return Jl(Le(n),e);if(t==="euclidean"||t===2)return Ze(gt(Ur(Le(n),St(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return rs(gt(Le(n),e[0]),e[1]-1);if(t===1/0)return rs(gt(Le(n),e[1]),e[0]);if(t===-1/0)return Jl(gt(Le(n),e[1]),e[0]);if(t==="fro"||t==="euclidean")return Ze(gt(le(n),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const Ql=P({norm_:RS});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AS(n,t=null,e=!1){return Ql(n,"euclidean",t,e)}const DS=P({euclideanNorm_:AS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FS(n){const e={x:_(n,"x","exp")};return O.runKernel(Xo,e)}const En=P({exp_:FS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MS(n,t=0){const e=_(n,"x","expandDims","string_or_numeric");N(t<=e.rank,()=>"Axis must be <= rank of the tensor");const s={input:e},r={dim:t};return O.runKernel(qi,s,r)}const dn=P({expandDims_:MS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OS(n){const e={x:_(n,"x","expm1")};return O.runKernel(Yo,e)}const LS=P({expm1_:OS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PS(n,t){const e=_(n,"x","tile","string_or_numeric");N(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);const s={x:e},r={reps:t};return O.runKernel(_r,s,r)}const Rn=P({tile_:PS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BS(n,t,e,s="float32"){t==null&&(t=n);const r=Ot([n,t],s),o=n<=t?n:t;for(let i=0;i<o;++i)r.set(1,i,i);const a=W(r.toTensor(),[n,t]);if(e==null)return a;if(e.length===1)return Rn(dn(a,0),[e[0],1,1]);if(e.length===2)return Rn(dn(dn(a,0),0),[e[0],e[1],1,1]);if(e.length===3)return Rn(dn(dn(dn(a,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}const Lg=P({eye_:BS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zS(n){const e={x:_(n,"x","floor","float32")};return O.runKernel(Zo,e)}const tc=P({floor_:zS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WS(n,t,e=0,s=0){const r=_(n,"x","gather"),o=_(t,"indices","gather","int32"),a={x:r,indices:o},i={axis:e,batchDims:s};return O.runKernel(Xi,a,i)}const ec=P({gather_:WS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VS(n,t){let e=_(n,"a","greater","string_or_numeric"),s=_(t,"b","greater","string_or_numeric");[e,s]=ke(e,s),vt(e.shape,s.shape);const r={a:e,b:s};return O.runKernel(Yi,r)}const An=P({greater_:VS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function US(n,t){let e=_(n,"a","greaterEqual","string_or_numeric"),s=_(t,"b","greaterEqual","string_or_numeric");[e,s]=ke(e,s),vt(e.shape,s.shape);const r={a:e,b:s};return O.runKernel(ta,r)}const Gr=P({greaterEqual_:US});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GS(n){const e={input:_(n,"input","imag")};return O.runKernel(ah,e)}const Hh=P({imag_:GS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HS(n){const e={x:_(n,"x","isFinite")};return O.runKernel(na,e)}const jS=P({isFinite_:HS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qS(n){const e={x:_(n,"x","isInf")};return O.runKernel(sa,e)}const KS=P({isInf_:qS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XS(n){const e={x:_(n,"x","isNaN")};return O.runKernel(ra,e)}const YS=P({isNaN_:XS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZS(n,t=.2){const s={x:_(n,"x","leakyRelu")},r={alpha:t};return O.runKernel(oa,s,r)}const jh=P({leakyRelu_:ZS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JS(n,t){let e=_(n,"a","less","string_or_numeric"),s=_(t,"b","less","string_or_numeric");[e,s]=ke(e,s),vt(e.shape,s.shape);const r={a:e,b:s};return O.runKernel(Zi,r)}const nc=P({less_:JS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QS(n,t){let e=_(n,"a","lessEqual","string_or_numeric"),s=_(t,"b","lessEqual","string_or_numeric");[e,s]=ke(e,s),vt(e.shape,s.shape);const r={a:e,b:s};return O.runKernel(Ji,r)}const ti=P({lessEqual_:QS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t2(n,t,e){if(e<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:t,num:e};return O.runKernel(Qi,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e2(n,t=5,e=1,s=1,r=.5){const o=_(n,"x","localResponseNormalization");N(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),N(Co(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let a=o,i=!1;o.rank===3&&(i=!0,a=W(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const l={x:a},c={depthRadius:t,bias:e,alpha:s,beta:r},u=O.runKernel(ua,l,c);return i?W(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const n2=P({localResponseNormalization_:e2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s2(n){const e={x:_(n,"x","log","float32")};return O.runKernel(aa,e)}const Wn=P({log_:s2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r2(n){const e={x:_(n,"x","log1p")};return O.runKernel(ia,e)}const qh=P({log1p_:r2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o2(n,t){N(Hd(n),()=>"The f passed in variableGrads(f) must be a function"),N(t==null||Array.isArray(t)&&t.every(c=>c instanceof Gl),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=t!=null;if(!e){t=[];for(const c in O.registeredVariables)t.push(O.registeredVariables[c])}const s=e?t.filter(c=>!c.trainable):null,r=t.length;t=t.filter(c=>c.trainable),N(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const o=!0,{value:a,grads:i}=O.gradients(n,t,null,o);N(i.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),N(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const l={};return t.forEach((c,u)=>{i[u]!=null&&(l[c.name]=i[u])}),s!=null&&s.forEach(c=>l[c.name]=null),{value:a,grads:l}}function Hr(n){return O.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a2(n){const e={x:_(n,"x","neg")};return O.runKernel(ou,e)}const pe=P({neg_:a2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i2(n){const e={x:_(n,"x","softplus")};return O.runKernel(Oa,e)}const Du=P({softplus_:i2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u2(n){const t=_(n,"x","logSigmoid");return Hr(s=>({value:pe(Du(pe(s))),gradFunc:a=>A(a,Ja(pe(s)))}))(t)}const l2=P({logSigmoid_:u2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c2(n,t){let e=_(n,"a","sub"),s=_(t,"b","sub");[e,s]=ke(e,s);const r={a:e,b:s};return O.runKernel(Wa,r)}const ft=P({sub_:c2});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d2(n,t=-1){const e=_(n,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Hr((r,o)=>{const i=rs(r,t,!0),l=ft(r,i),c=ft(it(l,"float32"),Wn(gt(En(l),t,!0)));return o([c]),{value:c,gradFunc:(d,h)=>{const[p]=h,f=!0,m=En(p);return ft(d,A(gt(d,t,f),m))}}})(e)}const Pg=P({logSoftmax_:d2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h2(n,t=null,e=!1){const s=_(n,"x","logSumExp"),r=Et(t,s.shape),o=rs(s,r,!0),a=ft(s,o),i=En(a),l=gt(i,r),c=Wn(l),u=et(W(o,c.shape),c);if(e){const d=ee(u.shape,r);return W(u,d)}return u}const Kh=P({logSumExp_:h2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p2(n,t){const e=_(n,"a","logicalAnd","bool"),s=_(t,"b","logicalAnd","bool");vt(e.shape,s.shape);const r={a:e,b:s};return O.runKernel(tu,r)}const Os=P({logicalAnd_:p2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f2(n){const e={x:_(n,"x","logicalNot","bool")};return O.runKernel(eu,e)}const Xh=P({logicalNot_:f2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m2(n,t){const e=_(n,"a","logicalOr","bool"),s=_(t,"b","logicalOr","bool");vt(e.shape,s.shape);const r={a:e,b:s};return O.runKernel(nu,r)}const Bg=P({logicalOr_:m2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g2(n,t){const e=_(n,"a","logicalXor","bool"),s=_(t,"b","logicalXor","bool");return vt(e.shape,s.shape),Os(Bg(n,t),Xh(Os(n,t)))}const b2=P({logicalXor_:g2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x2(n,t,e,s,r){const o=_(n,"x","maxPool"),a=1;let i=o,l=!1;o.rank===3&&(l=!0,i=W(o,[1,o.shape[0],o.shape[1],o.shape[2]])),N(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),N(We(e,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`),cn("maxPool",s,r);const c={x:i},u={filterSize:t,strides:e,pad:s,dimRoundingMode:r},d=O.runKernel(da,c,u);return l?W(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Yh=P({maxPool_:x2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y2(n,t=[1,1,1],e,s,r,o="NDHWC"){const a=_(n,"x","maxPool3d");let i=a,l=!1;a.rank===4&&(l=!0,i=W(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),N(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),N(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),cn("maxPool3d",s,r);const c={x:i},u={filterSize:t,strides:e,pad:s,dimRoundingMode:r,dataFormat:o},d=O.runKernel(ru,c,u);return l?W(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const w2=P({maxPool3d_:y2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I2(n,t){let e=_(n,"a","maximum"),s=_(t,"b","maximum");[e,s]=ke(e,s),e.dtype==="bool"&&(e=it(e,"int32"),s=it(s,"int32")),vt(e.shape,s.shape);const r={a:e,b:s};return O.runKernel(ca,r)}const rr=P({maximum_:I2});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k2(n,t=null,e=!1){const r={x:_(n,"x","mean")},o={axis:t,keepDims:e};return O.runKernel(ha,r,o)}const Ce=P({mean_:k2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pe(n,t="float32"){if(Fs(n),t==="complex64"){const s=Pe(n,"float32"),r=Pe(n,"float32");return Mr(s,r)}const e=Ke(L(n),t);return O.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ls(n,t="float32"){if(Fs(n),t==="complex64"){const s=Ls(n,"float32"),r=Pe(n,"float32");return Mr(s,r)}const e=qd(L(n),t);return O.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C2(n,t){let e=_(n,"a","minimum"),s=_(t,"b","minimum");[e,s]=ke(e,s),e.dtype==="bool"&&(e=it(e,"int32"),s=it(s,"int32")),vt(e.shape,s.shape);const r={a:e,b:s};return O.runKernel(fa,r)}const ei=P({minimum_:C2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $2(n,t,e){N(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const s=_(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");N(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);const r=e==="reflect"?1:0;for(let i=0;i<s.rank;i++)N(t[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),N(t[i][0]>=0&&t[i][0]<=s.shape[i]-r&&t[i][1]>=0&&t[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);const o={paddings:t,mode:e},a={x:s};return O.runKernel(ma,a,o)}const v2=P({mirrorPad_:$2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S2(n,t){let e=_(n,"a","mod"),s=_(t,"b","mod");[e,s]=ke(e,s);const r={a:e,b:s};return O.runKernel(ga,r)}const N2=P({mod_:S2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T2(n,t=null,e=!1){n=_(n,"x","moments");const s=Et(t,n.shape),r=Ce(n,s,e);let o=r.shape;e||(o=ee(r.shape,s));const a=le(ft(it(n,"float32"),W(r,o))),i=Ce(a,s,e);return{mean:r,variance:i}}const Zh=P({moments_:T2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _2(n,t){let e=_(n,"a","notEqual","string_or_numeric"),s=_(t,"b","notEqual","string_or_numeric");[e,s]=ke(e,s),vt(e.shape,s.shape);const r={a:e,b:s};return O.runKernel(au,r)}const Fu=P({notEqual_:_2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E2(n,t,e=1,s=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:_(n,"indices","oneHot","int32")},i={dtype:r,depth:t,onValue:e,offValue:s};return O.runKernel(xa,a,i)}const zg=P({oneHot_:E2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R2(n){const e={x:_(n,"x","onesLike")};return O.runKernel(cu,e)}const Vn=P({onesLike_:R2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A2(n,t,e=0){const s=_(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:e},o={x:s};return O.runKernel(ya,o,r)}const Jh=P({pad_:A2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D2(n,t,e){const s=_(n,"x","spaceToBatchND");N(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),N(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),N(s.shape.reduce((a,i,l)=>l>0&&l<=t.length?a&&(i+e[l-1][0]+e[l-1][1])%t[l-1]===0:a,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);const r={x:s},o={blockShape:t,paddings:e};return O.runKernel(bu,r,o)}const Qh=P({spaceToBatchND_:D2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F2(n,t,e,s,r,o,a){r==null&&(r=[1,1]),o==null&&(o=1),s===0&&(s="valid");const i=_(n,"x","maxPool");let l=i,c=!1;i.rank===3&&(c=!0,l=W(i,[1,i.shape[0],i.shape[1],i.shape[2]])),N(We(o,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${r}'`);const u=Ye(l.shape,t,o,r,s),d=[u.dilationHeight,u.dilationWidth];let h;s==="same"?h=O2([u.filterHeight,u.filterWidth],d):h=[[0,0],[0,0]];const p=d[0]===1&&d[1]===1,[f,m]=M2([u.inHeight,u.inWidth],d,h),g=p?s:"valid",b=p?l:Qh(l,d,f),y=(e==="avg"?()=>Ph(b,t,o,g,a):()=>Yh(b,t,o,g,a))(),w=p?y:Bh(y,d,m);return c?W(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function M2(n,t,e){const s=e.map(u=>u[0]),r=e.map(u=>u[1]),o=n.concat(s,r),a=t.map((u,d)=>(u-o[d]%u)%u),i=r.map((u,d)=>u+a[d]),l=t.map((u,d)=>[s[d],i[d]]),c=t.map((u,d)=>[0,a[d]]);return[l,c]}function O2(n,t){const s=n.map((a,i)=>a+(a-1)*(t[i]-1)).map(a=>a-1),r=s.map(a=>Math.floor(a/2)),o=s.map((a,i)=>a-r[i]);return s.map((a,i)=>[r[i],o[i]])}const L2=P({pool_:F2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P2(n,t){const e=_(n,"x","prelu"),s=_(t,"alpha","prelu"),r={x:e,alpha:s};return O.runKernel(Ia,r)}const tp=P({prelu_:P2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B2(n,t=null,e=!1){let s=_(n,"x","prod");s.dtype==="bool"&&(s=it(s,"int32"));const r={x:s},o={axis:t,keepDims:e};return O.runKernel(ka,r,o)}const z2=P({prod_:B2});var sc={exports:{}},W2=sc.exports,Wg;function V2(){return Wg||(Wg=1,function(n){(function(t,e,s){function r(l){var c=this,u=i();c.next=function(){var d=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=d-(c.c=d|0)},c.c=1,c.s0=u(" "),c.s1=u(" "),c.s2=u(" "),c.s0-=u(l),c.s0<0&&(c.s0+=1),c.s1-=u(l),c.s1<0&&(c.s1+=1),c.s2-=u(l),c.s2<0&&(c.s2+=1),u=null}function o(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function a(l,c){var u=new r(l),d=c&&c.state,h=u.next;return h.int32=function(){return u.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&o(d,u),h.state=function(){return o(u,{})}),h}function i(){var l=4022871197,c=function(u){u=String(u);for(var d=0;d<u.length;d++){l+=u.charCodeAt(d);var h=.02519603282416938*l;l=h>>>0,h-=l,h*=l,l=h>>>0,h-=l,l+=h*4294967296}return(l>>>0)*23283064365386963e-26};return c}e&&e.exports?e.exports=a:this.alea=a})(W2,n)}(sc)),sc.exports}var rc={exports:{}},U2=rc.exports,Vg;function G2(){return Vg||(Vg=1,function(n){(function(t,e,s){function r(i){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var d=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^d^d>>>8},i===(i|0)?l.x=i:c+=i;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,l.next()}function o(i,l){return l.x=i.x,l.y=i.y,l.z=i.z,l.w=i.w,l}function a(i,l){var c=new r(i),u=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,u&&(typeof u=="object"&&o(u,c),d.state=function(){return o(c,{})}),d}e&&e.exports?e.exports=a:this.xor128=a})(U2,n)}(rc)),rc.exports}var oc={exports:{}},H2=oc.exports,Ug;function j2(){return Ug||(Ug=1,function(n){(function(t,e,s){function r(i){var l=this,c="";l.next=function(){var d=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(d^d<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,i===(i|0)?l.x=i:c+=i;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,u==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function o(i,l){return l.x=i.x,l.y=i.y,l.z=i.z,l.w=i.w,l.v=i.v,l.d=i.d,l}function a(i,l){var c=new r(i),u=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,u&&(typeof u=="object"&&o(u,c),d.state=function(){return o(c,{})}),d}e&&e.exports?e.exports=a:this.xorwow=a})(H2,n)}(oc)),oc.exports}var ac={exports:{}},q2=ac.exports,Gg;function K2(){return Gg||(Gg=1,function(n){(function(t,e,s){function r(i){var l=this;l.next=function(){var u=l.x,d=l.i,h,p;return h=u[d],h^=h>>>7,p=h^h<<24,h=u[d+1&7],p^=h^h>>>10,h=u[d+3&7],p^=h^h>>>3,h=u[d+4&7],p^=h^h<<7,h=u[d+7&7],h=h^h<<13,p^=h^h<<9,u[d]=p,l.i=d+1&7,p};function c(u,d){var h,p=[];if(d===(d|0))p[0]=d;else for(d=""+d,h=0;h<d.length;++h)p[h&7]=p[h&7]<<15^d.charCodeAt(h)+p[h+1&7]<<13;for(;p.length<8;)p.push(0);for(h=0;h<8&&p[h]===0;++h);for(h==8?p[7]=-1:p[h],u.x=p,u.i=0,h=256;h>0;--h)u.next()}c(l,i)}function o(i,l){return l.x=i.x.slice(),l.i=i.i,l}function a(i,l){i==null&&(i=+new Date);var c=new r(i),u=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,u&&(u.x&&o(u,c),d.state=function(){return o(c,{})}),d}e&&e.exports?e.exports=a:this.xorshift7=a})(q2,n)}(ac)),ac.exports}var ic={exports:{}},X2=ic.exports,Hg;function Y2(){return Hg||(Hg=1,function(n){(function(t,e,s){function r(i){var l=this;l.next=function(){var u=l.w,d=l.X,h=l.i,p,f;return l.w=u=u+1640531527|0,f=d[h+34&127],p=d[h=h+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=d[h]=f^p,l.i=h,f+(u^u>>>16)|0};function c(u,d){var h,p,f,m,g,b=[],x=128;for(d===(d|0)?(p=d,d=null):(d=d+"\0",p=0,x=Math.max(x,d.length)),f=0,m=-32;m<x;++m)d&&(p^=d.charCodeAt((m+32)%d.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,h=b[m&127]^=p+g,f=h==0?f+1:0);for(f>=128&&(b[(d&&d.length||0)&127]=-1),f=127,m=4*128;m>0;--m)p=b[f+34&127],h=b[f=f+1&127],p^=p<<13,h^=h<<17,p^=p>>>15,h^=h>>>12,b[f]=p^h;u.w=g,u.X=b,u.i=f}c(l,i)}function o(i,l){return l.i=i.i,l.w=i.w,l.X=i.X.slice(),l}function a(i,l){i==null&&(i=+new Date);var c=new r(i),u=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,u&&(u.X&&o(u,c),d.state=function(){return o(c,{})}),d}e&&e.exports?e.exports=a:this.xor4096=a})(X2,n)}(ic)),ic.exports}var uc={exports:{}},Z2=uc.exports,jg;function J2(){return jg||(jg=1,function(n){(function(t,e,s){function r(i){var l=this,c="";l.next=function(){var d=l.b,h=l.c,p=l.d,f=l.a;return d=d<<25^d>>>7^h,h=h-p|0,p=p<<24^p>>>8^f,f=f-d|0,l.b=d=d<<20^d>>>12^h,l.c=h=h-p|0,l.d=p<<16^h>>>16^f,l.a=f-d|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,i===Math.floor(i)?(l.a=i/4294967296|0,l.b=i|0):c+=i;for(var u=0;u<c.length+20;u++)l.b^=c.charCodeAt(u)|0,l.next()}function o(i,l){return l.a=i.a,l.b=i.b,l.c=i.c,l.d=i.d,l}function a(i,l){var c=new r(i),u=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=c.next,d.quick=d,u&&(typeof u=="object"&&o(u,c),d.state=function(){return o(c,{})}),d}e&&e.exports?e.exports=a:this.tychei=a})(Z2,n)}(uc)),uc.exports}var lc={exports:{}},Q2={},tN=Object.freeze({__proto__:null,default:Q2}),or=MC(tN),eN=lc.exports,qg;function nN(){return qg||(qg=1,function(n){(function(t,e,s){var r=256,o=6,a=52,i="random",l=s.pow(r,o),c=s.pow(2,a),u=c*2,d=r-1,h;function p(w,I,C){var S=[];I=I==!0?{entropy:!0}:I||{};var T=b(g(I.entropy?[w,y(e)]:w??x(),3),S),v=new f(S),$=function(){for(var k=v.g(o),R=l,F=0;k<c;)k=(k+F)*r,R*=r,F=v.g(1);for(;k>=u;)k/=2,R/=2,F>>>=1;return(k+F)/R};return $.int32=function(){return v.g(4)|0},$.quick=function(){return v.g(4)/4294967296},$.double=$,b(y(v.S),e),(I.pass||C||function(k,R,F,B){return B&&(B.S&&m(B,v),k.state=function(){return m(v,{})}),F?(s[i]=k,R):k})($,T,"global"in I?I.global:this==s,I.state)}function f(w){var I,C=w.length,S=this,T=0,v=S.i=S.j=0,$=S.S=[];for(C||(w=[C++]);T<r;)$[T]=T++;for(T=0;T<r;T++)$[T]=$[v=d&v+w[T%C]+(I=$[T])],$[v]=I;(S.g=function(k){for(var R,F=0,B=S.i,M=S.j,z=S.S;k--;)R=z[B=d&B+1],F=F*r+z[d&(z[B]=z[M=d&M+R])+(z[M]=R)];return S.i=B,S.j=M,F})(r)}function m(w,I){return I.i=w.i,I.j=w.j,I.S=w.S.slice(),I}function g(w,I){var C=[],S=typeof w,T;if(I&&S=="object")for(T in w)try{C.push(g(w[T],I-1))}catch{}return C.length?C:S=="string"?w:w+"\0"}function b(w,I){for(var C=w+"",S,T=0;T<C.length;)I[d&T]=d&(S^=I[d&T]*19)+C.charCodeAt(T++);return y(I)}function x(){try{var w;return h&&(w=h.randomBytes)?w=w(r):(w=new Uint8Array(r),(t.crypto||t.msCrypto).getRandomValues(w)),y(w)}catch{var I=t.navigator,C=I&&I.plugins;return[+new Date,t,C,t.screen,y(e)]}}function y(w){return String.fromCharCode.apply(0,w)}if(b(s.random(),e),n.exports){n.exports=p;try{h=or}catch{}}else s["seed"+i]=p})(typeof self<"u"?self:eN,[],Math)}(lc)),lc.exports}var ep,Kg;function sN(){if(Kg)return ep;Kg=1;var n=V2(),t=G2(),e=j2(),s=K2(),r=Y2(),o=J2(),a=nN();return a.alea=n,a.xor128=t,a.xorwow=e,a.xorshift7=s,a.xor4096=r,a.tychei=o,ep=a,ep}var np=sN();/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xg{constructor(t,e,s,r,o){this.mean=t,this.stdDev=e,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=o||Math.random();this.random=np.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let t,e,s=!1;for(;!s;){let r,o,a;do r=2*this.random()-1,o=2*this.random()-1,a=r*r+o*o;while(a>=1||a===0);const i=Math.sqrt(-2*Math.log(a)/a);t=this.mean+this.stdDev*r*i,e=this.mean+this.stdDev*o*i,(!this.truncated||this.isValidTruncated(t))&&(s=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class rN{constructor(t=0,e=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=np.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oN(n,t=0,e=1,s,r){if(Fs(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const o=new Xg(t,e,s,!1,r),a=Ot(n,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const sp=P({randomNormal_:oN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aN(n,t=0,e=1,s="float32",r){Fs(n);const o=Ot(n,s),a=new rN(t,e,null,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}const jr=P({randomUniform_:aN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mu(n,t,e=1,s="float32"){if(e===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:t,step:e,dtype:s};return O.runKernel(El,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iN(n){const e={input:_(n,"input","real")};return O.runKernel(uh,e)}const cc=P({real_:iN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uN(n){const e={x:_(n,"x","reciprocal")};return O.runKernel(Ca,e)}const lN=P({reciprocal_:uN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cN(n){const e={x:_(n,"x","relu")};return O.runKernel($a,e)}const Ps=P({relu_:cN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dN(n){const e={x:_(n,"x","relu6")};return O.runKernel(Na,e)}const Yg=P({relu6_:dN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hN(n,t){const s={x:_(n,"x","reverse")},r={dims:t};return O.runKernel(Ta,s,r)}const qr=P({reverse_:hN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pN(n){const e={x:_(n,"x","round")};return O.runKernel(_a,e)}const Zg=P({round_:pN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fN(n){const e={x:_(n,"x","rsqrt","float32")};return O.runKernel(Ea,e)}const Jg=P({rsqrt_:fN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mN(n){const e={x:_(n,"x","selu")};return O.runKernel(Ra,e)}const Qg=P({selu_:mN});function gN(n,t,e,s,r,o=[1,1],a="NHWC"){const i=_(n,"x","separableConv2d"),l=_(t,"depthwiseFilter","separableConv2d"),c=_(e,"pointwiseFilter","separableConv2d");let u=i,d=!1;if(i.rank===3&&(d=!0,u=W(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");N(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),N(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),N(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),N(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),N(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const h=l.shape[2],p=l.shape[3];N(c.shape[2]===h*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${c.shape[2]}.`);const f=Uh(u,l,s,r,a,o),g=Vr(f,c,1,"valid",a);return d?W(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const tb=P({separableConv2d_:gN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bN(n){const e={x:_(n,"x","sign")};return O.runKernel(Fa,e)}const xN=P({sign_:bN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yN(n){const e={x:_(n,"x","sin","float32")};return O.runKernel(Aa,e)}const eb=P({sin_:yN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wN(n){const e={x:_(n,"x","sinh")};return O.runKernel(Da,e)}const nb=P({sinh_:wN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IN(n,t,e){const s=_(n,"x","slice1d");return N(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),ae(s,[t],[e])}const rp=P({slice1d_:IN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kN(n,t,e){const s=_(n,"x","slice2d");return N(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),ae(s,t,e)}const sb=P({slice2d_:kN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CN(n,t,e){const s=_(n,"x","slice3d");return N(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),ae(s,t,e)}const op=P({slice3d_:CN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $N(n,t,e){const s=_(n,"x","slice4d");return N(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),ae(s,t,e)}const dc=P({slice4d_:$N});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vN(n,t=-1){const e=_(n,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);const s={logits:e},r={dim:t};return O.runKernel(Ba,s,r)}const ap=P({softmax_:vN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SN(n){N(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const t={input:n};return O.runKernel(rh,t)}const rb=P({fft_:SN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NN(n){N(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const t={input:n};return O.runKernel(oh,t)}const ip=P({ifft_:NN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TN(n){const t=n.shape[n.shape.length-1],e=n.size/t;let s;if(t<=2){const r=W(n,[e,t]);s=ip(r)}else{const r=[e,2*(t-1)],o=W(cc(n),[e,t]),a=W(Hh(n),[e,t]),i=qr(ae(o,[0,1],[e,t-2]),1),l=A(qr(ae(a,[0,1],[e,t-2]),1),St(-1)),c=nn([o,i],1),u=nn([a,l],1),d=W(Mr(c,u),[r[0],r[1]]);s=ip(d)}if(s=cc(s),n.rank===3&&n.shape[0]!==0){const r=s,o=n.shape[0];s=W(s,[o,s.shape[0]/o,s.shape[1]]),r.dispose()}return s}const _N=P({irfft_:TN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EN(n,t,e=0){const r={x:_(n,"x","split")},o={numOrSizeSplits:t,axis:e};return O.runKernel(xu,r,o)}const Dn=P({split_:EN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RN(n,t){N(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let e=n.shape[n.shape.length-1];const s=n.size/e;let r;if(t!=null&&t<e){const f=n.shape.map(g=>0),m=n.shape.map(g=>g);m[n.shape.length-1]=t,r=ae(n,f,m),e=t}else if(t!=null&&t>e){const f=n.shape.map(m=>m);f[n.shape.length-1]=t-e,r=nn([n,Pe(f)],n.shape.length-1),e=t}else r=n;const o=Wt(r),a=W(Mr(r,o),[s,e]),i=rb(a),l=Math.floor(e/2)+1,c=cc(i),u=Hh(i),d=Dn(c,[l,e-l],c.shape.length-1),h=Dn(u,[l,e-l],u.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,W(Mr(d[0],h[0]),p)}const AN=P({rfft_:RN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DN(n,t){let e=_(n,"a","squaredDifference"),s=_(t,"b","squaredDifference");[e,s]=ke(e,s),vt(e.shape,s.shape);const r={a:e,b:s},o={};return O.runKernel(za,r,o)}const ob=P({squaredDifference_:DN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FN(n,t){const e=_(n,"x","squeeze","string_or_numeric");return W(e,Xs(e.shape,t).newShape)}const Ou=P({squeeze_:FN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MN(n,t=0){const e=fg(n,"tensors","stack","string_or_numeric");N(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&N(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");const s=e,r={axis:t};return O.runKernel(du,s,r)}const ys=P({stack_:MN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ON(n,t=0){const s={x:_(n,"x","step")},r={alpha:t};return O.runKernel(Er,s,r)}const Lu=P({step_:ON});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LN(n,t,e,s,r=0,o=0,a=0,i=0,l=0){const u={x:_(n,"x","stridedSlice","string_or_numeric")},d={begin:t,end:e,strides:s,beginMask:r,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:l};return O.runKernel(yu,u,d)}const PN=P({stridedSlice_:LN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BN(n){const e={x:_(n,"x","tan","float32")};return O.runKernel(Va,e)}const zN=P({tan_:BN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yn(n,t){Am(n);const e=Hl(n,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return jl(n,null,e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function up(n,t,e){if(Am(n),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=Hl(n,e);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return jl(n,t,s,e)}function ab(n,t,e){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(e.rank<r)throw new Error(o+` update.rank < ${r}. `);if(n.length<s+(e.rank-r))throw new Error(o+` Output shape length < ${s+(e.rank-r)}`);if(e.rank!==r+n.length-s)throw new Error(o+` update.rank != ${r+n.length-s}`);for(let a=0;a<r;++a)if(e.shape[a]!==t.shape[a])throw new Error(o+` updates.shape[${a}] (${e.shape[a]}) != indices.shape[${a}] (${t.shape[a]}).`);for(let a=0;a<e.rank-r;++a)if(e.shape[a+r]!==n[a+s])throw new Error(o+` updates.shape[${a+r}] (${e.shape[a+r]}) != shape[${a+r}] (${n[a+r]})`)}function WN(n,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}ab(e,t,n)}function ws(n,t,e){const s=t.shape.length,r=s>1?t.shape[s-1]:1,o=e.length;let a=1;for(let d=r;d<o;++d)a*=e[d];const i=r<1?1:r,l=L(t.shape)/i,c=[...pt(e.slice(0,r)),1],u=L(e);return{sliceRank:r,numUpdates:l,sliceSize:a,strides:c,outputSize:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VN(n,t=1,e=!0){const s=_(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const o={x:s},a={k:t,sorted:e},[i,l]=O.runKernel(wu,o,a);return{values:i,indices:l}}const UN=P({topk_:VN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GN(n,t=0,e=1,s,r){if(Fs(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new Xg(t,e,s,!0,r),a=Ot(n,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const ib=P({truncatedNormal_:GN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HN(n,t=0){const e=_(n,"x","unique","string_or_numeric");N(e.rank>0,()=>"The input tensor must be at least 1D");const s={x:e},r={axis:t},[o,a]=O.runKernel(Ll,s,r);return{values:o,indices:a}}const jN=P({unique_:HN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qN(n,t,e){const s=_(n,"x","unsortedSegmentSum"),r=_(t,"segmentIds","unsortedSegmentSum","int32");N(Co(e),()=>"numSegments must be of dtype int");const o={x:s,segmentIds:r},a={numSegments:e};return O.runKernel(Pl,o,a)}const ub=P({unsortedSegmentSum_:qN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KN(n,t=0){const e=_(n,"x","unstack","string_or_numeric");N(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);const s={value:e},r={axis:t};return O.runKernel(ku,s,r)}const Kr=P({unstack_:KN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XN(n,t=!0,e,s){return O.makeVariable(n,t,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lb(n,t){const e=[];for(let o=0;o<t.length;o++)t[o]&&e.push(o);const s=Ot(n,"int32"),r=Ot([e.length,n.length],"int32");for(let o=0;o<e.length;o++){const a=s.indexToLoc(e[o]),i=o*n.length;r.values.set(a,i)}return r.toTensor()}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YN(n,t,e){const s=_(n,"x","transpose");if(t==null&&(t=s.shape.map((a,i)=>i).reverse()),N(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(a=>{N(a>=0&&a<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();const r={x:s},o={perm:t};return s.dtype==="complex64"?G(()=>{let a=cc(s),i=Hh(s);return a=O.runKernel(Ys,{x:a},o),i=O.runKernel(Ys,{x:i},o),e&&(i=pe(i)),Mr(a,i)}):O.runKernel(Ys,r,o)}const Vt=P({transpose_:YN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZN(n,t){if(t==null)return n.shape.slice();if(Kt(n.shape,t))return t;if(n.shape.length===t.length){const e=[];for(let s=0;s<n.shape.length;s++)t[s]==null&&n.shape[s]!=null?e.push(n.shape[s]):e.push(t[s]);return e}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JN(n,t,e,s){const r=_(n,"x","dropout");if(N(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),N(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return n instanceof Te?r.clone():r;const o=ZN(r,e),a=1-t,i=wt(tc(et(jr(o,0,1,"float32",s),a)),a);return A(r,i)}const QN=P({dropout_:JN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tT(n,t,e,s,r,o="NHWC",a){let i=n;n.rank===3&&(i=W(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=t;l.rank===3&&(l=W(t,[1,t.shape[0],t.shape[1],t.shape[2]])),N(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),N(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),N(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const c=o==="NHWC"?i.shape[3]:i.shape[1],u=o==="NHWC"?l.shape[3]:l.shape[1];N(c===e[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${e[2]}.`),N(u===e[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${e[3]}).`),cn("conv2dDerFilter",r,a);const d={x:i,dy:l},h={strides:s,pad:r,dataFormat:o,dimRoundingMode:a,filterShape:e};return O.runKernel(Qd,d,h)}const lp=P({conv2DBackpropFilter_:tT});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cp(n,t,e){if(e==null||e==="linear")return n;if(e==="relu")return A(n,Lu(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function dp(n,t){let e=t;const s=_e(n.shape,t.shape);return s.length>0&&(e=gt(e,s)),W(e,n.shape)}function hp(n,t,e,s){if(t==="linear")return n;if(t==="relu")return Ps(n);if(t==="elu")return Zl(n);if(t==="relu6")return Yg(n);if(t==="prelu")return tp(n,e);if(t==="leakyrelu")return jh(n,s);if(t==="sigmoid")return Ja(n);throw new Error(`Unknown fused activation ${t}.`)}const pp=(n,t)=>!(n>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eT({x:n,filter:t,strides:e,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",pp(O.state.gradientDepth,l)===!1){N(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let C=Vr(n,t,e,s,r,o,a);return i!=null&&(C=et(C,i)),hp(C,l,c,u)}const d=_(n,"x","conv2d","float32"),h=_(t,"filter","conv2d","float32");let p=d,f=!1;d.rank===3&&(f=!0,p=W(d,[1,d.shape[0],d.shape[1],d.shape[2]])),N(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),N(h.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),cn("fused conv2d",s,a);const m=r==="NHWC"?p.shape[3]:p.shape[1];N(h.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${h.shape[2]}.`),N(We(e,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${o}'`);const g=we(p.shape,h.shape,e,o,s,a);let b;i!=null&&(b=_(i,"bias","fused conv2d"),[b]=ke(b,d),r==="NHWC"?vt(g.outShape,b.shape):(N(b.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`),N(b.shape.length===0||b.shape[0]===g.outChannels||b.shape[0]===1,()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let x;if(c!=null){const C=c.shape;if(N(C.length<=1||C.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${C.length}.`),C.length===1)N(C[0]===1||C[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the number of output channels (${g.outChannels}).`);else if(C.length===3)try{vt(C,g.outShape)}catch{const T=`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(T)}x=_(c,"prelu weights","fused conv2d")}const y=(C,S)=>{N(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[T,v,$,k]=S,R=cp(C,$,l);N(zr(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const F=zh(v.shape,R,T,e,s),B=lp(v,R,T.shape,e,s),M=[F,B];if(k!=null){const z=dp(k,R);M.push(z)}return M},w={x:p,filter:h,bias:b,preluActivationWeights:x},I={strides:e,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a,activation:l,leakyreluAlpha:u};return i==null?Hr((S,T,v)=>{let $=O.runKernel(Ha,w,I);return v([T,S,$]),f&&($=W($,[$.shape[1],$.shape[2],$.shape[3]])),{value:$,gradFunc:y}})(p,h):Hr((S,T,v,$)=>{let k=O.runKernel(Ha,w,I);return $([T,S,k,v]),f&&(k=W(k,[k.shape[1],k.shape[2],k.shape[3]])),{value:k,gradFunc:y}})(p,h,b)}const nT=P({fusedConv2d_:eT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sT(n,t,e,s,r,o=[1,1],a){let i=n;n.rank===3&&(i=W(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=t;l.rank===3&&(l=W(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:i,dy:l},u={strides:s,pad:r,dimRoundingMode:a,dilations:o,filterShape:e};return O.runKernel(th,c,u)}const rT=P({depthwiseConv2dNativeBackpropFilter_:sT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oT(n,t,e,s,r,o=[1,1],a){let i=t,l=!1;t.rank===3&&(l=!0,i=W(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:i,filter:e},u={strides:s,pad:r,dimRoundingMode:a,dilations:o,inputShape:n},d=O.runKernel(eh,c,u);return l?W(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const aT=P({depthwiseConv2dNativeBackpropInput_:oT});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iT({a:n,b:t,transposeA:e=!1,transposeB:s=!1,bias:r,activation:o="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(pp(O.state.gradientDepth,o)===!1){let k=Xt(n,t,e,s);return r!=null&&(k=et(k,r)),hp(k,o,a,i)}let l=_(n,"a","fused matMul"),c=_(t,"b","fused matMul");[l,c]=ke(l,c);const u=e?l.shape[l.rank-2]:l.shape[l.rank-1],d=s?c.shape[c.rank-1]:c.shape[c.rank-2],h=e?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?c.shape[c.rank-2]:c.shape[c.rank-1],f=l.shape.slice(0,-2),m=c.shape.slice(0,-2),g=L(f),b=L(m);N(u===d,()=>`Error in fused matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${e} and transposeB=${s} must match.`);const y=vt(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([h,p]),w=e?W(l,[g,u,h]):W(l,[g,h,u]),I=s?W(c,[b,p,d]):W(c,[b,d,p]);let C;r!=null&&(C=_(r,"bias","fused matMul"),[C]=ke(C,l),vt(y,C.shape));let S;a!=null&&(S=_(a,"prelu weights","fused matMul"));const T=(k,R)=>{const[F,B,M,z]=R,j=cp(W(k,M.shape),M,o);let V,q;if(!e&&!s?(V=Xt(j,B,!1,!0),q=Xt(F,j,!0,!1)):!e&&s?(V=Xt(j,B,!1,!1),q=Xt(j,F,!0,!1)):e&&!s?(V=Xt(B,j,!1,!0),q=Xt(F,j,!1,!1)):(V=Xt(B,j,!0,!0),q=Xt(j,F,!0,!0)),r!=null){const X=dp(z,j);return[V,q,X]}else return[V,q]},v={a:w,b:I,bias:C,preluActivationWeights:S},$={transposeA:e,transposeB:s,activation:o,leakyreluAlpha:i};return r==null?Hr((R,F,B)=>{const M=O.runKernel(Ga,v,$);return B([R,F,M]),{value:W(M,y),gradFunc:T}})(w,I):Hr((R,F,B,M)=>{const z=O.runKernel(Ga,v,$);return M([R,F,z,B]),{value:W(z,y),gradFunc:T}})(w,I,C)}const cb=P({fusedMatMul_:iT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uT(n,t,e,s,r="bilinear",o=0){const a=_(n,"image","cropAndResize"),i=_(t,"boxes","cropAndResize","float32"),l=_(e,"boxInd","cropAndResize","int32"),c=i.shape[0];N(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),N(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),N(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),N(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),N(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),N(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const u={image:a,boxes:i,boxInd:l},d={method:r,extrapolationValue:o,cropSize:s};return O.runKernel(Wi,u,d)}const lT=P({cropAndResize_:uT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cT(n){const t=_(n,"image","flipLeftRight","float32");N(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const e={image:t};return O.runKernel(Ki,e,{})}const dT=P({flipLeftRight_:cT});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hT(n){const t=_(n,"image","grayscaleToRGB"),e=t.rank-1,s=t.shape[e];N(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),N(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(t.rank);return r.fill(1,0,e),r[e]=3,Rn(t,r)}const pT=P({grayscaleToRGB_:hT});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fT(n){const t=_(n,"image","RGBToGrayscale"),e=t.rank-1,s=t.shape[e];N(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),N(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const r=t.dtype,o=it(t,"float32"),a=yn([.2989,.587,.114]);let i;switch(t.rank){case 2:i=Au("ij,j->i",o,a);break;case 3:i=Au("ijk,k->ij",o,a);break;case 4:i=Au("ijkl,l->ijk",o,a);break;case 5:i=Au("ijklm,m->ijkl",o,a);break;case 6:i=Au("ijklmn,n->ijklm",o,a);break;default:throw new Error("Not a valid tensor rank.")}return i=dn(i,-1),it(i,r)}const mT=P({rgbToGrayscale_:fT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gT(n,t,e=0,s=.5){const r=_(n,"image","rotateWithOffset","float32");N(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const o={image:r},a={radians:t,fillValue:e,center:s};return O.runKernel($u,o,a)}const bT=P({rotateWithOffset_:gT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ni(n,t,e,s,r,o){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),o==null&&(o=0);const a=n.shape[0];return e=Math.min(e,a),N(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),N(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),N(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),N(t.rank===1,()=>"scores must be a 1D tensor"),N(t.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`),N(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:e,iouThreshold:s,scoreThreshold:r,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xT(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY){const o=_(n,"boxes","nonMaxSuppression","float32"),a=_(t,"scores","nonMaxSuppression","float32"),i=ni(o,a,e,s,r);e=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;const l={maxOutputSize:e,iouThreshold:s,scoreThreshold:r};return O.runKernel(iu,{boxes:o,scores:a},l)}const yT=P({nonMaxSuppression_:xT});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wT(n,t,e){const s=IT(n,t,e),r=s<0?-(s+1):s;n.splice(r,0,t)}function IT(n,t,e){return CT(n,t,e||kT)}function kT(n,t){return n>t?1:n<t?-1:0}function CT(n,t,e){let s=0,r=n.length,o=0,a=!1;for(;s<r;){o=s+(r-s>>>1);const i=e(t,n[o]);i>0?s=o+1:(r=o,a=!i)}return a?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fp(n,t,e,s,r){return bp(n,t,e,s,r,0)}function mp(n,t,e,s,r,o){return bp(n,t,e,s,r,0,!1,o,!0)}function gp(n,t,e,s,r,o){return bp(n,t,e,s,r,o,!0)}function bp(n,t,e,s,r,o,a=!1,i=!1,l=!1){const c=[];for(let g=0;g<t.length;g++)t[g]>r&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(db);const u=o>0?-.5/o:0,d=[],h=[];for(;d.length<e&&c.length>0;){const g=c.pop(),{score:b,boxIndex:x,suppressBeginIndex:y}=g;if(b<r)break;let w=!1;for(let I=d.length-1;I>=y;--I){const C=$T(n,x,d[I]);if(C>=s){w=!0;break}if(g.score=g.score*vT(s,u,C),g.score<=r)break}g.suppressBeginIndex=d.length,w||(g.score===b?(d.push(x),h.push(g.score)):g.score>r&&wT(c,g,db))}const p=d.length,f=e-p;i&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const m={selectedIndices:d};return a&&(m.selectedScores=h),l&&(m.validOutputs=p),m}function $T(n,t,e){const s=n.subarray(t*4,t*4+4),r=n.subarray(e*4,e*4+4),o=Math.min(s[0],s[2]),a=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),c=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),h=Math.max(r[1],r[3]),p=(i-o)*(l-a),f=(d-c)*(h-u);if(p<=0||f<=0)return 0;const m=Math.max(o,c),g=Math.max(a,u),b=Math.min(i,d),x=Math.min(l,h),y=Math.max(b-m,0)*Math.max(x-g,0);return y/(p+f-y)}function vT(n,t,e){const s=Math.exp(t*e*e);return e<=n?s:0}function db(n,t){return n.score-t.score||n.score===t.score&&t.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function ST(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY){const o=_(n,"boxes","nonMaxSuppressionAsync"),a=_(t,"scores","nonMaxSuppressionAsync"),i=ni(o,a,e,s,r);e=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;const l=await Promise.all([o.data(),a.data()]),c=l[0],u=l[1],{selectedIndices:d}=fp(c,u,e,s,r);return o!==n&&o.dispose(),a!==t&&a.dispose(),yn(d,"int32")}const NT=ST;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TT(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const a=_(n,"boxes","nonMaxSuppression"),i=_(t,"scores","nonMaxSuppression"),l=ni(a,i,e,s,r,o);e=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,o=l.softNmsSigma;const c={boxes:a,scores:i},u={maxOutputSize:e,iouThreshold:s,scoreThreshold:r,softNmsSigma:o},d=O.runKernel(lu,c,u);return{selectedIndices:d[0],selectedScores:d[1]}}const _T=P({nonMaxSuppressionWithScore_:TT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function ET(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const a=_(n,"boxes","nonMaxSuppressionAsync"),i=_(t,"scores","nonMaxSuppressionAsync"),l=ni(a,i,e,s,r,o);e=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,o=l.softNmsSigma;const c=await Promise.all([a.data(),i.data()]),u=c[0],d=c[1],{selectedIndices:h,selectedScores:p}=gp(u,d,e,s,r,o);return a!==n&&a.dispose(),i!==t&&i.dispose(),{selectedIndices:yn(h,"int32"),selectedScores:yn(p)}}const RT=ET;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AT(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const a=_(n,"boxes","nonMaxSuppression"),i=_(t,"scores","nonMaxSuppression"),l=ni(a,i,e,s,r,null),c=l.maxOutputSize,u=l.iouThreshold,d=l.scoreThreshold,h={boxes:a,scores:i},p={maxOutputSize:c,iouThreshold:u,scoreThreshold:d,padToMaxOutputSize:o},f=O.runKernel(uu,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}const DT=P({nonMaxSuppressionPadded_:AT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function FT(n,t,e,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const a=_(n,"boxes","nonMaxSuppressionAsync"),i=_(t,"scores","nonMaxSuppressionAsync"),l=ni(a,i,e,s,r,null),c=l.maxOutputSize,u=l.iouThreshold,d=l.scoreThreshold,[h,p]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:m}=mp(h,p,c,u,d,o);return a!==n&&a.dispose(),i!==t&&i.dispose(),{selectedIndices:yn(f,"int32"),validOutputs:St(m,"int32")}}const MT=FT;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OT(n,t,e=!1,s=!1){const r=_(n,"images","resizeBilinear");N(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),N(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),N(s===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=r,a=!1;r.rank===3&&(a=!0,o=W(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const i={images:o},l={alignCorners:e,halfPixelCenters:s,size:t},c=O.runKernel(Sa,i,l);return a?W(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const hb=P({resizeBilinear_:OT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LT(n,t,e=!1,s=!1){const r=_(n,"images","resizeNearestNeighbor");N(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),N(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),N(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),N(s===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=r,a=!1;r.rank===3&&(a=!0,o=W(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const i={images:o},l={alignCorners:e,halfPixelCenters:s,size:t},c=O.runKernel(va,i,l);return a?W(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const pb=P({resizeNearestNeighbor_:LT});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PT(n,t="binary",e=!1,s=.5){const r=_(n,"image","threshold"),o=.2989,a=.587,i=.114,l=r.shape[0]*r.shape[1];let c=A(yn([s]),255),u,d,h,p;if(N(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),N(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),N(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),N(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[u,d,h]=Dn(r,[1,1,1],-1);const g=A(u,o),b=A(d,a),x=A(h,i);p=et(et(g,b),x)}else p=n;if(t==="otsu"){const g=Lv(it(Zg(p),"int32"),Ka([]),256);c=BT(g,l)}const f=e?ti(p,c):An(p,c);return it(A(f,255),"int32")}function BT(n,t){let e=yn([-1]),s=yn([0]),r=yn([0]),o,a,i,l,c,u;for(let d=0;d<n.size-1;d++){o=ae(n,0,d+1),a=ae(n,d+1),c=wt(gt(o),t),u=wt(gt(a),t);const h=gt(A(o,Mu(0,o.size)));i=wt(h,gt(o));const p=Yl(a.shape,o.size),f=et(Mu(0,a.size),p),m=A(a,f);l=wt(gt(m),gt(a));const g=ft(i,l),b=ft(i,l),x=A(c,u);r=A(A(x,g),b);const y=An(r,s);s=sn(y,r,s),e=sn(y,yn([d]),e)}return e}const zT=P({threshold_:PT});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WT(n,t,e="nearest",s="constant",r=0,o){const a=_(n,"image","transform","float32"),i=_(t,"transforms","transform","float32");N(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),N(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),N(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const l={image:a,transforms:i},c={interpolation:e,fillMode:s,fillValue:r,outputShape:o};return O.runKernel(Iu,l,c)}const VT=P({transform_:WT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UT(n,t,e){const s=_(n,"a","bandPart");N(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[o,a]=s.shape.slice(-2);let i,l;typeof t=="number"?(N(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),N(t<=o,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`),i=_(t<0?o:t,"numLower","bandPart")):(N(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),i=sn(nc(t,0),o,ei(t,o))),typeof e=="number"?(N(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`),N(e<=a,()=>`bandPart(): numUpper (${e}) must not be greater than the number of columns (${a}).`),l=_(e<0?a:e,"numUpper","bandPart")):(N(e.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=sn(nc(e,0),a,ei(e,a)));const c=W(Mu(0,o,1,"int32"),[-1,1]),u=Mu(0,a,1,"int32"),d=ft(c,u),h=Os(ti(d,i),Gr(d,pe(l))),p=Pe([o,a],s.dtype);return W(ys(Kr(W(s,[-1,o,a])).map(f=>sn(h,f,p))),r)}const GT=P({bandPart_:UT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HT(n){let t;if(Array.isArray(n)){t=!1,N(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let o=1;o<n.length;++o)N(n[o].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${r})`)}else t=!0,n=Dn(n,n.shape[0],0).map(r=>Ou(r,[0]));N(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const e=[],s=n;for(let r=0;r<n.length;++r)e.push(O.tidy(()=>{let o=s[r];if(r>0)for(let a=0;a<r;++a){const i=A(gt(A(e[a],o)),e[a]);o=ft(o,i)}return wt(o,Ql(o,"euclidean"))}));return t?ys(e,0):e}const jT=P({gramSchmidt_:HT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qT(n,t=!1){if(N(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return fb(n,t);{const e=n.shape.slice(0,n.shape.length-2).reduce((l,c)=>l*c),s=Kr(W(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],o=[];s.forEach(l=>{const[c,u]=fb(l,t);r.push(c),o.push(u)});const a=W(ys(r,0),n.shape),i=W(ys(o,0),n.shape);return[a,i]}}function fb(n,t=!1){return O.tidy(()=>{N(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const e=n.shape[0],s=n.shape[1];let r=Lg(e),o=Br(n);const a=up([[1]],[1,1]);let i=Br(a);const l=e>=s?s:e;for(let c=0;c<l;++c){const u=o,d=i,h=r;[i,o,r]=O.tidy(()=>{const p=ae(o,[c,c],[e-c,1]),f=Ql(p),m=ae(o,[c,c],[1,1]),g=sn(An(m,0),up([[-1]]),up([[1]])),b=ft(m,A(g,f)),x=wt(p,b);x.shape[0]===1?i=Br(a):i=nn([a,ae(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);const y=pe(wt(Xt(g,b),f)),w=ae(o,[c,0],[e-c,s]),I=A(y,i),C=Vt(i);if(c===0)o=ft(w,Xt(I,Xt(C,w)));else{const v=ft(w,Xt(I,Xt(C,w)));o=nn([ae(o,[0,0],[c,s]),v],0)}const S=Vt(I),T=ae(r,[0,c],[e,r.shape[1]-c]);if(c===0)r=ft(T,Xt(Xt(T,i),S));else{const v=ft(T,Xt(Xt(T,i),S));r=nn([ae(r,[0,0],[e,c]),v],1)}return[i,o,r]}),Mt([u,d,h])}return!t&&e>s&&(r=ae(r,[0,0],[e,s]),o=ae(o,[0,0],[s,s])),[r,o]})}const KT=P({qr_:qT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var hn;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(hn||(hn={}));function XT(n,t,e=hn.SUM_BY_NONZERO_WEIGHTS){const s=_(n,"losses","computeWeightedLoss");let r=null;t!=null&&(r=_(t,"weights","computeWeightedLoss"));const o=r==null?s:A(s,r);if(e===hn.NONE)return o;if(e===hn.SUM)return gt(o);if(e===hn.MEAN){if(r==null)return Ce(o);{const a=s.size/r.size,i=wt(gt(o),gt(r));return a>1?wt(i,St(a)):i}}if(e===hn.SUM_BY_NONZERO_WEIGHTS){if(r==null)return wt(gt(o),St(s.size));{const a=A(r,Ls(s.shape)),i=it(gt(Fu(a,St(0))),"float32");return wt(gt(o),i)}}throw Error(`Unknown reduction: ${e}`)}const Bs=P({computeWeightedLoss_:XT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YT(n,t,e,s=hn.SUM_BY_NONZERO_WEIGHTS){const r=_(n,"labels","absoluteDifference"),o=_(t,"predictions","absoluteDifference");let a=null;e!=null&&(a=_(e,"weights","absoluteDifference")),Sn(r.shape,o.shape,"Error in absoluteDifference: ");const i=Le(ft(r,o));return Bs(i,a,s)}const ZT=P({absoluteDifference_:YT});function JT(n,t,e,s,r=hn.SUM_BY_NONZERO_WEIGHTS){const o=_(n,"labels","cosineDistance"),a=_(t,"predictions","cosineDistance");let i=null;s!=null&&(i=_(s,"weights","cosineDistance")),Sn(o.shape,a.shape,"Error in cosineDistance: ");const l=St(1),c=ft(l,gt(A(o,a),e,!0));return Bs(c,i,r)}const QT=P({cosineDistance_:JT});function t_(n,t,e,s=hn.SUM_BY_NONZERO_WEIGHTS){let r=_(n,"labels","hingeLoss");const o=_(t,"predictions","hingeLoss");let a=null;e!=null&&(a=_(e,"weights","hingeLoss")),Sn(r.shape,o.shape,"Error in hingeLoss: ");const i=St(1);r=ft(A(St(2),r),i);const l=Ps(ft(i,A(r,o)));return Bs(l,a,s)}const e_=P({hingeLoss_:t_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n_(n,t,e,s=1,r=hn.SUM_BY_NONZERO_WEIGHTS){const o=_(n,"labels","huberLoss"),a=_(t,"predictions","huberLoss");let i=null;e!=null&&(i=_(e,"weights","huberLoss")),Sn(o.shape,a.shape,"Error in huberLoss: ");const l=St(s),c=Le(ft(a,o)),u=ei(c,l),d=ft(c,u),h=et(A(St(.5),le(u)),A(l,d));return Bs(h,i,r)}const s_=P({huberLoss_:n_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r_(n,t,e,s=1e-7,r=hn.SUM_BY_NONZERO_WEIGHTS){const o=_(n,"labels","logLoss"),a=_(t,"predictions","logLoss");let i=null;e!=null&&(i=_(e,"weights","logLoss")),Sn(o.shape,a.shape,"Error in logLoss: ");const l=St(1),c=St(s),u=pe(A(o,Wn(et(a,c)))),d=A(ft(l,o),Wn(et(ft(l,a),c))),h=ft(u,d);return Bs(h,i,r)}const o_=P({logLoss_:r_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a_(n,t,e,s=hn.SUM_BY_NONZERO_WEIGHTS){const r=_(n,"labels","meanSquaredError"),o=_(t,"predictions","meanSquaredError");let a=null;e!=null&&(a=_(e,"weights","meanSquaredError")),Sn(r.shape,o.shape,"Error in meanSquaredError: ");const i=ob(r,o);return Bs(i,a,s)}const i_=P({meanSquaredError_:a_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u_(n,t){const e=_(n,"labels","sigmoidCrossEntropyWithLogits"),s=_(t,"logits","sigmoidCrossEntropyWithLogits");Sn(e.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Ps(s),o=A(s,e),a=qh(En(pe(Le(s))));return et(ft(r,o),a)}function l_(n,t,e,s=0,r=hn.SUM_BY_NONZERO_WEIGHTS){let o=_(n,"multiClassLabels","sigmoidCrossEntropy");const a=_(t,"logits","sigmoidCrossEntropy");let i=null;if(e!=null&&(i=_(e,"weights","sigmoidCrossEntropy")),Sn(o.shape,a.shape,"Error in sigmoidCrossEntropy: "),s>0){const c=St(s),u=St(1),d=St(.5);o=et(A(o,ft(u,c)),A(d,c))}const l=u_(o,a);return Bs(l,i,r)}const c_=P({sigmoidCrossEntropy_:l_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d_(n,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return Hr((r,o,a)=>{const l=Kh(o,[e],!0),c=ft(it(o,"float32"),l);a([r,c]);const u=pe(A(c,r));return{value:gt(u,[e]),gradFunc:(p,f)=>{const[m,g]=f,b=ee(p.shape,[e]);return[A(W(p,b),ft(it(m,"float32"),En(g))),A(W(p,b),ft(En(g),it(m,"float32")))]}}})(n,t)}function h_(n,t,e,s=0,r=hn.SUM_BY_NONZERO_WEIGHTS){let o=_(n,"onehotLabels","softmaxCrossEntropy");const a=_(t,"logits","softmaxCrossEntropy");let i=null;if(e!=null&&(i=_(e,"weights","softmaxCrossEntropy")),Sn(o.shape,a.shape,"Error in softmaxCrossEntropy: "),s>0){const c=St(s),u=St(1),d=St(o.shape[1]);o=et(A(o,ft(u,c)),wt(c,d))}const l=d_(o,a);return Bs(l,i,r)}const p_=P({softmaxCrossEntropy_:h_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zs={flipLeftRight:dT,grayscaleToRGB:pT,resizeNearestNeighbor:pb,resizeBilinear:hb,rgbToGrayscale:mT,rotateWithOffset:bT,cropAndResize:lT,nonMaxSuppression:yT,nonMaxSuppressionAsync:NT,nonMaxSuppressionWithScore:_T,nonMaxSuppressionWithScoreAsync:RT,nonMaxSuppressionPadded:DT,nonMaxSuppressionPaddedAsync:MT,threshold:zT,transform:VT},f_={bandPart:GT,gramSchmidt:jT,qr:KT},m_={absoluteDifference:ZT,computeWeightedLoss:Bs,cosineDistance:QT,hingeLoss:e_,huberLoss:s_,logLoss:o_,meanSquaredError:i_,sigmoidCrossEntropy:c_,softmaxCrossEntropy:p_};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g_=new Map,b_=new Map;class si{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Un{constructor(){this.classNameMap={}}static getMap(){return Un.instance==null&&(Un.instance=new Un),Un.instance}static register(t){Un.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function tt(n,t,e){N(n.className!=null,()=>"Class being registered does not have the static className property defined."),N(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),N(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof e>"u"&&(e=n.className);const s=e,r=t+">"+s;return Un.register(n),g_.set(r,n),b_.set(n,r),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ar extends si{minimize(t,e=!1,s){const{value:r,grads:o}=this.computeGradients(t,s);if(s!=null){const a=s.map(i=>({name:i.name,tensor:o[i.name]}));this.applyGradients(a)}else this.applyGradients(o);return Mt(o),e?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return o2(t,e)}dispose(){this.iterations_!=null&&Mt(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:St(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(ar,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mb extends ar{static get className(){return"Adadelta"}constructor(t,e,s=null){super(),this.learningRate=t,this.rho=e,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=O.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=O.registeredVariables[s],a=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:G(()=>Wt(o).variable(a))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:G(()=>Wt(o).variable(a))});const i=Array.isArray(t)?t[r].tensor:t[s];if(i==null)return;const l=this.accumulatedGrads[r].variable,c=this.accumulatedUpdates[r].variable;G(()=>{const u=et(A(l,this.rho),A(le(i),1-this.rho)),d=A(wt(Ze(et(c,this.epsilon)),Ze(et(l,this.epsilon))),i),h=et(A(c,this.rho),A(le(d),1-this.rho));l.assign(u),c.assign(h);const p=et(A(d,-this.learningRate),o);o.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Mt(this.accumulatedGrads.map(t=>t.variable)),Mt(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=t.length/2,s=!1;this.accumulatedGrads=t.slice(0,e).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=t.slice(e,e*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gb extends ar{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=O.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:G(()=>Yl(o.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(t)?t[r].tensor:t[s];if(a==null)return;const i=this.accumulatedGrads[r].variable;G(()=>{const l=et(i,le(a));i.assign(l);const c=et(A(wt(a,Ze(et(l,O.backend.epsilon()))),-this.learningRate),o);o.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Mt(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulatedGrads=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bb extends ar{static get className(){return"Adam"}constructor(t,e,s,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],G(()=>{this.accBeta1=St(e).variable(),this.accBeta2=St(s).variable()}),r==null&&(this.epsilon=O.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);G(()=>{const s=ft(1,this.accBeta1),r=ft(1,this.accBeta2);e.forEach((o,a)=>{const i=O.registeredVariables[o],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:G(()=>Wt(i).variable(l))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${o}/v`,variable:G(()=>Wt(i).variable(l))});const c=Array.isArray(t)?t[a].tensor:t[o];if(c==null)return;const u=this.accumulatedFirstMoment[a].variable,d=this.accumulatedSecondMoment[a].variable,h=et(A(u,this.beta1),A(c,1-this.beta1)),p=et(A(d,this.beta2),A(le(c),1-this.beta2)),f=wt(h,s),m=wt(p,r);u.assign(h),d.assign(p);const g=et(A(wt(f,et(Ze(m),this.epsilon)),-this.learningRate),i);i.assign(g)}),this.accBeta1.assign(A(this.accBeta1,this.beta1)),this.accBeta2.assign(A(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Mt(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&Mt(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),G(()=>{this.accBeta1.assign(Ur(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ur(this.beta2,this.iterations_+1))});const e=t.length/2,s=!1;this.accumulatedFirstMoment=t.slice(0,e).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xb extends ar{static get className(){return"Adamax"}constructor(t,e,s,r=null,o=0){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],G(()=>{this.iteration=St(0).variable(),this.accBeta1=St(e).variable()}),r==null&&(this.epsilon=O.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);G(()=>{const s=ft(1,this.accBeta1),r=wt(-this.learningRate,et(A(this.iteration,this.decay),1));e.forEach((o,a)=>{const i=O.registeredVariables[o],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:Wt(i).variable(l)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${o}/v`,variable:Wt(i).variable(l)});const c=Array.isArray(t)?t[a].tensor:t[o];if(c==null)return;const u=this.accumulatedFirstMoment[a].variable,d=this.accumulatedWeightedInfNorm[a].variable,h=et(A(u,this.beta1),A(c,1-this.beta1)),p=A(d,this.beta2),f=Le(c),m=rr(p,f);u.assign(h),d.assign(m);const g=et(A(wt(r,s),wt(h,et(m,this.epsilon))),i);i.assign(g)}),this.iteration.assign(et(this.iteration,1)),this.accBeta1.assign(A(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Mt(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&Mt(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xp extends ar{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=Array.isArray(t)?t[r].tensor:t[s];if(o==null)return;const a=O.registeredVariables[s];G(()=>{const i=et(A(this.c,o),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=ms(St(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yb extends xp{static get className(){return"Momentum"}constructor(t,e,s=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=s,this.accumulations=[],this.m=St(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=O.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:G(()=>Wt(o).variable(!1))});const a=this.accumulations[r].variable,i=Array.isArray(t)?t[r].tensor:t[s];i!=null&&G(()=>{let l;const c=et(A(this.m,a),i);this.useNesterov?l=et(A(this.c,et(i,A(c,this.m))),o):l=et(A(this.c,c),o),a.assign(c),o.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Mt(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulations=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wb extends ar{static get className(){return"RMSProp"}constructor(t,e=.9,s=0,r=null,o=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,r==null&&(this.epsilon=O.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,r)=>{const o=O.registeredVariables[s],a=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:G(()=>Wt(o).variable(a))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:G(()=>Wt(o).variable(a))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:G(()=>Wt(o).variable(a))});const i=Array.isArray(t)?t[r].tensor:t[s];if(i==null)return;const l=this.accumulatedMeanSquares[r].variable,c=this.accumulatedMoments[r].variable;G(()=>{const u=et(A(l,this.decay),A(le(i),1-this.decay));if(this.centered){const d=this.accumulatedMeanGrads[r].variable,h=et(A(d,this.decay),A(i,1-this.decay)),p=wt(A(i,this.learningRate),Ze(ft(u,et(le(h),this.epsilon)))),f=et(A(c,this.momentum),p);l.assign(u),d.assign(h),c.assign(f);const m=ft(o,f);o.assign(m)}else{const d=et(A(l,this.decay),A(le(i),1-this.decay)),h=et(A(c,this.momentum),wt(A(i,this.learningRate),Ze(et(d,this.epsilon))));l.assign(d),c.assign(h);const p=ft(o,h);o.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Mt(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Mt(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&Mt(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,s=!1;this.accumulatedMeanSquares=t.slice(0,e).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=t.slice(e,e*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x_=[mb,gb,bb,xb,yb,wb,xp];function y_(){for(const n of x_)tt(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ib(n,t,e,s){a(n),e=e??0,s=s??1,i(e,s);let r=0;const o=l=>(l.then(c=>{const u=e+ ++r/n.length*(s-e);return t(u),c}),l);function a(l){N(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function i(l,c){N(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),N(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),N(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(n.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function w_(n,t){t==null&&(t={});const e=t.fetchFunc==null?H().platform.fetch:t.fetchFunc,s=n.map(d=>e(d,t.requestInit,{isBinary:!0})),i=(t.onProgress==null?await Promise.all(s):await Ib(s,t.onProgress,0,.5)).map(d=>d.arrayBuffer());return t.onProgress==null?await Promise.all(i):await Ib(i,t.onProgress,.5,1)}function I_(n,t){var e;const s=t.fetchFunc==null?H().platform.fetch:t.fetchFunc;let r=0,o;return(e=t.onProgress)===null||e===void 0||e.call(t,0),new ReadableStream({pull:async a=>{for(var i;r<n.length;){o||(o=(await s(n[r],t.requestInit,{isBinary:!0})).body.getReader());const{done:l,value:c}=await o.read();if(l){r++,o=void 0,(i=t.onProgress)===null||i===void 0||i.call(t,r/n.length);continue}a.enqueue(c);return}a.close()}})}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k_="application/octet-stream",C_="application/json";class yp{constructor(t,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(N(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=H().platform.fetch,N(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&N(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{},this.loadOptions=e}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r=x$(t,s);if(e.body.append("model.json",new Blob([JSON.stringify(r)],{type:C_}),"model.json"),t.weightData!=null){const a=er.join(t.weightData);e.body.append("model.weights.bin",new Blob([a],{type:k_}),"model.weights.bin")}const o=await this.fetch(this.path,e);if(o.ok)return{modelArtifactsInfo:Eh(t),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async loadModelJSON(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}const s=e.modelTopology,r=e.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return e}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const t=await this.loadModelJSON();return w$(t,e=>this.loadWeights(e))}async loadStream(){const t=await this.loadModelJSON(),e=await this.getWeightUrls(t.weightsManifest),s=xg(t.weightsManifest),r=()=>I_(e,this.loadOptions);return Object.assign(Object.assign({},t),{weightSpecs:s,getWeightStream:r})}async getWeightUrls(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=$_(e),o=this.weightPathPrefix||s,a=[],i=[];for(const l of t)for(const c of l.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(c)):a.push(o+c+r);return this.weightUrlConverter&&a.push(...await Promise.all(i)),a}async loadWeights(t){const e=await this.getWeightUrls(t),s=xg(t),r=await w_(e,this.loadOptions);return[s,r]}}yp.URL_SCHEME_REGEX=/^https?:\/\//;function $_(n){const t=n.lastIndexOf("/"),e=n.lastIndexOf("?"),s=n.substring(0,t),r=e>t?n.substring(e):"";return[s+"/",r]}function kb(n){return n.match(yp.URL_SCHEME_REGEX)!=null}const Cb=(n,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(n)?e=n.every(s=>kb(s)):e=kb(n),e)return $b(n,t)}return null};Oe.registerSaveRouter(Cb),Oe.registerLoadRouter(Cb);function $b(n,t){return new yp(n,t)}function v_(n,t){return $b(n,t)}function hc(n,t){const e=n.shape.length,s=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${e}`);if(L(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=t.shape,o=r[r.length-1];let a=1;for(let d=0;d<r.length-1;++d)a*=r[d];const i=n.shape,l=r.slice();l.pop();let c=1;for(let d=o;d<e;++d)c*=i[d],l.push(i[d]);const u=[...pt(n.shape).map(d=>d/c),1].slice(0,o);return[l,a,c,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wp=-2,S_=-1;function Ip(n,t,e){const s=n.shape.length;N(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),N(s===e.length,()=>`Error in slice${s}D: Length of size ${e} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)N(t[r]+e[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+e[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function N_(n){const t=[];let e=0;for(;n>0;)n&1&&t.push(e),n/=2,e++;return t}function pc(n,t,e){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((t[r]-n[r])/e[r]);return s}function vb(n,t,e,s){const r=[...n];for(let o=r.length;o<s.length;o++)r.push(1);for(let o=0;o<e;o++)o===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function Sb(n,t,e){return e<=n?e:e-(t-1)}function Nb(n,t){const e=[];for(let s=0;s<n;s++)e.push(t+s);return e}function T_(n,t,e,s,r,o,a,i,l){const c=n.length;let u=new Array(c),d=new Array(c),h=new Array(c);if(t.length&&e>0){const p=t[0],f=e+1;u=Tb(a,p,f,s,n),d=_b(i,p,f,r,n),h=vb(o,p,f,n)}else for(let p=0;p<c;p++)u[p]=Rb(a,s,o,n,p,l),d[p]=Ab(i,r,o,n,p,l),h[p]=Eb(o,p,l);return{begin:u,end:d,strides:h}}function Tb(n,t,e,s,r){const o=[...r],a=Nb(e,t);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=0;else{const l=Sb(t,e,i);let c=s[l];n&1<<l&&(c=0),o[i]=c}return o}function _b(n,t,e,s,r){const o=[...r],a=Nb(e,t);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const l=Sb(t,e,i);let c=s[l];n&1<<l&&(c=Number.MAX_SAFE_INTEGER),o[i]=c}for(let i=0;i<o.length;i++){const l=r[i];o[i]<0&&(o[i]+=l),o[i]=vr(0,o[i],r[i])}return o}function Eb(n,t,e){let s=n[t];return(e&1<<t||s==null)&&(s=1),s}function Rb(n,t,e,s,r,o){let a=t[r];const i=e[r]||1;(n&1<<r||o&1<<r||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),a=vr(0,a,l-1),a}function Ab(n,t,e,s,r,o){let a=t[r];const i=e[r]||1;(n&1<<r||o&1<<r||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),i>0?a=vr(0,a,l):a=vr(-1,a,l-1),a}function fc(n,t,e){let s=e.length;for(let r=0;r<e.length;r++)if(e[r]>1){s=r;break}for(let r=s+1;r<e.length;r++)if(t[r]>0||e[r]!==n[r])return!1;return!0}function mc(n,t){let e=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)e+=n[s]*t[s];return e}function Pu(n,t,e){let s;const r=n.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(a=>{N(a!==-1,()=>"slice() does not support negative begin indexing.")});let o;return e==null?o=new Array(r).fill(-1):typeof e=="number"?o=[e,...new Array(r-1).fill(-1)]:e.length<r?o=e.concat(new Array(r-e.length).fill(-1)):o=e,o=o.map((a,i)=>a>=0?a:(N(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),n.shape[i]-s[i])),[s,o]}function gc(n,t,e,s,r,o,a,i,l){let c;if(s==null?(c=new Array(t.length),c.fill(1)):c=s,a!=null&&(a&a-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const d={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:c.slice(),beginMask:r,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:l};for(let y=0;y<d.dims;y++)u&&(1<<y&i)!==0&&d.numAddAxisAfterEllipsis++,1<<y&a&&(u=!0);u||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};__(d,h);let p=!0,f=!0,m=!0;const g=[],b=[];for(let y=0;y<n.length;++y){if(h.strides[y]===0)throw Error(`strides[${y}] must be non-zero`);const w=!!(h.shrinkAxisMask&1<<y),I=n[y];if(I===-1){g.push(w?1:-1);continue}const C=[h.beginMask&1<<y,h.endMask&1<<y],S=[h.strides[y]>0?0:-1,h.strides[y]>0?I:I-1];if(w&&h.strides[y]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&h.strides[y]===1;const T=!!(h.beginMask&1<<y&&h.endMask&1<<y);if(h.beginValid&&h.endValid){if(w){const R=h.begin[y]<0?I+h.begin[y]:h.begin[y];if(h.begin[y]=R,h.end[y]=h.begin[y]+1,R<0||R>=I)throw Error(`slice index ${h.begin[y]} of dimension ${y} out of bounds.`)}else h.begin[y]=Db(h.begin[y],0,h.strides[y],I,C,S),h.end[y]=Db(h.end[y],1,h.strides[y],I,C,S);const k=h.strides[y]===1&&h.begin[y]===0&&h.end[y]===I;p=p&&k,f=f&&(y===0&&h.strides[y]===1||k)}else p=p&&h.strides[y]===1&&T,f=f&&(y===0&&h.strides[y]===1||T);let v,$=!1;if(h.beginValid&&h.endValid?(v=h.end[y]-h.begin[y],$=!0):w?(v=1,$=!0):T&&I>=0&&(h.strides[y]<0?v=-I:v=I,$=!0),$){let k;v===0||v<0!=h.strides[y]<0?k=0:k=Math.trunc(v/h.strides[y])+(v%h.strides[y]!==0?1:0),g.push(k)}else g.push(-1)}for(let y=0;y<h.finalShapeGatherIndices.length;++y){const w=h.finalShapeGatherIndices[y];w>=0?b.push(g[w]):w===wp&&b.push(1)}return{finalShapeSparse:b.filter((y,w)=>h.finalShapeGatherIndices[w]!==wp),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function __(n,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=n.begin!=null,t.endValid=n.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const r=Math.min(t.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,t.dims);for(;e<r;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=s}else if(1<<s&n.newAxisMask)t.finalShapeGatherIndices.push(wp),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);n.begin!=null&&(t.begin[e]=n.begin[s]),n.end!=null&&(t.end[e]=n.end[s]),t.strides[e]=n.strides[s],n.beginMask&1<<s&&(t.beginMask|=1<<e),n.endMask&1<<s&&(t.endMask|=1<<e),n.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(S_),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[e]=s,e++}}function Db(n,t,e,s,r,o){if(r[t])return e>0?o[t]:o[t+1&1];{const a=n<0?s+n:n;return a<o[0]?o[0]:a>o[1]?o[1]:a}}var E_=Object.freeze({__proto__:null,assertParamsValid:Ip,computeFlatOffset:mc,computeOutShape:pc,getNormalizedAxes:T_,isSliceContinous:fc,maskToAxes:N_,parseSliceParams:Pu,sliceInfo:gc,startForAxis:Rb,startIndicesWithElidedDims:Tb,stopForAxis:Ab,stopIndicesWithElidedDims:_b,stridesForAxis:Eb,stridesWithElidedDims:vb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class R_{static sgd(t){return new xp(t)}static momentum(t,e,s=!1){return new yb(t,e,s)}static rmsprop(t,e=.9,s=0,r=null,o=!1){return new wb(t,e,s,r,o)}static adam(t=.001,e=.9,s=.999,r=null){return new bb(t,e,s,r)}static adadelta(t=.001,e=.95,s=null){return new mb(t,e,s)}static adamax(t=.002,e=.9,s=.999,r=null,o=0){return new xb(t,e,s,r,o)}static adagrad(t,e=.1){return new gb(t,e)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xr=R_;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A_=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function Fb(){return new Promise(n=>A_(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bc(n,t){const e=n[0].length;n.forEach((r,o)=>{N(r.length===e,()=>`Error in concat${e}D: rank of tensors[${o}] must be the same as the rank of the rest (${e})`)}),N(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const s=n[0];n.forEach((r,o)=>{for(let a=0;a<e;a++)N(a===t||r[a]===s[a],()=>`Error in concat${e}D: Shape of tensors[${o}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${o}.`)})}function Fn(n,t){const e=n[0].slice();for(let s=1;s<n.length;s++)e[t]+=n[s][t];return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var os;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(os||(os={}));function Mb(n,t,e){let s=new Array;if(e==null&&t==null)return s;if(t==null)for(;s.length<n+e.length;)s.push(-1);else s=t.slice();if(e==null)return s;if(n+e.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${n+e.length}, but shape.rank = ${s.length}`);for(let r=1;r<e.length;++r){const o=e[r],a=s[s.length-e.length+r],i=s[a];if(o>=0)if(i>=0){if(i!==o)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+n}] = ${o} but shape[${r+n}] = ${i}`)}else s[a]=o}return s}function Ob(n){const t={FIRST_DIM_SIZE:os.FIRST_DIM_SIZE,VALUE_ROWIDS:os.VALUE_ROWIDS,ROW_LENGTHS:os.ROW_LENGTHS,ROW_SPLITS:os.ROW_SPLITS,ROW_LIMITS:os.ROW_LIMITS,ROW_STARTS:os.ROW_STARTS},e=[];for(const s of n)if(s in t)e.push(t[s]);else break;return e}function Lb(n){return n.length===0?0:n[0]===os.FIRST_DIM_SIZE?n.length-1:n.length}function Pb(n,t){if(n==null||t==null)return;const e=n.length,s=t.length;if(e>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(e,s-1);++r){const o=n[r],a=t[r+1];if(o>=0&&a>=0&&o!==1&&o!==a)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-n.length}] = ${o} but ragged tensor input.flatValues.shape[${r-n.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kp=30;function xc(n){return n<=kp?n:jd(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yc(n,t,e){const s=e*(typeof n=="number"?n:n[0]),r=t*(typeof n=="number"?n:n[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yr(n,t,e,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(n[0]/e),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const o=t.length;for(let a=0;a<o;++a)r=r.concat([n[a+1]/t[a],t[a]]);r=r.concat(n.slice(o+1))}return r}function Zr(n,t,e=!0){const s=[];if(e){s.push(t);for(let r=t+1;r<n;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{const r=[],o=[];for(let a=1;a<n;++a)a>=t*2+1||a%2===1?o.push(a):r.push(a);s.push(...r),s.push(0),s.push(...o)}return s}function Jr(n,t,e,s=!0){const r=[];s?r.push(n[0]/e):r.push(n[0]*e);for(let o=1;o<n.length;++o)o<=t.length?s?r.push(t[o-1]*n[o]):r.push(n[o]/t[o-1]):r.push(n[o]);return r}function wc(n,t){const e=[0];for(let s=0;s<t;++s)e.push(n[s][0]);return e}function Ic(n,t,e){const s=n.slice(0,1);for(let r=0;r<e;++r)s.push(n[r+1]-t[r][0]-t[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kc=1.7580993408473768,Cc=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cp=.3275911,$p=.254829592,vp=-.284496736,Sp=1.421413741,Np=-1.453152027,Tp=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ws(n,t){if(n.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${t.length}.`);const e=new Float32Array(n.length*2);for(let s=0;s<e.length;s+=2)e[s]=n[s/2],e[s+1]=t[s/2];return e}function Bb(n){const t=new Float32Array(n.length/2),e=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)t[s/2]=n[s],e[s/2]=n[s+1];return{real:t,imag:e}}function zb(n){const t=Math.ceil(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<n.length;r+=4)e[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:e,imag:s}}function Wb(n){const t=Math.floor(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<n.length;r+=4)e[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:e,imag:s}}function _p(n,t){const e=n[t*2],s=n[t*2+1];return{real:e,imag:s}}function Vb(n,t,e,s){n[s*2]=t,n[s*2+1]=e}function Ub(n,t){const e=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const o=(t?2:-2)*Math.PI*(r/n);e[r]=Math.cos(o),s[r]=Math.sin(o)}return{real:e,imag:s}}function Gb(n,t,e){const s=(e?2:-2)*Math.PI*(n/t),r=Math.cos(s),o=Math.sin(s);return{real:r,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ep="->",D_=/->/g,Hb=",",jb="...";function Rp(n,t){n=n.replace(/\s/g,"");const e=(n.length-n.replace(D_,"").length)/Ep.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${Ep}").`);const[s,r]=n.split(Ep);N(s.indexOf(jb)===-1,()=>`The ellipsis notation ("${jb}") is not supported yet.`);const o=s.split(Hb),a=o.length;if(t!==a)throw new Error(`Expected ${a} input tensors, received ${t}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let h=0;h<r.length;++h){const p=r[h];if(!o.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);i.indexOf(p)===-1&&i.push(p)}for(let h=0;h<s.length;++h){const p=s[h];i.indexOf(p)===-1&&p!==Hb&&i.push(p)}const l=new Array(o.length);for(let h=0;h<a;++h){if(new Set(o[h].split("")).size!==o[h].length)throw new Error(`Found duplicate axes in input component ${o[h]}. Support for duplicate axes in input is not implemented yet.`);l[h]=[];for(let p=0;p<o[h].length;++p)l[h].push(i.indexOf(o[h][p]))}const c=i.length,u=r.length,d=[];for(let h=u;h<c;++h)d.push(h);return{allDims:i,summedDims:d,idDims:l}}function Ap(n,t){let e=new Array(n);e.fill(-1);for(let r=0;r<t.length;++r)e[t[r]]=r;const s=[];for(let r=0;r<n;++r)e[r]===-1&&s.push(r);return e=e.filter(r=>r!==-1),{permutationIndices:e,expandDims:s}}function Dp(n,t,e){const s=new Array(n);for(let r=0;r<e.length;++r){const o=e[r].shape;for(let a=0;a<t[r].length;++a)s[t[r][a]]===void 0?s[t[r][a]]=o[a]:N(s[t[r][a]]===o[a],()=>`Expected dimension ${s[t[r][a]]} at axis ${a} of input shaped ${JSON.stringify(o)}, but got dimension ${o[a]}`)}}function Fp(n,t){const e=n,s=[];let r=0;n.length===0&&e.push(-1),r=n.length+1;for(let a=0;a<r;++a)s.push([]);const o=[];for(let a=0;a<e.length;++a){const i=e[a],l=F_(t,i);for(const c of l)o.indexOf(c)===-1&&(s[a].push(c),o.push(c))}return{path:e,steps:s}}function Mp(n){return n.every((t,e)=>t===e)}function F_(n,t){const e=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(t)!==-1||t===-1)&&e.push(s);return e}function $c(n,t,e=0){let s=[];if(typeof t=="number")N(n.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(n.shape[e]/t);else{const r=t.reduce((a,i)=>(i===-1&&(a+=1),a),0);N(r<=1,()=>"There should be only one negative value in split array.");const o=t.indexOf(-1);if(o!==-1){const a=t.reduce((i,l)=>l>0?i+l:i);t[o]=n.shape[e]-a}N(n.shape[e]===t.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Op(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function Lp(n,t){return`indices(${n}, 0) is invalid: ${t} < 0`}function Pp(n,t,e){return`indices(${n}, 0) is invalid: ${t} >= ${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bp(n,t){return`only one output dimension may be -1, not both ${n} and ${t}`}function zp(n,t){return`size ${n} must be non-negative, not ${t}`}function Wp(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Vp(n,t){const e=L(n),s=L(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${t}`}function Up(n,t){const e=L(n),s=L(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bu(){return"segment ids must be >= 0"}function Gp(){return"segment ids are not increasing"}function Hp(n,t){return`Segment id ${n} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function jp(n,t,e){return`Bad: indices[${n}] == ${t} out of range [0, ${e})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qb(n,t){let e=!1,s;for(n<=kp?(s=n,e=!0):s=jd(n,Math.floor(Math.sqrt(n)));!e;)s>t||s===n?e=!0:s=jd(n,s+1);return s}function Kb(n,t,e){const s=[],r=n.length;for(let o=0;o<r;o++)o!==t?s.push(n[o]):s.push(e);return s}function vc(n,t,e,s){const r=t.shape.length,o=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>o)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${o}).`);if(e<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${e}).`);for(let d=0;d<s;++d)if(n.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${n.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);const a=n.shape[e],i=[];let l=1,c=1,u=1;for(let d=0;d<s;++d)i.push(n.shape[d]),l*=n.shape[d];for(let d=s;d<e;d++)i.push(n.shape[d]),c*=n.shape[d];for(let d=s;d<r;d++)i.push(t.shape[d]);for(let d=e+1;d<o;d++)i.push(n.shape[d]),u*=n.shape[d];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:a,outputShape:i}}var M_=Object.freeze({__proto__:null,collectGatherOpShapeInfo:vc,computeOutShape:Kb,segOpComputeOptimalWindowSize:qb});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vs(n){try{return n.map(t=>tr(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function qp(n){return n.map(t=>Qs(t))}var O_=Object.freeze({__proto__:null,ERF_A1:$p,ERF_A2:vp,ERF_A3:Sp,ERF_A4:Np,ERF_A5:Tp,ERF_P:Cp,PARALLELIZE_THRESHOLD:kp,get RowPartitionType(){return os},SELU_SCALE:Cc,SELU_SCALEALPHA:kc,applyActivation:hp,assertAndGetBroadcastShape:vt,assertAxesAreInnerMostDims:ie,assertParamsConsistent:bc,assignToTypedArray:Vb,axesAreInnerMostDims:Gh,calculateShapes:ws,checkEinsumDimSizes:Dp,checkPadOnDimRoundingMode:cn,combineLocations:Mg,combineRaggedTensorToTensorShapes:Mb,complexWithEvenIndex:zb,complexWithOddIndex:Wb,computeConv2DInfo:we,computeConv3DInfo:ns,computeDefaultPad:Oh,computeDilation2DInfo:sr,computeOptimalWindowSize:xc,computeOutAndReduceShapes:he,computeOutShape:Fn,computePool2DInfo:Ye,computePool3DInfo:Tn,convertConv2DDataFormat:ss,decodeEinsumEquation:Rp,eitherStridesOrDilationsAreOne:We,expandShapeToKeepDim:ee,exponent:Gb,exponents:Ub,fromStringArrayToUint8:qp,fromUint8ToStringArray:Vs,getAxesPermutation:ue,getBroadcastDims:Qa,getComplexWithIndex:_p,getEinsumComputePath:Fp,getEinsumPermutation:Ap,getFusedBiasGradient:dp,getFusedDyActivation:cp,getImageCenter:yc,getInnerMostAxes:se,getPermuted:Zr,getRaggedRank:Lb,getReductionAxes:_e,getReshaped:Yr,getReshapedPermuted:Jr,getRowPartitionTypesHelper:Ob,getSliceBeginCoords:wc,getSliceSize:Ic,getSparseFillEmptyRowsIndicesDenseShapeMismatch:Op,getSparseFillEmptyRowsNegativeIndexErrorMessage:Lp,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:Pp,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:Wp,getSparseReshapeInputOutputMismatchErrorMessage:Up,getSparseReshapeInputOutputMultipleErrorMessage:Vp,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:Bp,getSparseReshapeNegativeOutputDimErrorMessage:zp,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:jp,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Bu,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:Gp,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:Hp,getUndoAxesPermutation:xs,isIdentityPermutation:Mp,log:DC,mergeRealAndImagArrays:Ws,prepareAndValidate:hc,prepareSplitSize:$c,segment_util:M_,shouldFuse:pp,slice_util:E_,splitRealAndImagArrays:Bb,stridesOrDilationsArePositive:Wr,tupleValuesAreOne:zr,upcastType:xn,validateDefaultValueShape:Pb,validateInput:WN,validateUpdateShape:ab,warn:Nn});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */y_();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xb={kernelName:Ti,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>A(n,Lu(it(e,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L_={kernelName:No,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=le(it(e,"float32")),r=Ze(ft(St(1),s));return pe(wt(n,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P_={kernelName:To,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Ze(ft(le(it(e,"float32")),1));return wt(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B_={kernelName:Nr,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=vt(e.shape,s.shape);return{a:()=>{let i=n;const l=_e(e.shape,r);return l.length>0&&(i=gt(i,l)),W(i,e.shape)},b:()=>{let i=n;const l=_e(s.shape,r);return l.length>0&&(i=gt(i,l)),W(i,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z_={kernelName:_i,saveAllInputs:!0,gradFunc:(n,t)=>{const e={};return t.forEach((s,r)=>{e[r]=()=>n.clone()}),e}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W_={kernelName:Ai,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Wt(e)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V_={kernelName:Di,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Wt(e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U_={kernelName:_o,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>wt(n,Ze(ft(St(1),le(it(e,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G_={kernelName:Eo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=Ze(et(St(1),le(it(e,"float32"))));return wt(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H_={kernelName:Do,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=vt(e.shape,s.shape);return{a:()=>{const i=et(le(e),le(s));let l=A(n,wt(s,i));const c=_e(e.shape,r);return c.length>0&&(l=gt(l,c)),W(l,e.shape)},b:()=>{const i=et(le(e),le(s));let l=pe(A(n,wt(e,i)));const c=_e(s.shape,r);return c.length>0&&(l=gt(l,c)),W(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j_={kernelName:Ro,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>wt(n,et(le(it(e,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q_={kernelName:Ao,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>wt(n,ft(St(1),le(it(e,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K_(n,t,e,s,r,o){const a=_(n,"dy","avgPool3dGrad"),i=_(t,"input","avgPool3dGrad");let l=a,c=i,u=!1;i.rank===4&&(u=!0,l=W(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),c=W(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),N(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),N(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),cn("avgPool3dGrad",r,o);const d={dy:l,input:c},h={filterSize:e,strides:s,pad:r,dimRoundingMode:o},p=O.runKernel(Il,d,h);return u?W(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const X_=P({avgPool3dGrad_:K_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y_={kernelName:Fi,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:r,strides:o,pad:a,dimRoundingMode:i}=e;return{x:()=>X_(n,s,r,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z_(n,t,e,s,r){const o=_(n,"dy","avgPoolGrad"),a=_(t,"input","avgPoolGrad");N(a.rank===o.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${o.rank})`);let i=a,l=o,c=!1;a.rank===3&&(c=!0,i=W(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=W(o,[1,o.shape[0],o.shape[1],o.shape[2]])),N(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),N(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);const u={dy:l,input:i},d={filterSize:e,strides:s,pad:r},h=O.runKernel(wl,u,d);return c?W(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const J_=P({avgPoolGrad_:Z_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q_={kernelName:Fo,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:r,strides:o,pad:a}=e;return{x:()=>J_(n,s,r,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tE={kernelName:Mo,inputsToSave:["a","b"],gradFunc:(n,t,e)=>{const[s,r]=t,{transposeA:o,transposeB:a}=e;return!o&&!a?{a:()=>Xt(n,r,!1,!0),b:()=>Xt(s,n,!0,!1)}:!o&&a?{a:()=>Xt(n,r,!1,!1),b:()=>Xt(n,s,!0,!1)}:o&&!a?{a:()=>Xt(r,n,!1,!0),b:()=>Xt(s,n,!1,!1)}:{a:()=>Xt(r,n,!0,!0),b:()=>Xt(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eE={kernelName:Mi,gradFunc:(n,t,e)=>{const{blockShape:s,crops:r}=e;return{x:()=>Qh(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nE={kernelName:TC,gradFunc:(n,t,e)=>{const s=e,r=s.inputShape,o=s.shape,a=Array.from(o);for(let l=r.length-1;l>=0;l--)if(r[l]===o[l])a[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${o}].`);const i=[];for(let l=0;l<a.length;l++)a[l]>1&&i.push(l);return{x:()=>gt(n,i,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sE={kernelName:Oo,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rE={kernelName:Lo,gradFunc:n=>({x:()=>Wt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oE={kernelName:Tr,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{clipValueMin:r,clipValueMax:o}=e;return{x:()=>sn(Os(Gr(s,r),ti(s,o)),n,Wt(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aE={kernelName:Cl,inputsToSave:["x"],gradFunc:Xb.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iE={kernelName:Li,saveAllInputs:!0,gradFunc:(n,t,e)=>{const s=t.map(l=>l.shape),{axis:r}=e,o=Et(r,t[0].shape)[0],a=s.map(l=>l[o]);return Dn(n,a,o).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uE={kernelName:Po,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,{dilations:o,strides:a,pad:i,dataFormat:l}=e;return N(zr(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>zh(s.shape,n,r,a,i,l),filter:()=>lp(s,n,r.shape,a,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lE={kernelName:Bo,inputsToSave:["dy","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,{strides:o,pad:a,dataFormat:i,dimRoundingMode:l}=e;return{dy:()=>Vr(n,r,o,a,i,1,l),filter:()=>lp(n,s,r.shape,o,a,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cE(n,t,e,s,r){let o=n;n.rank===4&&(o=W(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let a=t;a.rank===4&&(a=W(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),N(o.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),N(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),N(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),N(o.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${e[3]}.`),N(a.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${e[4]}).`);const i={x:o,dy:a},l={strides:s,pad:r,filterShape:e};return O.runKernel(Pi,i,l)}const dE=P({conv3DBackpropFilter_:cE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hE={kernelName:zo,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:r,pad:o}=e;N(zr(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[a,i]=t;return{x:()=>Eg(a.shape,n,i,r,o),filter:()=>dE(a,n,i.shape,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pE={kernelName:Wo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>A(pe(eb(it(e,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fE={kernelName:Vo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>A(nb(it(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mE={kernelName:Uo,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r,exclusive:o,reverse:a}=e;return{x:()=>{const i=ue([r],s.rank);let l=Ag(n,r,o,!a);return i!=null&&(l=Vt(l,i)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gE={kernelName:Go,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:r,pad:o,dimRoundingMode:a}=e,i=s??[1,1];N(zr(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[l,c]=t;return N(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),N(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),N(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),N(We(r,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${i}'.`),cn("depthwiseConv2d",o,a),{x:()=>aT(l.shape,n,c,r,o,i,a),filter:()=>rT(l,n,c.shape,r,o,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bE={kernelName:Ho,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,r]=t,o={x:s,filter:r,dy:n},a={x:s,filter:r,dy:n};return{x:()=>O.runKernel(Ui,o,e),filter:()=>O.runKernel(Gi,a,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xE={kernelName:qo,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t,s={dy:n,y:e};return{x:()=>O.runKernel(Hi,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yE={kernelName:Ko,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=A(En(pe(le(e))),2/Math.sqrt(Math.PI));return{x:()=>A(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wE={kernelName:Xo,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>A(n,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IE={kernelName:qi,inputsToSave:["input"],gradFunc:(n,t)=>{const[e]=t;return{input:()=>W(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kE={kernelName:Yo,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>A(n,En(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CE={kernelName:Zo,gradFunc:n=>({x:()=>Wt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $E={kernelName:Jo,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=vt(e.shape,s.shape);return{a:()=>{const i=wt(n,it(s,"float32")),l=_e(e.shape,r);return l.length>0?W(gt(i,l),e.shape):i},b:()=>{let i=A(n,it(e,"float32"));const l=_e(s.shape,r);l.length>0&&(i=W(gt(i,l),s.shape));const c=le(s);return pe(wt(i,it(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vE={kernelName:Qo,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,t,e)=>{const{varianceEpsilon:s}=e,[r,o,a,i]=t,l=i??St(1),c=_e(o.shape,r.shape),u=[];if(o.rank===1){for(let w=0;w<r.shape.length-1;++w)u.push(r.shape[w]);u.push(1)}const d=ft(r,o),h=A(n,l),p=Jg(et(a,St(s))),f=A(A(A(p,p),p),St(-.5));return{x:()=>o.rank===1?W(A(A(n,Rn(W(p,[1,1,1,o.shape[0]]),u)),l),r.shape):W(A(A(n,p),l),r.shape),mean:()=>{let w=A(A(p,St(-1)),h);return o.rank===1&&(w=gt(w,c)),W(w,o.shape)},variance:()=>{let w=A(A(f,d),h);return o.rank===1&&(w=gt(w,c)),W(w,o.shape)},scale:()=>{const w=A(d,p);let I=A(n,w);return o.rank===1&&(I=gt(I,c)),W(I,o.shape)},offset:()=>{let w=n;return o.rank===1&&(w=gt(w,c)),W(w,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SE={kernelName:Xi,inputsToSave:["x","indices"],gradFunc:(n,t,e)=>{const[s,r]=t,{axis:o,batchDims:a}=e,i=Et(o,s.shape)[0],l=(c,u,d)=>()=>{const h=c.shape,p=u.size,f=h.slice(0,i),m=f.length,g=h.slice(o,h.length).slice(1),b=g.length,x=Yb(0,m),y=Yb(m+1,m+1+b),w=Zb([f,[p],g]),I=W(d,w),C=W(u,[p]),S=Zb([[m],x,y]),T=Vt(I,S);let v=ub(T,C,c.shape[i]);const $=xs(S);return v=Vt(v,$),v};if(a===1){const c=s.shape[0],u=s.split(c,0);return{x:()=>ys(u.map((p,f)=>l(p,r.slice(f,1),n.slice(f,1))())).reshape(s.shape),indices:()=>r}}else return{x:l(s,r,n),indices:()=>r}}};function Yb(n,t){const e=[];for(let s=n;s<t;++s)e.push(s);return e}function Zb(n){const t=[];for(let e=0;e<n.length;++e)for(let s=0;s<n[e].length;++s)t.push(n[e][s]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NE={kernelName:ta,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>Wt(e),b:()=>Wt(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TE={kernelName:ea,gradFunc:n=>({x:()=>it(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _E={kernelName:na,gradFunc:n=>({x:()=>Wt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EE={kernelName:sa,gradFunc:n=>({x:()=>Wt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RE={kernelName:ra,gradFunc:n=>({x:()=>Wt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AE={kernelName:oa,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{alpha:r}=e,o=An(s,0);return{x:()=>sn(o,n,A(n,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DE={kernelName:ia,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>wt(n,et(e,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FE={kernelName:aa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>wt(n,it(e,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ME={kernelName:RC,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e;return{logits:()=>{const a=En(s);return ft(n,A(gt(n,r,!0),a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OE(n,t,e,s=5,r=1,o=1,a=.5){const i={x:n,y:t,dy:e},l={depthRadius:s,bias:r,alpha:o,beta:a};return O.runKernel(su,i,l)}const LE=P({localResponseNormalizationBackprop_:OE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PE={kernelName:ua,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{depthRadius:o,bias:a,alpha:i,beta:l}=e;return{x:()=>LE(s,r,n,o,a,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jb(n,t,e,s){return t.rank<e.rank&&(t=W(t,ee(t.shape,s))),n.rank<e.rank&&(n=W(n,ee(n.shape,s))),{x:()=>A(n,it(bs(e,t),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qb={kernelName:la,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{reductionIndices:r}=s,o=t[0],a=t[1],i=Et(r,o.shape),l=Jb(n,a,o,i);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BE={kernelName:ca,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>A(n,it(Gr(e,s),"float32")),b:()=>A(n,it(nc(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zE(n,t,e,s,r,o,a){const i=_(n,"dy","maxPool3dGrad"),l=_(t,"input","maxPool3dGrad"),c=_(e,"output","maxPool3dGrad");let u=i,d=l,h=c,p=!1;l.rank===4&&(p=!0,u=W(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=W(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),h=W(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),N(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),N(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),N(h.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),cn("maxPool3dGrad",o,a);const f={dy:u,input:d,output:h},m={filterSize:s,strides:r,pad:o,dimRoundingMode:a},g=O.runKernel(Tl,f,m);return p?W(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const WE=P({maxPool3dGrad_:zE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VE={kernelName:ru,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=e;return{x:()=>WE(n,s,r,o,a,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UE(n,t,e,s,r,o,a){const i=_(n,"dy","maxPoolGrad"),l=_(t,"input","maxPoolGrad"),c=_(e,"output","maxPoolGrad");N(l.rank===i.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`),N(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),N(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),cn("maxPoolGrad",o,a);const u={dy:i,input:l,output:c},d={filterSize:s,strides:r,pad:o,dimRoundingMode:a};return O.runKernel(Nl,u,d)}const GE=P({maxPoolGrad_:UE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HE={kernelName:da,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,r]=t,{filterSize:o,strides:a,pad:i}=e;return{x:()=>GE(n,s,r,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jE={kernelName:ha,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e,o=Et(r,s.shape),i=he(s.shape,o)[1],l=L(i);return{x:()=>{const u=s.shape.slice();o.forEach(p=>{u[p]=1});const d=W(n,u);return wt(A(d,Ls(s.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qE={kernelName:pa,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{axis:r}=s,[o,a]=t,i=Et(r,o.shape),l=Jb(n,a,o,i);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KE={kernelName:fa,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>A(n,it(ti(e,s),"float32")),b:()=>A(n,it(An(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XE={kernelName:ma,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:r}=e,o=r.map(a=>a[0]);return{x:()=>ae(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YE={kernelName:ga,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=vt(e.shape,s.shape);return{a:()=>{const i=_e(e.shape,r);return i.length>0?W(gt(n,i),e.shape):n},b:()=>{const i=A(n,pe(tc(wt(e,s)))),l=_e(s.shape,r);return l.length>0?W(gt(i,l),s.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZE={kernelName:ba,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=vt(e.shape,s.shape);return{a:()=>{const i=A(n,it(s,"float32")),l=_e(e.shape,r);return l.length>0?W(gt(i,l),e.shape):i},b:()=>{const i=A(n,it(e,"float32")),l=_e(s.shape,r);return l.length>0?W(gt(i,l),s.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JE={kernelName:ou,gradFunc:n=>({x:()=>pe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QE={kernelName:xa,inputsToSave:["indices"],gradFunc:(n,t)=>{const e=t[0];return{indices:()=>Pe(e.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tR={kernelName:cu,gradFunc:n=>({x:()=>Wt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eR={kernelName:du,saveAllInputs:!0,gradFunc:(n,t,e)=>{const{axis:s}=e;return Kr(n,s).map(o=>()=>o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tx={kernelName:ya,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:r}=e,o=r.map(a=>a[0]);return{x:()=>ae(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nR={kernelName:wa,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,t)=>{const[e,s,r]=t,o=e,a=s,i=vt(o.shape,a.shape);return{a:()=>{const u=it(a,"float32");let d=A(n,A(u,Ur(o,ft(u,St(1)))));const h=_e(o.shape,i);return h.length>0&&(d=gt(d,h)),W(d,o.shape)},b:()=>{const u=An(o,0),d=sn(u,Wn(o),Wt(o));let h=A(n,A(r,d));const p=_e(a.shape,i);return p.length>0&&(h=gt(h,p)),W(h,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sR={kernelName:Ia,inputsToSave:["x","alpha"],gradFunc:(n,t)=>{const[e,s]=t,r=An(e,0);return{x:()=>sn(r,n,A(n,s)),alpha:()=>{let o=sn(r,Wt(n),A(n,e));const a=_e(s.shape,n.shape);return a.length>0&&(o=gt(o,a)),W(o,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rR(n,t,e){const s=n.shape.slice();s[e]=1;const r=W(t,s),o=Vh(n,e,!0,!1),a=Vh(n,e,!0,!0),i=A(o,a);return A(r,i)}function oR(n,t,e){const s=n.shape.length,r=s-e.length,o=ue(e,s);let a=n;o!=null&&(a=Vt(n,o));const i=a.shape.slice(),c=i.splice(s-e.length,e.length).reduce((h,p)=>h*p,1);i.push(c);const u=a.reshape(i);let d=rR(u,t,r);if(d=d.reshape(a.shape),o!=null){const h=xs(o);d=Vt(d,h)}return d}const aR={kernelName:ka,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:r}=e;let o=[];return r==null?o=s.shape.map((a,i)=>i):typeof r=="number"?o=[r]:o=r,{x:()=>oR(s,n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iR={kernelName:jo,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=vt(e.shape,s.shape);return{a:()=>{const i=wt(n,it(s,"float32")),l=_e(e.shape,r);return l.length>0?W(gt(i,l),e.shape):i},b:()=>{let i=A(n,it(e,"float32"));const l=_e(s.shape,r);l.length>0&&(i=W(gt(i,l),s.shape));const c=le(s);return pe(wt(i,it(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uR={kernelName:Ca,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>wt(n,pe(le(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lR={kernelName:Na,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=A(ti(e,6),Lu(e));return{x:()=>A(n,it(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cR={kernelName:$a,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>A(n,it(Lu(e),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dR={kernelName:hu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>W(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hR={kernelName:Sa,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,r={dy:n,images:s};return{images:()=>O.runKernel(fu,r,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pR={kernelName:va,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,r={dy:n,images:s};return{images:()=>O.runKernel(pu,r,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fR={kernelName:Ta,gradFunc:(n,t,e)=>{const{dims:s}=e,r=Et(s,n.shape);return{x:()=>qr(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mR={kernelName:_a,gradFunc:n=>({x:()=>Wt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gR={kernelName:Ea,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>pe(wt(n,A(Ur(e,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bR={kernelName:mu,inputsToSave:["condition"],gradFunc:(n,t)=>{const[e]=t;return{condition:()=>it(Wt(e),"float32"),t:()=>A(n,it(e,n.dtype)),e:()=>A(n,it(Xh(e),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xR={kernelName:Ra,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=An(e,St(0)),r=St(kc),o=St(Cc),a=A(n,o),i=A(A(n,r),En(it(e,"float32")));return sn(s,a,i)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yR={kernelName:Ma,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>A(n,A(e,ft(St(1),e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wR={kernelName:Fa,gradFunc:n=>({x:()=>Wt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IR={kernelName:Aa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>A(Wh(it(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kR={kernelName:Da,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>A(Rg(it(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CR={kernelName:gu,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{begin:r,size:o}=e,a=s.shape,[i,l]=Pu(s,r,o),c=[];for(let u=0;u<n.rank;u++)c.push([i[u],a[u]-i[u]-l[u]]);return{x:()=>Jh(n,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $R={kernelName:Ba,outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{dim:r}=e,o=!0,a=A(n,s);return{logits:()=>ft(a,A(gt(a,[r],o),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vR={kernelName:Oa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>A(n,Ja(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ex={kernelName:bu,gradFunc:(n,t,e)=>{const{blockShape:s,paddings:r}=e;return{x:()=>Bh(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nx={kernelName:xu,gradFunc:(n,t,e)=>{const{axis:s}=e;return{x:()=>nn(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SR={kernelName:La,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>wt(n,A(Ze(it(e,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NR={kernelName:Ol,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>A(n,A(it(e,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TR={kernelName:za,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=St(2);return{a:()=>A(n,A(r,ft(e,s))),b:()=>A(n,A(r,ft(s,e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _R={kernelName:Er,gradFunc:n=>({x:()=>Wt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ER={kernelName:Wa,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,r=vt(e.shape,s.shape);return{a:()=>{let i=n;const l=_e(e.shape,r);return l.length>0&&(i=gt(i,l)),W(i,e.shape)},b:()=>{let i=n;const l=_e(s.shape,r);return l.length>0&&(i=gt(i,l)),W(pe(i),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RR={kernelName:Pa,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,r=s.shape.slice(),{axis:o}=e;Et(o,s.shape).forEach(c=>{r[c]=1});const i=W(n,r),l=A(i,Ls(s.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AR={kernelName:Va,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>wt(n,le(Wh(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DR={kernelName:Ua,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>A(ft(St(1),le(e)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FR={kernelName:_r,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{reps:r}=e;return{x:()=>{let a=Wt(s);if(s.rank===1)for(let i=0;i<r[0];++i)a=et(a,ae(n,[i*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)a=et(a,ae(n,[i*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)a=et(a,ae(n,[i*s.shape[0],l*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let i=0;i<r[0];++i)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)for(let u=0;u<r[3];++u)a=et(a,ae(n,[i*s.shape[0],l*s.shape[1],c*s.shape[2],u*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MR={kernelName:Ys,gradFunc:(n,t,e)=>{const s=e,{perm:r}=s,o=xs(r);return{x:()=>Vt(n,o)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OR={kernelName:ku,gradFunc:(n,t,e)=>{const s=e,{axis:r}=s;return{value:()=>ys(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LR={kernelName:Pl,inputsToSave:["segmentIds"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>PR(n,e)}}};function PR(n,t){const e=rr(t,Wt(t)),s=ec(n,e);let r=Gr(t,St(0,"int32"));const o=s.rank-r.rank;for(let i=0;i<o;++i)r=dn(r,i+1);r=Os(r,Ls(s.shape,"bool"));const a=Wt(s);return sn(r,s,a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BR={kernelName:Cu,gradFunc:n=>({x:()=>Wt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zR=[Xb,L_,P_,B_,z_,W_,V_,U_,G_,H_,j_,q_,Y_,Q_,tE,eE,nE,sE,rE,oE,aE,iE,lE,uE,hE,pE,fE,mE,gE,bE,iR,xE,yE,wE,IE,kE,$E,CE,vE,SE,NE,TE,_E,EE,RE,AE,DE,FE,ME,PE,Qb,Qb,BE,VE,HE,jE,qE,KE,XE,YE,ZE,JE,QE,tR,eR,tx,tx,nR,sR,aR,uR,lR,cR,dR,hR,pR,fR,mR,gR,bR,xR,yR,wR,IR,kR,CR,$R,vR,ex,ex,nx,nx,SR,TR,NR,_R,ER,RR,AR,DR,FR,MR,OR,LR,BR];for(const n of zR)FC(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.abs=function(){return this.throwIfDisposed(),Le(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.acos=function(){return this.throwIfDisposed(),Y$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.acosh=function(){return this.throwIfDisposed(),J$(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.add=function(n){return this.throwIfDisposed(),et(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.all=function(n,t){return this.throwIfDisposed(),Ng(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.any=function(n,t){return this.throwIfDisposed(),Mh(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.argMax=function(n){return this.throwIfDisposed(),Tu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.argMin=function(n){return this.throwIfDisposed(),sv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.asScalar=function(){return this.throwIfDisposed(),N(this.size===1,()=>"The array must have only 1 element."),W(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.asType=function(n){return this.throwIfDisposed(),it(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as1D=function(){return this.throwIfDisposed(),W(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as2D=function(n,t){return this.throwIfDisposed(),W(this,[n,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as3D=function(n,t,e){return this.throwIfDisposed(),W(this,[n,t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as4D=function(n,t,e,s){return this.throwIfDisposed(),W(this,[n,t,e,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.as5D=function(n,t,e,s,r){return this.throwIfDisposed(),W(this,[n,t,e,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.asin=function(){return this.throwIfDisposed(),ov(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.asinh=function(){return this.throwIfDisposed(),iv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.atan=function(){return this.throwIfDisposed(),lv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.atan2=function(n){return this.throwIfDisposed(),dv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.atanh=function(){return this.throwIfDisposed(),pv(this)},K().prototype.avgPool=function(n,t,e,s){return this.throwIfDisposed(),Ph(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.batchToSpaceND=function(n,t){return this.throwIfDisposed(),Bh(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.batchNorm=function(n,t,e,s,r){return this.throwIfDisposed(),Xl(this,n,t,e,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Ru(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cast=function(n){return this.throwIfDisposed(),it(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.ceil=function(){return this.throwIfDisposed(),zv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.clipByValue=function(n,t){return this.throwIfDisposed(),_n(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.concat=function(n,t){return this.throwIfDisposed(),n instanceof Te&&(n=[n]),nn([this,...n],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.conv1d=function(n,t,e,s,r,o){return this.throwIfDisposed(),Tg(this,n,t,e,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.conv2dTranspose=function(n,t,e,s,r){return this.throwIfDisposed(),_g(this,n,t,e,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.conv2d=function(n,t,e,s,r,o){return this.throwIfDisposed(),Vr(this,n,t,e,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cos=function(){return this.throwIfDisposed(),Wh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cosh=function(){return this.throwIfDisposed(),Rg(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cumprod=function(n,t,e){return this.throwIfDisposed(),Vh(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.cumsum=function(n,t,e){return this.throwIfDisposed(),Ag(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.depthToSpace=function(n,t){return this.throwIfDisposed(),dS(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.depthwiseConv2d=function(n,t,e,s,r,o){return this.throwIfDisposed(),Uh(this,n,t,e,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.dilation2d=function(n,t,e,s,r){return this.throwIfDisposed(),fS(this,n,t,e,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.divNoNan=function(n){return this.throwIfDisposed(),yS(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.div=function(n){return this.throwIfDisposed(),wt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.dot=function(n){return this.throwIfDisposed(),IS(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.elu=function(){return this.throwIfDisposed(),Zl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.equal=function(n){return this.throwIfDisposed(),bs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.erf=function(){return this.throwIfDisposed(),Fg(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.euclideanNorm=function(n,t){return this.throwIfDisposed(),DS(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.exp=function(){return this.throwIfDisposed(),En(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.expandDims=function(n){return this.throwIfDisposed(),dn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.expm1=function(){return this.throwIfDisposed(),LS(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.fft=function(){return this.throwIfDisposed(),rb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.flatten=function(){return this.throwIfDisposed(),W(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.floor=function(){return this.throwIfDisposed(),tc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.floorDiv=function(n){return this.throwIfDisposed(),Sg(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.gather=function(n,t,e){return this.throwIfDisposed(),ec(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.greaterEqual=function(n){return this.throwIfDisposed(),Gr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.greater=function(n){return this.throwIfDisposed(),An(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.ifft=function(){return this.throwIfDisposed(),ip(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.irfft=function(){return this.throwIfDisposed(),_N(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.isFinite=function(){return this.throwIfDisposed(),jS(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.isInf=function(){return this.throwIfDisposed(),KS(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.isNaN=function(){return this.throwIfDisposed(),YS(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.leakyRelu=function(n){return this.throwIfDisposed(),jh(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.lessEqual=function(n){return this.throwIfDisposed(),ti(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.less=function(n){return this.throwIfDisposed(),nc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.localResponseNormalization=function(n,t,e,s){return this.throwIfDisposed(),n2(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logSigmoid=function(){return this.throwIfDisposed(),l2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logSoftmax=function(n){return this.throwIfDisposed(),Pg(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logSumExp=function(n,t){return this.throwIfDisposed(),Kh(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.log=function(){return this.throwIfDisposed(),Wn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.log1p=function(){return this.throwIfDisposed(),qh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logicalAnd=function(n){return this.throwIfDisposed(),Os(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logicalNot=function(){return this.throwIfDisposed(),Xh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logicalOr=function(n){return this.throwIfDisposed(),Bg(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.logicalXor=function(n){return this.throwIfDisposed(),b2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.matMul=function(n,t,e){return this.throwIfDisposed(),Xt(this,n,t,e)},K().prototype.maxPool=function(n,t,e,s){return this.throwIfDisposed(),Yh(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.max=function(n,t){return this.throwIfDisposed(),rs(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.maximum=function(n){return this.throwIfDisposed(),rr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.mean=function(n,t){return this.throwIfDisposed(),Ce(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.min=function(n,t){return this.throwIfDisposed(),Jl(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.minimum=function(n){return this.throwIfDisposed(),ei(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.mirrorPad=function(n,t){return this.throwIfDisposed(),v2(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.mod=function(n){return this.throwIfDisposed(),N2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.mul=function(n){return this.throwIfDisposed(),A(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.neg=function(){return this.throwIfDisposed(),pe(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.norm=function(n,t,e){return this.throwIfDisposed(),Ql(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.notEqual=function(n){return this.throwIfDisposed(),Fu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.oneHot=function(n,t=1,e=0){return this.throwIfDisposed(),zg(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.onesLike=function(){return this.throwIfDisposed(),Vn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.pad=function(n,t){return this.throwIfDisposed(),Jh(this,n,t)},K().prototype.pool=function(n,t,e,s,r,o){return this.throwIfDisposed(),L2(this,n,t,e,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.pow=function(n){return this.throwIfDisposed(),Ur(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.prelu=function(n){return this.throwIfDisposed(),tp(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.prod=function(n,t){return this.throwIfDisposed(),z2(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.reciprocal=function(){return this.throwIfDisposed(),lN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.relu=function(){return this.throwIfDisposed(),Ps(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.relu6=function(){return this.throwIfDisposed(),Yg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.reshapeAs=function(n){return this.throwIfDisposed(),W(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.reshape=function(n){return this.throwIfDisposed(),W(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.resizeBilinear=function(n,t,e){return this.throwIfDisposed(),hb(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.resizeNearestNeighbor=function(n,t,e){return this.throwIfDisposed(),pb(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.reverse=function(n){return this.throwIfDisposed(),qr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.rfft=function(){return this.throwIfDisposed(),AN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.round=function(){return this.throwIfDisposed(),Zg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.rsqrt=function(){return this.throwIfDisposed(),Jg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.selu=function(){return this.throwIfDisposed(),Qg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.separableConv2d=function(n,t,e,s,r,o){return this.throwIfDisposed(),tb(this,n,t,e,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sigmoid=function(){return this.throwIfDisposed(),Ja(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sign=function(){return this.throwIfDisposed(),xN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sin=function(){return this.throwIfDisposed(),eb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sinh=function(){return this.throwIfDisposed(),nb(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.slice=function(n,t){return this.throwIfDisposed(),ae(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.softmax=function(n){return this.throwIfDisposed(),ap(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.softplus=function(){return this.throwIfDisposed(),Du(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.spaceToBatchND=function(n,t){return this.throwIfDisposed(),Qh(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.split=function(n,t){return this.throwIfDisposed(),Dn(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sqrt=function(){return this.throwIfDisposed(),Ze(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.square=function(){return this.throwIfDisposed(),le(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.squaredDifference=function(n){return this.throwIfDisposed(),ob(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.squeeze=function(n){return this.throwIfDisposed(),Ou(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.stack=function(n,t){this.throwIfDisposed();const e=n instanceof Te?[this,n]:[this,...n];return ys(e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.step=function(n){return this.throwIfDisposed(),Lu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.stridedSlice=function(n,t,e,s,r,o,a,i){return this.throwIfDisposed(),PN(this,n,t,e,s,r,o,a,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sub=function(n){return this.throwIfDisposed(),ft(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.sum=function(n,t){return this.throwIfDisposed(),gt(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.tan=function(){return this.throwIfDisposed(),zN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.tanh=function(){return this.throwIfDisposed(),Kl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.tile=function(n){return this.throwIfDisposed(),Rn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.toBool=function(){return this.throwIfDisposed(),it(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.toFloat=function(){return this.throwIfDisposed(),it(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.toInt=function(){return this.throwIfDisposed(),it(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.topk=function(n,t){return this.throwIfDisposed(),UN(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.transpose=function(n){return this.throwIfDisposed(),Vt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.unique=function(n){return this.throwIfDisposed(),jN(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.unsortedSegmentSum=function(n,t){return this.throwIfDisposed(),ub(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.unstack=function(n){return this.throwIfDisposed(),Kr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.where=function(n,t){return this.throwIfDisposed(),sn(n,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */K().prototype.zerosLike=function(){return this.throwIfDisposed(),Wt(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Is extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Is.prototype)}}class Gn extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Gn.prototype)}}class D extends Error{constructor(t){super(t),Object.setPrototypeOf(this,D.prototype)}}class Ft extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ft.prototype)}}class Kp extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Kp.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class sx{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=t}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Qr(n,t){if(Array.isArray(n)){let e=[];for(let s=0;s<t;s++)e=e.concat(n);return e}else{const e=new Array(t);return e.fill(n),e}}function ks(n,t){if(!n)throw new Kp(t)}function rx(n,t){let e=0;for(const s of n)s===t&&e++;return e}function pn(n){return n.length===1?n[0]:n}function Zt(n){return Array.isArray(n)?n:[n]}function Us(n){const e=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function to(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let Hn={};function Xp(n){if(n==null)return null;const t={};return t.className=n.getClassName(),t.config=n.getConfig(),t}function Yp(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(t=>Yp(t));else{const t=Object.keys(n);for(const e of t){const s=n[e];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[e]=s.value:Yp(s))}}}function zu(n,t={},e={},s="object",r=!1){if(typeof n=="string"){const o=n;let a;if(o in e)a=e[o];else if(o in Hn)a=Hn[o];else if(a=t[o],a==null)throw new D(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{const o=n;if(o.className==null||o.config==null)throw new D(`${s}: Improper config format: ${JSON.stringify(o)}.
'className' and 'config' must set.`);const a=o.className;let i,l;if(a in e?[i,l]=e[a]:a in Hn?[i,l]=Hn.className:a in t&&([i,l]=t[a]),i==null)throw new D(`Unknown ${s}: ${a}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const c={};for(const p of Object.keys(Hn))c[p]=Hn[p];for(const p of Object.keys(e))c[p]=e[p];const u=o.config;u.customObjects=c;const d=Object.assign({},Hn);for(const p of Object.keys(e))Hn[p]=e[p];Yp(o.config);const h=l(i,o.config,e,r);return Hn=Object.assign({},d),h}else{const c=Object.assign({},Hn);for(const d of Object.keys(e))Hn[d]=e[d];const u=new i(o.config);return Hn=Object.assign({},c),u}}}function WR(n,t){return n<t?-1:n>t?1:0}function Sc(n,t){return-1*WR(n,t)}function ir(n){if(n==null)return n;const t=[];for(const e of n)t.indexOf(e)===-1&&t.push(e);return t}function VR(n){if(n==null)throw new D(`Invalid value in obj: ${JSON.stringify(n)}`);for(const t in n)if(n.hasOwnProperty(t))return!1;return!0}function eo(n,t,e){if(e!=null&&n.indexOf(e)<0)throw new D(`${e} is not a valid ${t}.  Valid values are ${n} or null/undefined.`)}function Zp(n,t,e=0,s=1/0){return ks(e>=0),ks(s>=e),Array.isArray(n)&&n.length>=e&&n.length<=s&&n.every(r=>typeof r===t)}function Be(n,t){Array.isArray(n)?(N(n.length>0,()=>`${t} is unexpectedly an empty array.`),n.forEach((e,s)=>Be(e,`element ${s+1} of ${t}`))):N(Number.isInteger(n)&&n>0,()=>`Expected ${t} to be a positive integer, but got ${ox(n)}.`)}function ox(n){return n===null?"null":Array.isArray(n)?"["+n.map(t=>ox(t)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function UR(n,t,e){let s=e!=null?e():Xe(),r;return(...a)=>{const i=e!=null?e():Xe();return i-s<t||(s=i,r=n(...a)),r}}function ax(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let GR=0;function ix(){return GR++}const Nc={};function Tc(n=""){return n in Nc||(Nc[n]=0),Nc[n]+=1,n+Nc[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const HR=["channelsFirst","channelsLast"],jR=["nearest","bilinear"],qR=["valid","same","causal"],KR=["max","avg"],XR=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const ri=new Map;function $e(n){eo(HR,"DataFormat",n)}function YR(n){eo(jR,"InterpolationFormat",n)}function Mn(n){eo(qR,"PaddingMode",n)}function ux(n){eo(KR,"PoolMode",n)}const Wu=[],lx="/";function no(n,t){Wu.push(n);try{const e=t();return Wu.pop(),e}catch(e){throw Wu.pop(),e}}function ZR(){return Wu.length===0?"":Wu.join(lx)+lx}function cx(n){if(!hx(n))throw new Error("Not a valid tensor name: '"+n+"'");return ZR()+n}function dx(n){if(!hx(n))throw new Error("Not a valid tensor name: '"+n+"'");ri.has(n)||ri.set(n,0);const t=ri.get(n);if(ri.set(n,ri.get(n)+1),t>0){const e=`${n}_${t}`;return ri.set(e,1),e}else return n}const JR=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function hx(n){return!!n.match(JR)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function QR(n){return n===parseInt(n.toString(),10)}function ur(n,t,e){t==null&&(t=0),e==null&&(e=n.length);let s=1;for(let r=t;r<e;++r)s*=n[r];return s}function oi(n){if(n.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s<t&&(t=s)}return t}function lr(n){if(n.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s>t&&(t=s)}return t}function as(n,t){if(t<n)throw new D(`end (${t}) < begin (${n}) is forbidden.`);const e=[];for(let s=n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Jp;function Ee(){return Jp==null&&(Jp=c$().epsilon()),Jp}function is(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Cs(n,t){return it(n,t)}function Vu(n,t=-1){const e=n.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),W(n,e)}function tA(n,t){return G(()=>{if(n.shape.length!==2)throw new D(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const e=Vu(n,1);return ef(e,[1,t,1])})}function eA(n){const t=[ur(n.shape)];return W(n,t)}function nA(n){if(n.rank<=1)throw new D(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const t=[n.shape[0],ur(n.shape,1)];return W(n,t)}function so(n,t,e){return G(()=>{switch(n.rank){case 1:return rp(n,t,e);case 2:return sb(n,[t,0],[e,n.shape[1]]);case 3:return op(n,[t,0,0],[e,n.shape[1],n.shape[2]]);case 4:return dc(n,[t,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3]]);case 5:return ae(n,[t,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return ae(n,[t,0,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new D(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Qp(n,t,e){return G(()=>{switch(n.rank){case 1:return rp(n,t,e);case 2:return sb(n,[0,t],[n.shape[0],e]);case 3:return op(n,[0,0,t],[n.shape[0],n.shape[1],e]);case 4:return dc(n,[0,0,0,t],[n.shape[0],n.shape[1],n.shape[2],e]);default:throw new D(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function _c(n,t,e,s){return G(()=>{switch(n.rank){case 1:return rp(n,t,e);case 2:switch(s){case 1:return so(n,t,e);case 2:return Qp(n,t,e);default:throw new D(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return so(n,t,e);case 2:return op(n,[0,t,0],[n.shape[0],e,n.shape[2]]);case 3:return Qp(n,t,e);default:throw new D(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return so(n,t,e);case 2:return dc(n,[0,t,0,0],[n.shape[0],e,n.shape[2],n.shape[3]]);case 3:return dc(n,[0,0,t,0],[n.shape[0],n.shape[1],e,n.shape[3]]);case 4:return Qp(n,t,e);default:throw new D(`The axis is not within the rank of the tensor ${s}`)}default:throw new D(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function tf(n,t=-1){let e;return t<0&&(e=n[0].rank,e!==0?t=e:t=0),t===n[0].rank&&(t=-1),nn(n,t)}function px(n,t){switch(n.rank){case 1:return Uv([n,t]);case 2:return Hv([n,t],0);case 3:return qv([n,t],0);case 4:return Xv([n,t],0);default:throw new D(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function ef(n,t){if(Array.isArray(t)||(t=[t]),n.rank!==t.length)throw new D(`The length of input n (${t.length}) does not match the number of dimensions in input x (${n.rank})`);return Rn(n,t)}function Ec(n,t=0,e=1,s,r){return sp(n,t,e,s,r)}function $s(n,t,e,s){if(n.rank<2||t.rank<2)throw new Ft(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${t.shape}`);if(t.rank>=3){const r=n.shape.slice(-1)[0],o=t.shape.slice(-2)[0];if(r!==o)throw new Ft(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${t.shape}`)}if(n.rank===2&&t.rank===2)return cb({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?nf(n.rank,s,is()):null,activation:e});{const r=n.shape.slice(),o=r.pop();n=W(n,[-1,o]);const a=t.shape.slice(),i=a.pop(),l=a.pop(),c=[...a,i],u=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=W(Vt(t,u),[l,-1]);const d=[...r,...c];return W(cb({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?nf(n.rank,s,is()):null,activation:e}),d)}}function fx(n,t,e){return G(()=>(Array.isArray(t)?t=yn(t,"int32"):t=it(t,"int32"),ec(n,t,e)))}function Uu(n){return A(n,n)}function nf(n,t,e){const s=t.shape;if(t.rank!==1&&t.rank!==n)throw new D(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${n}`);if(n===5){if(e==="channelsFirst")return s.length===1?W(t,[1,s[0],1,1,1]):W(t,[1,s[3],s[0],s[1],s[2]]);if(e==="channelsLast")return s.length===1?W(t,[1,1,1,1,s[0]]):W(t,[1].concat(s))}else if(n===4){if(e==="channelsFirst")return s.length===1?W(t,[1,s[0],1,1]):W(t,[1,s[2],s[0],s[1]]);if(e==="channelsLast")return s.length===1?W(t,[1,1,1,s[0]]):W(t,[1].concat(s))}else if(n===3){if(e==="channelsFirst")return s.length===1?W(t,[1,s[0],1]):W(t,[1,s[1],s[0]]);if(e==="channelsLast")return s.length===1?W(t,[1,1,s[0]]):W(t,[1].concat(s))}else if(n<3)return t;throw new D(`Unsupported input rank by biasAdd: ${t.rank}`)}function us(n,t,e){return G(()=>(e==null&&(e=is()),$e(e),et(n,nf(n.rank,t,e))))}function sA(n,t=1){if(t!==1)throw new Ft(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Zl(n)}function rA(n){return G(()=>wt(n,et(Le(n),1)))}function mx(n,t,e,s){return G(()=>QN(n,t,e,s))}function oA(n){return G(()=>{const t=et(.5,A(.2,n));return _n(t,0,1)})}function Gu(n,t,e=!1){return e?n():t()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const aA=["fanIn","fanOut","fanAvg"],iA=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function uA(n){eo(aA,"FanMode",n)}function lA(n){eo(iA,"Distribution",n)}class jn extends si{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class gx extends jn{apply(t,e){return Pe(t,e)}}gx.className="Zeros",tt(gx);class sf extends jn{apply(t,e){return Ls(t,e)}}sf.className="Ones",tt(sf);class bx extends jn{constructor(t){if(super(),typeof t!="object")throw new D(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new D(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return G(()=>A(St(this.value),Ls(t,e)))}getConfig(){return{value:this.value}}}bx.className="Constant",tt(bx);class xx extends jn{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return jr(t,this.minval,this.maxval,e,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}xx.className="RandomUniform",tt(xx);class yx extends jn{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Ft(`randomNormal does not support dType ${e}.`);return Ec(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}yx.className="RandomNormal",tt(yx);class wx extends jn{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Ft(`truncatedNormal does not support dType ${e}.`);return ib(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}wx.className="TruncatedNormal",tt(wx);class Ix extends jn{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return G(()=>{if(t.length!==2||t[0]!==t[1])throw new D("Identity matrix initializer can only be used for 2D square matrices.");return A(this.gain,Lg(t[0]))})}getConfig(){return{gain:this.gain}}}Ix.className="Identity",tt(Ix);function cA(n,t="channelsLast"){let e,s;if($e(t),n.length===2)e=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(t==="channelsFirst"){const r=ur(n,2);e=n[1]*r,s=n[0]*r}else if(t==="channelsLast"){const r=ur(n,0,n.length-2);e=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=ur(n);e=Math.sqrt(r),s=Math.sqrt(r)}return[e,s]}class wn extends jn{constructor(t){if(super(),t.scale<0)throw new D(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,uA(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,lA(this.distribution),this.seed=t.seed}apply(t,e){const s=cA(t),r=s[0],o=s[1];let a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,r):this.mode==="fanOut"?a/=Math.max(1,o):a/=Math.max(1,(r+o)/2),this.distribution==="normal"){const i=Math.sqrt(a);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Ft(`${this.getClassName()} does not support dType ${e}.`);return ib(t,0,i,e,this.seed)}else{const i=Math.sqrt(3*a);return jr(t,-i,i,e,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}wn.className="VarianceScaling",tt(wn);class rf extends wn{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return wn.className}}rf.className="GlorotUniform",tt(rf);class of extends wn{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return wn.className}}of.className="GlorotNormal",tt(of);class af extends wn{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return wn.className}}af.className="HeNormal",tt(af);class uf extends wn{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return wn.className}}uf.className="HeUniform",tt(uf);class lf extends wn{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return wn.className}}lf.className="LeCunNormal",tt(lf);class cf extends wn{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return wn.className}}cf.className="LeCunUniform",tt(cf);class kx extends jn{constructor(t){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed}apply(t,e){return G(()=>{if(t.length<2)throw new Ft("Shape must be at least 2D.");if(e!=="int32"&&e!=="float32"&&e!==void 0)throw new TypeError(`Unsupported data type ${e}.`);e=e;const s=L(t.slice(0,-1)),r=t[t.length-1],o=s*r;o>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${o}) elements: Slowness may result.`);const a=[Math.max(r,s),Math.min(r,s)],i=Ec(a,0,1,e,this.seed),l=f_.qr(i,!1);let c=l[0];const d=l[1].flatten().stridedSlice([0],[Math.min(r,s)*Math.min(r,s)],[Math.min(r,s)+1]);return c=A(c,d.sign()),s<r&&(c=c.transpose()),A(St(this.gain),c.reshape(t))})}getConfig(){return{gain:this.gain,seed:this.seed}}}kx.className="Orthogonal",tt(kx);const Cx={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function $x(n,t={}){return zu(n,Un.getMap().classNameMap,t,"initializer")}function xe(n){return Xp(n)}function fe(n){if(typeof n=="string"){const t=n in Cx?Cx[n]:n;if(t==="GlorotNormal")return new of;if(t==="GlorotUniform")return new rf;if(t==="HeNormal")return new af;if(t==="HeUniform")return new uf;if(t==="LeCunNormal")return new lf;if(t==="LeCunUniform")return new cf;{const e={};return e.className=t,e.config={},$x(e)}}else return n instanceof jn?n:$x(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function df(n){return Array.isArray(n)&&Array.isArray(n[0])}function Rc(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function $t(n){let t;if(Array.isArray(n)){if(n.length!==1)throw new D(`Expected Tensor length to be 1; got ${n.length}`);t=n[0]}else t=n;return t}function Ht(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new D(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ac(n){let t=0;for(const e of n)e.shape.length===0?t+=1:t+=e.shape.reduce((s,r)=>s*r);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const vx="Variable";class dA{constructor(t,e="float32",s=vx,r=!0,o=null){this.dtype=e??"float32",this.shape=t.shape,this.id=ix(),s=s??vx,this.originalName=cx(s),this.name=dx(this.originalName),this.trainable_=r,this.constraint=o,this.val=XN(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),hA(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function hA(n,t){if(n.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(t.shape))}function hf(n){return n.map(t=>t.read())}function pf(n){n.forEach(t=>{t[0].write(t[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Re{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class vs{constructor(t,e,s,r,o,a,i){this.dtype=t,this.shape=e,this.sourceLayer=s,this.inputs=r,this.callArgs=o,this.outputTensorIndex=i,this.id=ix(),a!=null&&(this.originalName=cx(a),this.name=dx(this.originalName)),this.rank=e.length}}let pA=0;class Dc{constructor(t,e){this.callArgs=e,this.id=pA++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const s of t.inboundLayers)s!=null&&s.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let fA=0;class Lt extends si{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=fA++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const s=this.getClassName();e=Us(s)+"_"+Tc(s)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let s;if(t.batchInputShape!=null)s=t.batchInputShape;else if(t.inputShape!=null){let o=null;t.batchSize!=null&&(o=t.batchSize),s=[o].concat(t.inputShape)}this.batchInputShape=s;let r=t.dtype;r==null&&(r=t.inputDType),r==null&&(r="float32"),this.dtype=r}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new Gn(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new D(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return pn(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return pn(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Is(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Is(`Layer ${this.name} is not connected, no input to return.`);return pn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Is(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Is(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return pn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){const e=Zt(t);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=Zt(this.inputSpec);if(e.length!==s.length)throw new D(`Layer ${this.name} expects ${s.length} inputs, but it received ${e.length} input tensors. Input received: ${t}`);for(let r=0;r<e.length;r++){const o=e[r],a=s[r];if(a==null)continue;const i=o.rank;if(a.ndim!=null&&i!==a.ndim)throw new D(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${i}`);if(a.maxNDim!=null&&i>a.maxNDim)throw new D(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${i}`);if(a.minNDim!=null&&i<a.minNDim)throw new D(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${i}.`);if(a.dtype!=null&&o.dtype!==a.dtype)throw new D(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${o.dtype}.`);if(a.axes){const l=o.shape;for(const c in a.axes){const u=Number(c),d=a.axes[c],h=u>=0?l[u]:l[l.length+u];if(d!=null&&[d,null].indexOf(h)===-1)throw new D(`Input ${r} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${d} but got shape ${l}.`)}}if(a.shape!=null)for(let l=0;l<a.shape.length;++l){const c=a.shape[l],u=o.shape[l];if(c!=null&&u!=null&&c!==u)throw new D(`Input ${r} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${o.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const s=Zt(t),r=bA(t),o=xA(t);if(r===o)throw new D("Arguments to apply() must be all SymbolicTensors or all Tensors");return no(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const a=[];for(const i of Zt(t))a.push(i.shape);this.build(pn(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&o&&(this._refCount=1)}if(this.assertInputCompatibility(t),o){let a=this.call(t,e);this.supportsMasking&&this.setMaskMetadata(t,a);const i=Zt(a),l=[];for(let c of i)s.indexOf(c)!==-1&&(c=c.clone()),l.push(c);if(a=pn(l),this.activityRegularizer!=null)throw new Ft("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{const a=mA(t),i=this.computeOutputShape(a);let l;const c=gA(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?l=i.map((u,d)=>new vs(c,u,this,Zt(t),e,this.name,d)):l=new vs(c,i,this,Zt(t),e,this.name),this.addInboundNode(t,l,null,null,a,i,e),this._refCount++,this.activityRegularizer!=null)throw new Ft("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&t[r]!=null&&t[r]!==s&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Is(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const s=JSON.stringify(e.outputShapes);t.indexOf(s)===-1&&t.push(s)}if(t.length===1){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new Is(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Gn(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Ac(this.weights)}build(t){this.built=!0}getWeights(t=!1){return hf(t?this.trainableWeights:this.weights)}setWeights(t){G(()=>{const e=this.weights;if(e.length!==t.length)throw new D(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;const s=[],r=hf(e);for(let o=0;o<r.length;++o){const a=r[o],i=e[o],l=t[o];if(!Kt(a.shape,l.shape))throw new D(`Layer weight shape ${a.shape} not compatible with provided weight shape ${l.shape}`);s.push([i,l])}pf(s)})}addWeight(t,e,s,r,o,a,i,l){if(this._addedWeightNames.indexOf(t)!==-1)throw new D(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=l!=null?l():fe("zeros"));const c=r.apply(e,s),u=new dA(c,s,t,a,i);return c.dispose(),o!=null&&this.addLoss(()=>o.apply(u.read())),a==null&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=Zt(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}setMaskMetadata(t,e,s){if(!this.supportsMasking)return;const r=this.computeMask(t,s),o=Zt(e),a=Zt(r);if(o.length!==a.length)throw new Error(`${this.name} outputs ${o.length} tensors but ${o.length} masks for those tensors`);for(let i=0;i<o.length;i++)o[i].kerasMask=a[i]}addInboundNode(t,e,s,r,o,a,i=null){const l=Zt(t);e=Zt(e),s=Zt(s),r=Zt(r),o=Rc(o),a=Rc(a);const c=[],u=[],d=[];for(const h of l)c.push(h.sourceLayer),u.push(h.nodeIndex),d.push(h.tensorIndex);new Dc({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:d,inputTensors:l,outputTensors:e,inputMasks:s,outputMasks:r,inputShapes:o,outputShapes:a},i);for(let h=0;h<e.length;h++)e[h].sourceLayer=this,e[h].nodeIndex=this.inboundNodes.length-1,e[h].tensorIndex=h}getConfig(){const t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function mA(n){n=Zt(n);const t=[];for(const e of n)t.push(e.shape);return pn(t)}function gA(n){return"float32"}function Sx(n,t,e){if((t==null||e!=null&&e>0)&&(t=n.sourceLayer,e=n.nodeIndex),t.inboundNodes.length===0)return[n];{const s=t.inboundNodes[e];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let o=0;o<s.inboundLayers.length;o++){const a=s.inputTensors[o],i=s.inboundLayers[o],l=s.nodeIndices[o],c=Sx(a,i,l);for(const u of c)r.indexOf(u)===-1&&r.push(u)}return r}}}function bA(n){let t=!0;for(const e of Zt(n))if(!(e instanceof vs)){t=!1;break}return t}function xA(n){let t=!0;for(const e of Zt(n))if(e instanceof vs){t=!1;break}return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Hu extends Lt{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:Tc("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new D("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new D("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new D("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=t.dtype||"float32";this.batchInputShape=e,this.dtype=s,this.inputSpec=[{shape:e}];const r=new vs(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Dc({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new D(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Hu.className="InputLayer",tt(Hu);function yA(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new D("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=n.batchShape;n.shape!=null&&t==null&&(t=[null].concat(n.shape));let e=n.dtype;return e==null&&(e="float32"),new Hu({batchInputShape:t,name:n.name,dtype:e,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wA(n,t){if(n.dtype==null||n.dtype===t.dtype)return t;try{return it(t,n.dtype)}catch{throw new D(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class cr{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof cr)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,s){if(this.id2Value[t.id]==null)this.id2Value[t.id]=wA(t,e),this.name2Id[t.name]=t.id,s!=null&&(this.id2Mask[t.id]=s);else throw new D(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof vs){if(this.id2Value[t.id]==null)throw new D(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{const e=this.name2Id[t];if(e==null)throw new D(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof vs){if(this.id2Value[t.id]==null)throw new D(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{const e=this.name2Id[t];if(e==null)throw new D(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&Mt(this.id2Mask)}}const Fc=new sx,Mc=new sx;function IA(n){Fc!=null&&Fc.setMaxEntries(n),Mc!=null&&Mc.setMaxEntries(n)}function ju(n,t,e,s){const r=e==null?!1:e.training,o=Array.isArray(n),a=o?n:[n],i=a.map(f=>f.name),l=[],c=t.names();for(const f of i)c.indexOf(f)!==-1?l.push(t.getValue(f)):l.push(null);const u=i.join(",")+"|"+t.names().sort().join(",");let d=Fc.get(u),h;if(d==null){const f=kA(a,t);d=f.sorted,h=f.recipientCounts,Fc.put(u,d),Mc.put(u,h)}h={},r||Object.assign(h,Mc.get(u));const p=new cr(t);for(let f=0;f<d.length;++f){const m=d[f],g=m.sourceLayer;if(g instanceof Hu)continue;const b=[],x=[],y=[];let w=!1;for(const v of m.inputs){const $=p.getValue(v),k=p.getMask(v);b.push($),x.push(k),k!=null&&(w=!0),r||(h[v.name]--,h[v.name]===0&&!t.hasKey(v)&&i.indexOf(v.name)===-1&&!$.isDisposed&&v.sourceLayer.stateful!==!0&&y.push($))}w&&(e=e||{},e.mask=x[0]);const I=Zt(g.apply(b,e));let C=null;g.supportsMasking&&(C=g.computeMask(b,x));const S=$A(m),T=Array.isArray(S)?S:[S];for(let v=0;v<T.length;++v){p.hasKey(T[v])||p.add(T[v],I[v],Array.isArray(C)?C[0]:C);const $=i.indexOf(T[v].name);$!==-1&&(l[$]=I[v])}r||Mt(y)}return p.disposeMasks(),o?l:l[0]}function kA(n,t){N(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let e=[],s={};if(n.length===1){const r=Nx(n[0],t);e=r.sorted,s=r.recipientMap}else{const r=new Set;for(const o of n){const{sorted:a,recipientMap:i}=Nx(o,t);for(const l of a)r.has(l.name)||(e.push(l),r.add(l.name));for(const l in i)s[l]==null&&(s[l]=new Set),i[l].forEach(c=>s[l].add(c))}}return{sorted:e,recipientCounts:CA(s)}}function CA(n){const t={};for(const e in n)t[e]=n[e].size;return t}function Nx(n,t){const e=new Set,s=[],r={};for(const i of t.names())e.add(i);const o=[],a=[];for(o.push(n);o.length>0;){const i=o[o.length-1];if(e.has(i.name)){o.pop();continue}const l=a[a.length-1]===o.length-1;if(i.inputs.length===0||l)o.pop(),s.push(i),e.add(i.name),l&&a.pop();else{a.push(o.length-1);for(const c of i.inputs)r[c.name]==null&&(r[c.name]=new Set),r[c.name].add(i.name),!e.has(c.name)&&o.push(c)}}return{sorted:s,recipientMap:r}}function $A(n){let t;if(n.sourceLayer.inboundNodes.length===1)t=n.sourceLayer.output;else{let e=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){e=s;break}t=n.sourceLayer.getOutputAt(e)}return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */H().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,IA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ff(n,t){return G(()=>Ze(gt(A(n,n),t,!0)))}class qu extends si{getConfig(){return{}}}class Tx extends qu{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return G(()=>{const e=ff(t,this.axis),s=_n(e,0,this.maxValue);return A(t,wt(s,et(Ee(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Tx.className="MaxNorm",tt(Tx);class _x extends qu{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return G(()=>wt(t,et(Ee(),ff(t,this.axis))))}getConfig(){return{axis:this.axis}}}_x.className="UnitNorm",tt(_x);class Ex extends qu{apply(t){return Ps(t)}}Ex.className="NonNeg",tt(Ex);class Rx extends qu{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return G(()=>{const e=ff(t,this.axis),s=et(A(this.rate,_n(e,this.minValue,this.maxValue)),A(1-this.rate,e));return A(t,wt(s,et(Ee(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Rx.className="MinMaxNorm",tt(Rx);const Ax={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ae(n){return Xp(n)}function Dx(n,t={}){return zu(n,Un.getMap().classNameMap,t,"constraint")}function De(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in Ax?Ax[n]:n,config:{}};return Dx(e)}else return n instanceof qu?n:Dx(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function ro(n){if(n==null)return;const t=[],e=[],s=[];for(const r in n){const o=n[r];if(typeof o!="number"){const a=o;t.push(a.data()),e.push(r),s.push(a)}}if(t.length>0){const r=await Promise.all(t);for(let o=0;o<r.length;++o)n[e[o]]=r[o][0];Mt(s)}}function Fx(n){if(n!=null)for(const t in n){const e=n[t];typeof e!="number"&&e.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var Mx;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(Mx||(Mx={}));const vA=125;class Ku{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class SA{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class NA extends Ku{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){e==null&&(e={});const s=e.size==null?0:e.size;this.seen+=s;for(const r in e){const o=e[r];if(typeof o=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+o*s;else{let a;r in this.totals?a=this.totals[r]:this.totals[r]=0;const i=G(()=>et(this.totals[r],A(o,s)));this.totals[r]=i,a!=null&&a.dispose()}}}async onEpochEnd(t,e){if(e!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?e[s]=this.totals[s]/this.seen:G(()=>{const r=A(wt(1,this.seen),this.totals[s]);e[s]=r,this.totals[s].dispose(),ms(e[s])}))}}class TA extends Ku{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){e==null&&(e={}),this.epoch.push(t);for(const s in e)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(e[s])}async syncData(){const t=[],e=[],s=[];for(const o in this.history){const a=this.history[o];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){const l=a[i];t.push(l.data()),e.push(o),s.push(i)}}const r=await Promise.all(t);for(let o=0;o<r.length;++o)this.history[e[o]][s[o]].dispose(),this.history[e[o]][s[o]]=r[o][0]}}class _A extends Ku{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||Fb,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=vA),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Gd(this.yieldEvery)&&(this.maybeWait=UR(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,s){const r=[];this.yield!=null&&(await ro(s),r.push(this.yield(t,e,s))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,this.epochBegin!=null&&(await ro(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const s=[];this.epochEnd!=null&&(await ro(e),s.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(t,e){this.batchBegin!=null&&(await ro(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const s=[];this.batchEnd!=null&&(await ro(e),s.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):Gd(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(s)}async onTrainBegin(t){this.trainBegin!=null&&(await ro(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await ro(t),await this.trainEnd(t))}}function Ox(n,t){return n==null&&(n={}),n instanceof Ku?[n]:Array.isArray(n)&&n[0]instanceof Ku?n:Zt(n).map(s=>new _A(s,t))}class qn{constructor(){}static registerCallbackConstructor(t,e){N(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),qn.checkForDuplicate(e),qn.constructors[t]==null&&(qn.constructors[t]=[]),qn.constructors[t].push(e)}static checkForDuplicate(t){for(const e in qn.constructors)qn.constructors[+e].forEach(r=>{if(r===t)throw new D("Duplicate callback constructor.")})}static clear(){qn.constructors={}}static createCallbacks(t){const e=[];for(const s in qn.constructors){const r=+s;t>=r&&e.push(...qn.constructors[r])}return e.map(s=>new s)}}qn.constructors={};function Lx(n,t,e,s,r,o,a,i,l){const c=new TA,u=[new NA,...qn.createCallbacks(t)];n!=null&&u.push(...n),u.push(c);const d=new SA(u);return d.setParams({epochs:e,initialEpoch:s,samples:r,steps:o,batchSize:a,verbose:t,doValidation:i,metrics:l}),{callbackList:d,history:c}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ss(n,t={},e=!1){return zu(n,Un.getMap().classNameMap,t,"layer",e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Oc(n,t){return G(()=>{n.dtype!=="float32"&&(n=it(n,"float32"));const e=gt(Uu(n),t,!0),s=Yl(e.shape,Ee()),r=Ze(rr(e,s));return wt(n,r)})}function Lc(n,t){return G(()=>Ce(Uu(ft(t,n)),-1))}function mf(n,t){return G(()=>Ce(Le(ft(t,n)),-1))}function gf(n,t){return G(()=>{const e=ft(n,t),s=_n(Le(n),Ee(),Number.MAX_VALUE),r=Le(wt(e,s));return A(100,Ce(r,-1))})}function EA(n,t){return G(()=>{const e=_n(t,Ee(),Number.MAX_VALUE),s=Wn(et(1,e)),r=_n(n,Ee(),Number.MAX_VALUE),o=Wn(et(1,r));return Ce(Uu(ft(s,o)),-1)})}function RA(n,t){return G(()=>{const e=rr(0,ft(1,A(n,t)));return Ce(Uu(e),-1)})}function AA(n,t){return G(()=>{const e=rr(0,ft(1,A(n,t)));return Ce(e,-1)})}function DA(n,t){return G(()=>{const e=gt(A(n,t),-1),s=rs(A(ft(1,n),t),-1);return rr(0,et(1,ft(s,e)))})}function FA(n,t){return G(()=>{const e=Math.log(2),s=ft(t,n),r=ft(et(s,Du(A(-2,s))),e);return Ce(r,-1)})}function Xu(n,t,e=!1){return G(()=>{if(e)t=ap(t);else{const s=gt(t,t.shape.length-1,!0);t=wt(t,s)}return t=_n(t,Ee(),1-Ee()),pe(gt(A(it(n,"float32"),Wn(t)),t.shape.length-1))})}function Pc(n,t,e=!1){return G(()=>{const s=it(tc(eA(n)),"int32");t=_n(t,Ee(),1-Ee());const r=t.shape,o=W(zg(s,r[r.length-1]),r);return Xu(o,t,e)})}function MA(n,t){if(!Kt(n.shape,t.shape))throw new D(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(t.shape)}`);return G(()=>{const e=Ps(t),s=pe(Le(t));return et(ft(e,A(t,n)),qh(En(s)))})}function Bc(n,t){return G(()=>{let e;return e=_n(t,Ee(),1-Ee()),e=Wn(wt(e,ft(1,e))),Ce(MA(n,e),-1)})}function OA(n,t){return G(()=>{const e=_n(n,Ee(),1),s=_n(t,Ee(),1);return gt(A(n,Wn(wt(e,s))),-1)})}function LA(n,t){return G(()=>{const e=Wn(et(Ee(),t));return Ce(ft(t,A(n,e)),-1)})}function Px(n,t){return G(()=>{const e=Oc(n,-1),s=Oc(t,-1),r=A(e,s);return pe(gt(r,-1))})}const zc={meanSquaredError:Lc,meanAbsoluteError:mf,meanAbsolutePercentageError:gf,meanSquaredLogarithmicError:EA,squaredHinge:RA,hinge:AA,categoricalHinge:DA,logcosh:FA,categoricalCrossentropy:Xu,sparseCategoricalCrossentropy:Pc,binaryCrossentropy:Bc,kullbackLeiblerDivergence:OA,poisson:LA,cosineProximity:Px};function bf(n){if(typeof n=="string"){if(n in zc)return zc[n];let t=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new D(t)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Bx(n,t){return G(()=>{const e=A(.5,Vn(t)),s=Cs(An(t,e),n.dtype);return Ce(bs(n,s),-1)})}function zx(n,t){return G(()=>Cs(bs(Tu(n,-1),Tu(t,-1)),"float32"))}function PA(n,t){return G(()=>it(gt(Os(bs(n,1),bs(t,1))),"float32"))}function BA(n,t){return G(()=>it(gt(Os(bs(n,0),bs(t,1))),"float32"))}function zA(n,t){return G(()=>{const e=PA(n,t),s=BA(n,t),r=et(e,s);return it(sn(An(r,0),wt(e,r),0),"float32")})}function WA(n,t){return Bc(n,t)}function VA(n,t){return n.rank===t.rank&&(n=Ou(n,[n.rank-1])),t=Tu(t,-1),t.dtype!==n.dtype&&(t=it(t,n.dtype)),it(bs(n,t),"float32")}const UA=Lc,GA=Lc,HA=mf,jA=mf,qA=gf,KA=gf,Wx=Xu,XA=Px,Vx=Pc,Wc={binaryAccuracy:Bx,categoricalAccuracy:zx,precision:zA,categoricalCrossentropy:Wx,sparseCategoricalCrossentropy:Vx,mse:UA,MSE:GA,mae:HA,MAE:jA,mape:qA,MAPE:KA,cosine:XA};function YA(n){if(typeof n=="string"&&n in Wc)return Wc[n];if(typeof n!="string"&&n!=null)return n;throw new D(`Unknown metric ${n}`)}function Vc(n){if(ks(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let t;for(const e of Object.keys(zc))if(zc[e]===n){t=e;break}if(t!==void 0)return t;for(const e of Object.keys(Wc))if(Wc[e]===n){t=e;break}return t!==void 0?t:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ZA(n){const t={Adagrad:()=>Xr.adagrad(.01),Adadelta:()=>Xr.adadelta(1,.95,Ee()),Adam:()=>Xr.adam(.001,.9,.999,Ee()),Adamax:()=>Xr.adamax(.002,.9,.999,Ee(),0),RMSProp:()=>Xr.rmsprop(.001,.9,0,Ee()),SGD:()=>Xr.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,n in t)return t[n]();throw new D(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Ux=1*1024*1024;function Gx(n,t,e=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!xf(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const s=JSON.stringify(n);s.length>Ux&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${Ux}.`)}}function xf(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const t=Object.keys(n);for(const e of t)if(typeof e!="string"||!xf(n[e]))return!1;return!0}else if(Array.isArray(n)){for(const t of n)if(!xf(t))return!1;return!0}else return!1;else{const t=typeof n;return t==="string"||t==="number"||t==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function JA(n,t,e,s=console.log){const r=tD(n),o=["Layer (type)","Input Shape","Output shape","Param #"];r?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(u=>Math.floor(t*u)));let a;if(!r){o.push("Receives inputs"),a=[];for(const u in n.nodesByDepth)a.push(...n.nodesByDepth[u])}s("_".repeat(t)),Uc(o,e,s),s("=".repeat(t));const i=n.layers;for(let u=0;u<i.length;++u)r?eD(i[u],e,s):nD(i[u],e,a,s),s((u===i.length-1?"=":"_").repeat(t));n.checkTrainableWeightsConsistency();const l=QA(n),c=Ac(n.nonTrainableWeights);s(`Total params: ${l+c}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${c}`),s("_".repeat(t))}function QA(n){let t;return n.collectedTrainableWeights!=null?t=Ac(n.collectedTrainableWeights):t=Ac(n.trainableWeights),t}function tD(n){let t=!0;const e=[],s=[];for(const r in n.nodesByDepth)e.push(n.nodesByDepth[r]);for(const r of e){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(const r of n.layers){let o=!1;for(const a of r.inboundNodes)if(s.indexOf(a)!==-1)if(o){t=!1;break}else o=!0;if(!t)break}return t}function Uc(n,t,e=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);e(s)}function eD(n,t,e){let s,r;try{r=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const o=n.name,a=n.getClassName(),i=[`${o} (${a})`,r,s,n.countParams().toString()];Uc(i,t,e)}function nD(n,t,e,s){let r,o;try{o=n.inboundNodes.map(d=>JSON.stringify(d.inputShapes)).join(",")}catch{o="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const a=[];for(const d of n.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(d)===-1))for(let h=0;h<d.inboundLayers.length;++h){const p=d.inboundLayers[h].name,f=d.nodeIndices[h],m=d.tensorIndices[h];a.push(`${p}[${f}][${m}]`)}const i=n.name,l=n.getClassName(),c=a.length===0?"":a[0],u=[`${i} (${l})`,o,r,n.countParams().toString(),c];Uc(u,t,s);for(let d=1;d<a.length;++d)Uc(["","","","",a[d]],t,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Hx(n,t,e){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&t===0&&typeof e=="string"}function Gc(n,t){if(n===null)return null;if(typeof n=="string")return to(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];Hx(t,r,o)?e.push(o):e.push(Gc(o,t))}return e}else{const e={};for(const s of Object.keys(n)){const r=n[s];if(s==="name"&&typeof r=="string")e[s]=r;else{const o=to(s);e[o]=Gc(r,o)}}return e}}function yf(n,t){if(n==null)return null;if(typeof n=="string")return Us(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];Hx(t,r,o)?e.push(o):e.push(yf(o,t))}return e}else{const e={};for(const s of Object.keys(n)){const r=n[s],o=Us(s);(s==="name"||s==="className")&&typeof r=="string"?e[o]=r:e[o]=yf(r,s)}return e}}/** @license See the LICENSE file. */const jx="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const sD=n=>{const t=Object.keys(n);if(t.length===0)return!1;const e=t[0].split("/");return!isNaN(parseInt(e[e.length-1],10))};class ls extends Lt{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){const x=this.getClassName().toLowerCase();this.name=Tc(x)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],ir(this.inputs).length!==this.inputs.length)throw new D(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);ir(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const x of this.outputs){const y=x.sourceLayer,w=x.nodeIndex,I=x.tensorIndex;this.outputLayers.push(y),this.outputLayersNodeIndices.push(w),this.outputLayersTensorIndices.push(I)}for(const x of this.inputs){const y=x.sourceLayer,w=x.nodeIndex,I=x.tensorIndex;ks(w===0,"input layer has >1 nodes"),ks(I===0,"input layer has >1 tensors"),this.inputLayers.push(y),this.inputLayersNodeIndices.push(w),this.inputLayersTensorIndices.push(I)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){const y=this.inputLayers[x];if(!(y instanceof Hu))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${x} (0-based) originates from layer type ${y.getClassName()}.`);this.inputNames.push(y.name),this.feedInputShapes.push(y.batchInputShape),this.feedInputNames.push(y.name)}for(const x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);const e={},s={},r={},o={},a={},i=[],l=(x,y,w,I,C,S)=>{(I==null||C==null||S==null)&&(I=x.sourceLayer,C=x.nodeIndex,S=x.tensorIndex);const T=I.inboundNodes[C];if(w.indexOf(T)!==-1)throw new Gn(`The tensor ${x.name} at layer "${I.name}" is part of a cycle.`);if(y.indexOf(T)!==-1)return;this.containerNodes.add(ls.nodeKey(I,C)),I.id in a||(a[I.id]=Object.keys(a).length),w.indexOf(T)===-1&&w.push(T);const v=T.inboundLayers.length;for(let $=0;$<v;$++){const k=T.inputTensors[$],R=T.inboundLayers[$],F=T.nodeIndices[$],B=T.tensorIndices[$];l(k,y,w,R,F,B)}for(y.push(T);w.indexOf(T)>=0;)w.splice(w.indexOf(T),1);i.push(T)},c=[],u=[];for(const x of this.outputs)l(x,c,u);const d=i.slice().reverse();for(const x of d){s[x.id]=x,x.id in e||(e[x.id]=0);let y=e[x.id];const w=r[x.outboundLayer.id]==null?0:r[x.outboundLayer.id];y=Math.max(y,w),r[x.outboundLayer.id]=y,o[x.outboundLayer.id]=x.outboundLayer,e[x.id]=y;for(let I=0;I<x.inboundLayers.length;I++){const C=x.inboundLayers[I],S=x.nodeIndices[I],T=C.inboundNodes[S],v=e[T.id]==null?0:e[T.id];e[T.id]=Math.max(y+1,v),s[T.id]=T}}const h={};for(const x in e){const y=e[x];y in h||(h[y]=[]),h[y].push(s[x])}const p={};for(const x in r){const y=r[x];y in p||(p[y]=[]),p[y].push(o[x])}let f=Object.keys(p).map(x=>parseInt(x,10)).sort(Sc);this.layers=[];for(const x of f){const y=p[x];y.sort((w,I)=>{const C=a[w.id],S=a[I.id];return C<S?-1:C>S?1:0});for(const w of y)w instanceof ls&&this.internalContainerRefs.push(w),this.layers.push(w)}this.layersByDepth=p,f=Object.keys(h).map(x=>parseInt(x,10)).sort(Sc);const m=this.inputs.slice(),g=[];for(const x of f)for(const y of h[x]){const w=y.outboundLayer;if(w!=null){for(const I of y.inputTensors)if(m.indexOf(I)===-1)throw new Gn(`Graph disconnected: cannot obtain value for tensor ${I} at layer "${w.name}". The following previous layers were accessed without issue: ${g}`);for(const I of y.outputTensors)m.push(I);g.push(w.name)}}this.nodesByDepth=h;const b=this.layers.map(x=>x.name);for(const x of b){const y=b.filter(w=>w===x).length;if(y!==1)throw new Gn(`The name "${x}" is used ${y} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(b))}this.outboundNodes=[],this.inboundNodes=[],new Dc({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(s=>s.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new D("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.layers)e.push(...s.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const s={};let r=0;const o=sD(t);o&&this.parseWeights(t);for(const i of this.layers)for(const[l,c]of i.weights.entries()){const u=o?`${c.name.split("/").slice(0,-1).join("/")+"/"}${l}`:c.originalName;if(s[u]!=null)throw new D(`Duplicate weight name: ${u}`);s[u]=c,r++}const a=[];for(const i in t){let l=i;if(s[i]==null){const c=i.split("/");l=c.slice(0,-2).concat([c[c.length-1]]).join("/")}if(s[l]!=null)a.push([s[l],t[i]]);else if(e)throw new D(`Provided weight data has no target variable: ${i}`);delete s[l]}if(e){const i=[];for(const l in s)i.push(l);if(i.length>0)throw new D(`${i.length} of ${r} weights are not set: ${i}`)}pf(a)}parseWeights(t){for(const e in Object.keys(t)){const s=e.split("/"),r=["vars","layer_checkpoint_dependencies"],o=s.map(a=>a.startsWith("_")?a.slice(1):a).filter(a=>!r.includes(a)).join("/");o!==e&&(t[o]=t[e],delete t[e])}}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${jx}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const s=yf(this.updatedConfig());return e?JSON.stringify(s):s}call(t,e){return G(()=>{t=Zt(t);const s=new cr;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],t[r]);return ju(this.outputs,s,e)})}computeMask(t,e){return G(()=>{t=Zt(t);let s;return e==null?s=Qr(null,t.length):s=Zt(e),this.runInternalGraph(t,s)[1]})}computeOutputShape(t){const e=Rc(t);if(e.length!==this.inputLayers.length)throw new D(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let i=0;i<e.length;i++){const l=this.inputLayers[i],c=e[i],u=l.name+"_0_0";s[u]=c}const r=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Sc);if(r.length>1)for(const i of r){const l=this.nodesByDepth[i];for(const c of l){const u=c.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(u.id)!==-1)continue;const d=[];for(let m=0;m<c.inboundLayers.length;m++){const g=c.inboundLayers[m],b=c.nodeIndices[m],x=c.tensorIndices[m],y=`${g.name}_${b}_${x}`,w=s[y];d.push(w)}const h=u.computeOutputShape(pn(d)),p=Rc(h),f=u.inboundNodes.indexOf(c);for(let m=0;m<p.length;m++){const g=`${u.name}_${f}_${m}`;s[g]=p[m]}}}const o=[],a=[];for(let i=0;i<this.outputLayers.length;i++){const l=this.outputLayers[i],c=this.outputLayersNodeIndices[i],u=this.outputLayersTensorIndices[i],d=`${l.name}_${c}_${u}`;a.push(d)}for(let i=0;i<a.length;i++){const l=a[i];ks(l in s),o.push(s[l])}return pn(o)}runInternalGraph(t,e){e==null&&(e=Qr(null,t.length));const s={};for(let l=0;l<this.inputs.length;++l){const c=this.inputs[l],u=t[l],d=e[l];s[c.id]=[u,d]}const r=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Sc);for(const l of r){const c=this.nodesByDepth[l];for(const u of c){const d=u.outboundLayer,h=u.inputTensors,p=u.outputTensors,f=new Array;for(const m of h)m.id in s&&f.push(s[m.id]);if(f.length===h.length){let m={},g,b,x,y;if(u.callArgs!=null&&(m=u.callArgs),f.length===1){const[w,I]=f[0];m.mask==null&&(m.mask=I),x=Zt(d.call(w,m)),y=Zt(d.computeMask(w,I)),g=[w],b=[I]}else g=f.map(w=>w[0]),b=f.map(w=>w[1]),m.mask==null&&(m.mask=b),x=Zt(d.call(g,m)),y=Zt(d.computeMask(g,b));if(d.activityRegularizer)throw new Ft("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let w=0;w<p.length;++w){const I=p[w],C=x[w],S=y[w];s[I.id]=[C,S]}}}}const o=[],a=[],i=[];for(const l of this.outputs){ks(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[c,u]=s[l.id];i.push(c.shape),o.push(c),a.push(u)}return[o,a,i]}buildNodeConversionMap(t){const e={};let s;for(const r of this.layers){s=r instanceof ls?1:0;for(let o=0;o<r.inboundNodes.length;o++){const a=ls.nodeKey(r,o);this.containerNodes.has(a)&&(e[a]=s,s+=1)}}return e}getLayer(t,e){if(e!=null)return this.findLayer(e);if(t==null)throw new D("Provide either a layer name or layer index");if(typeof t=="number")return this.findLayer(t);for(const s of this.layers)if(s.name===t)return s;throw new D(`No such layer: ${t}`)}findLayer(t){if(this.layers.length<=t)throw new D(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}calculateLosses(){return G(()=>{const t=[];for(const e of this.layers)for(let s=0;s<e.inboundNodes.length;++s){const r=ls.nodeKey(e,s);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),s=[];for(const a of this.layers){const i=a.getClassName(),l=a.getConfig(),c=[];for(let d=0;d<a.inboundNodes.length;d++){const h=a.inboundNodes[d],p=ls.nodeKey(a,d);let f={};if(this.containerNodes.has(p)){if(h.callArgs)try{JSON.stringify(h.callArgs),f=h.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${h.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(h.inboundLayers.length>0){const m=[];for(let g=0;g<h.inboundLayers.length;g++){const b=h.inboundLayers[g],x=h.nodeIndices[g],y=h.tensorIndices[g],w=ls.nodeKey(b,x);let I=e[w];I==null&&(I=0),m.push([b.name,I,y,f])}c.push(m)}}}const u={};u.name=a.name,u.className=i,u.config=l,u.inboundNodes=c,s.push(u)}t.layers=s;const r=[];for(let a=0;a<this.inputLayers.length;a++){const i=this.inputLayers[a],l=this.inputLayersNodeIndices[a],c=ls.nodeKey(i,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);const d=this.inputLayersTensorIndices[a];r.push([i.name,u,d])}t.inputLayers=r;const o=[];for(let a=0;a<this.outputLayers.length;a++){const i=this.outputLayers[a],l=this.outputLayersNodeIndices[a],c=ls.nodeKey(i,l);if(!this.containerNodes.has(c))continue;let u=e[c];u==null&&(u=0);const d=this.outputLayersTensorIndices[a];o.push([i.name,u,d])}return t.outputLayers=o,t}static fromConfig(t,e,s={},r=!1){const o={},a={};function i(g,b){g.name in a?a[g.name].push(b):a[g.name]=[b]}function l(g,b){const x=[];let y;for(const w of b){const I=w[0],C=w[1],S=w[2];if(y=w[3]==null?{}:w[3],!(I in o)){i(g,b);return}const T=o[I];if(T.inboundNodes.length<=C){i(g,b);return}const v=T.inboundNodes[C];x.push(v.outputTensors[S])}x.length>0&&g.apply(pn(x),y)}function c(g){const b=g.name,x=Ss(g,e.customObjects!=null?e.customObjects:{});x.setFastWeightInitDuringBuild(r),o[b]=x,g.inboundNodes.forEach(w=>{if(!(w instanceof Array))throw new D(`Corrupted configuration, expected array for nodeData: ${w}`);i(x,w)})}const u=e.name,d=e.layers;for(const g of d)c(g);for(;!VR(a);)for(const g of d){const b=o[g.name];if(b.name in a){const x=a[b.name];delete a[b.name];for(const y of x)l(b,y)}}const h=[],p=[],f=e.inputLayers;for(const g of f){const b=g[0],x=g[1],y=g[2];ks(b in o);const I=o[b].inboundNodes[x].outputTensors;h.push(I[y])}const m=e.outputLayers;for(const g of m){const b=g[0],x=g[1],y=g[2];ks(b in o);const I=o[b].inboundNodes[x].outputTensors;p.push(I[y])}return new t({inputs:h,outputs:p,name:u})}get stateful(){if(this._stateful)throw new D("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){G(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rD(n,t,e){const s=t.length;if(n==null||Array.isArray(n)&&n.length===0)return t.map(r=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&t[0]in n?[n[t[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${e} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const r=[];return t.forEach(o=>{o in n?r.push(n[o]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${e} must be either an array with ${s} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(n)}`)}function qx(n,t){return rD(n,t,"classWeight")}async function Kx(n,t,e,s){if(e!=null){const r=G(()=>{if(n.shape.length===1)return Br(n);if(n.shape.length===2){if(n.shape[1]>1)return Tu(n,1);if(n.shape[1]===1)return W(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(await r.data());Mt(r);const a=[];return o.forEach(i=>{if(e[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(e[i])}),yn(a,"float32")}else return null}function oD(n,t){return A(n,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const aD=32;function Xx(n,t){let e,s;const r=t;e=r.xs,s=r.ys,N(e!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const o=Yx("input",n.inputNames,e),a=Yx("output",n.outputNames,s),i=o[0].shape[0];N(o.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),N(a.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<o.length;l++)N(o[l].shape[0]===i,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${o[l].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);for(let l=0;l<a.length;l++)N(a[l].shape[0]===i,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);return{xs:o,ys:a}}function Yx(n,t,e){if(e instanceof Te)return[e];if(Array.isArray(e))return N(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${n} keys ${t}.`),e;{const s=[];for(const r of t){if(e[r]==null)throw new D(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(e[r])}return s}}function iD(n){if(n.length===3)throw new Ft("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function uD(n,t,e){const s=e.batchesPerEpoch!=null;if(N(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),N(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),N(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),N(!s||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),N(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=e.validationData!=null;let o,a;if(r)if(Zx(e.validationData))N(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const g=iD(e.validationData);o=g.xs,a=g.ys}const i=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let c;r?c=l.slice().concat(l.map(g=>"val_"+g)):c=l.slice();const u=Ox(e.callbacks,e.yieldEvery),d=e.verbose==null?1:e.verbose,{callbackList:h,history:p}=Lx(u,d,e.epochs,null,null,lD(t,e),null,r,c);h.setModel(n),n.history=p,await h.onTrainBegin(),n.stopTraining_=!1;let f=e.initialEpoch==null?0:e.initialEpoch,m=await t.iterator();for(;f<e.epochs;){const g={};await h.onEpochBegin(f);let b=0,x=0;for(s||(m=await t.iterator());!s||b<e.batchesPerEpoch;){const y=await m.next();if(s&&y.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${b} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(y.value!=null){const{xs:w,ys:I}=Xx(n,y.value),C={};C.batch=x,C.size=w[0].shape[0],await h.onBatchBegin(x,C);const S=[];if(e.classWeight!=null){const $=qx(e.classWeight,n.outputNames);for(let k=0;k<$.length;++k)S.push(await Kx(I[k],null,$[k]))}const T=w.concat(I).concat(S),v=i(T);Mt(T);for(let $=0;$<l.length;++$){const k=l[$],R=v[$];C[k]=R,ms(R)}await h.onBatchEnd(x,C),Fx(C),x++,b++}if(s?b>=e.batchesPerEpoch:y.done){if(r){let w;Zx(e.validationData)?w=Zt(await n.evaluateDataset(e.validationData,{batches:e.validationBatches})):w=Zt(n.evaluate(o,a,{batchSize:e.validationBatchSize==null?aD:e.validationBatchSize,verbose:0}));for(let I=0;I<n.metricsNames.length;++I)g[`val_${n.metricsNames[I]}`]=w[I]}break}if(n.stopTraining_)break}if(await h.onEpochEnd(f,g),f++,n.stopTraining_)break}return await h.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function lD(n,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(n.size)&&(e=n.size),e}function Zx(n){return typeof n.iterator=="function"}function cD(n){return typeof n.next=="function"}async function dD(n,t,e){e=e||{};const s=e.batches!=null,r=n.testFunction;let o=[];if(e.verbose>0)throw new Ft("Verbose mode is not implemented yet.");N(!s||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const a=cD(t)?t:await t.iterator();let i=0,l=0;for(;!s||l<e.batches;){const c=await a.next();if(o=G(()=>{if(c.value){const{xs:u,ys:d}=Xx(n,c.value),h=u.concat(d),p=G(()=>r(h));if(Mt(h),l===0)for(let m=0;m<p.length;++m)o.push(St(0));const f=h[0].shape[0];for(let m=0;m<p.length;++m){const g=p[m],b=o[m];o[m]=G(()=>et(o[m],A(f,g))),l>0&&Mt(b)}Mt(p),i+=f,++l}return o}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<o.length;++c){const u=o[c];o[c]=wt(o[c],i),Mt(u)}return pn(o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wf(n){N(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function Yu(n,t,e){return n==null?[null]:Array.isArray(n)?n.map(s=>so(s,t,e-t)):so(n,t,e-t)}function If(n,t){return G(()=>n==null?null:Array.isArray(n)?n.map(e=>If(e,t)):fx(n,t.dtype==="int32"?t:it(t,"int32")))}function kf(n,t){const e=[];let s=0,r=null;for(;s<n;)r=s+t,r>=n&&(r=n),e.push([s,r]),s=r;return e}function Jx(n){const t=[];n instanceof Te&&(n=[n]);for(let e=0;e<n.length;++e){const s=n[e];if(s.rank===1)t.push(Vu(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function cs(n,t){if(n==null)return;const e=[];if(t instanceof Te)e.push(t.id);else if(Array.isArray(t))t.forEach(r=>e.push(r.id));else if(t!=null)for(const r in t){const o=t[r];e.push(o.id)}const s=[];if(n instanceof Te)e.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{e.indexOf(r.id)===-1&&s.push(r)});else if(n!=null)for(const r in n){const o=n[r];e.indexOf(o.id)===-1&&s.push(o)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hD(n){return n instanceof Te}function Cf(n){return Array.isArray(n)}function Qx(n){return!hD(n)&&!Cf(n)}function ty(n,t,e,s=!0,r=""){if(t==null||t.length===0){if(n!=null){let a=!1;if(Cf(n)&&n.length>0)a=!0;else if(Qx(n)){for(const i in n)if(n.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new D(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(n==null)return t.map(a=>null);let o;if(Qx(n)){n=n,o=[];for(const a of t){if(n[a]==null)throw new D(`No data provided for "${a}". Need data for each key in: ${t}`);o.push(n[a])}}else if(Cf(n)){if(n=n,n.length!==t.length)throw new D(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);o=n}else{if(n=n,t.length>1)throw new D(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);o=[n]}if(o=Jx(o),e!=null)for(let a=0;a<t.length;++a){if(e[a]==null)continue;const i=o[a];if(i.shape.length!==e[a].length)throw new D(`Error when checking ${r}: expected ${t[a]} to have ${e[a].length} dimension(s). but got array with shape ${i.shape}`);for(let l=0;l<e[a].length;++l){if(l===0&&!s)continue;const c=i.shape[l],u=e[a][l];if(u!=null&&u>=0&&c!==u)throw new D(`${r} expected a batch of elements where each example has shape [${e[a].slice(1,e[a].length)}] (i.e.,tensor shape [*,${e[a].slice(1,e[a].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return o}function pD(n,t,e){const s=ir(n.map(o=>o.shape[0]));s.sort();const r=ir(t.map(o=>o.shape[0]));if(r.sort(),s.length>1)throw new D(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(o=>o.shape))}`);if(r.length>1)throw new D(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(o=>o.shape))}`);if(s.length>0&&r.length>0&&!Kt(s,r))throw new D(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function fD(n,t,e){const s=[Lc,Bc,Xu];for(let r=0;r<n.length;++r){const o=n[r],a=t[r],i=e[r];if(a!=null){if(a===Xu&&o.shape[o.shape.length-1]===1)throw new D(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(a)!==-1){const l=o.shape.slice(1),c=i.slice(1);for(let u=0;u<l.length;++u){const d=l[u],h=c[u];if(h!=null&&d!==h)throw new D(`A target Tensor with shape ${o.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function ey(n,t,e,s=!0,r=""){let o;if(Array.isArray(n)){if(n.length!==t.length)throw new D(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${n.length} Tensors(s).`);o=n}else{if(t.length>1)throw new D(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);o=[n]}if(e!=null)for(let a=0;a<t.length;++a){if(e[a]==null)continue;const i=o[a];if(i.shape.length!==e[a].length)throw new D(`Error when checking ${r}: expected ${t[a]} to have ${e[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let l=0;l<e[a].length;++l){if(l===0&&!s)continue;const c=i.shape[l],u=e[a][l];if(u!=null&&u!==c)throw new D(`Error when checking ${r}: expected ${t[a]} to have shape ${JSON.stringify(e[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function mD(n,t){if(n==null||Array.isArray(n)&&n.length===0)return t.map(s=>[]);let e;if(typeof n=="string"||typeof n=="function")e=[n];else if(Array.isArray(n)||typeof n=="object")e=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(e))return t.map(s=>e);{const s=[];for(const r of t){let o=e.hasOwnProperty(r)?e[r]:[];Array.isArray(o)||(o=[o]),s.push(o)}return s}}const gD="layers-model";class ai extends ls{constructor(t){super(t),this.isTraining=!1}summary(t,e,s=console.log){if(!this.built)throw new D("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");JA(this,t,e,s)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=ZA(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof ar))throw new D("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(const a in t.loss)if(this.outputNames.indexOf(a)===-1)throw new D(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(const a of this.outputNames)t.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),e.push(bf(t.loss[a]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new D(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(i=>bf(i))}else{const a=bf(t.loss);this.outputs.forEach(i=>{e.push(a)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const i=this.internalOutputShapes[a],l=this.outputNames[a];this.feedOutputNames.push(l),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}const s=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],no("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});const r=mD(t.metrics,this.outputNames),o=(a,i,l)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([l,a])};no("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const i=r[a];(c=>{const u="";let d,h,p;for(const f of c){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const g=this.internalOutputShapes[a];g[g.length-1]===1||this.lossFunctions[a]===Bc?["accuracy","acc"].indexOf(f)!==-1?h=Bx:["crossentropy","ce"].indexOf(f)!==-1&&(h=WA):this.lossFunctions[a]===Pc?["accuracy","acc"].indexOf(f)!==-1?h=VA:["crossentropy","ce"].indexOf(f)!==-1&&(h=Vx):["accuracy","acc"].indexOf(f)!==-1?h=zx:["crossentropy","ce"].indexOf(f)!==-1&&(h=Wx);let b;["accuracy","acc"].indexOf(f)!==-1?b="acc":["crossentropy","ce"].indexOf(f)!==-1&&(b="ce"),p=h,d=u+b}else p=YA(f),d=u+Vc(f);let m;no(d,()=>{m=p}),o(a,d,m)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,s={}){const r=s.batchSize==null?32:s.batchSize;wf(r);const a=this.standardizeUserDataXY(t,e,!0,r);try{const i=a[0].concat(a[1]);this.makeTestFunction();const l=this.testFunction,c=this.testLoop(l,i,r,s.verbose,s.steps);return pn(c)}finally{cs(a[0],t),cs(a[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),dD(this,t,e)}checkNumSamples(t,e,s,r="steps"){let o;if(s!=null){if(o=null,e!=null)throw new D(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?o=t[0].shape[0]:o=t.shape[0];else throw new D(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return o}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new D("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(e),r=s?e:[e],o=this.retrieveSymbolicTensors(r),a=new cr;if(t instanceof Te&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new D(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)a.add(this.inputs[l],t[l])}else for(const l of this.inputs){const c=t[l.name];if(c==null)throw new D(`No value is provided for the model's input ${l.name}`);a.add(l,c)}const i=ju(o,a);return s?i:i[0]}retrieveSymbolicTensors(t){const e=Qr(null,t.length);let s=t.length;for(const r of this.layers){const o=Array.isArray(r.output)?r.output:[r.output],a=o.map(i=>i.name);for(let i=0;i<t.length;++i){const l=a.indexOf(t[i]);if(l!==-1&&(e[i]=o[l],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw e.forEach((o,a)=>{o==null&&r.push(t[a])}),new D(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return e}predictLoop(t,e=32,s=!1){return G(()=>{const r=this.checkNumSamples(t);if(s)throw new Ft("Verbose predictLoop() is not implemented yet.");const o=kf(r,e),a=this.outputs.map(i=>[]);for(let i=0;i<o.length;++i)G(()=>{const c=o[i][0],u=o[i][1],d=Yu(t,c,u),h=[];if(Array.isArray(d))for(let f=0;f<d.length;++f)h.push({key:this.inputs[f],value:d[f]});else h.push({key:this.inputs[0],value:d});const p=new cr(h);return ju(this.outputs,p)}).forEach((c,u)=>a[u].push(c));return pn(a.map(i=>nn(i,0)))})}predict(t,e={}){const s=Jx(t);ey(s,this.inputNames,this.feedInputShapes,!1);try{const r=e.batchSize==null?32:e.batchSize;return wf(r),this.predictLoop(s,r)}finally{cs(s,t)}}predictOnBatch(t){ey(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,s=!0,r){if(this.optimizer_==null)throw new Gn("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let a=0;a<this.feedOutputShapes.length;++a){const i=this.feedOutputShapes[a];this.feedLossFns[a]===Pc?o.push(i.slice(0,i.length-1).concat([1])):o.push(i)}if(t=ty(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=ty(e,this.feedOutputNames,o,!1,"target"),pD(t,e),fD(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&t[0].shape[0]%r!==0)throw new D(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,s,r,o=!0,a){const[i,l]=this.standardizeUserDataXY(t,e,o,a);if(s!=null)throw new Error("sample weight is not supported yet.");let c=null;if(r!=null){const u=qx(r,this.outputNames);c=[];for(let d=0;d<u.length;++d)c.push(await Kx(l[d],null,u[d]))}return[i,l,c]}testLoop(t,e,s,r=0,o){return G(()=>{const a=this.checkNumSamples(e,s,o,"steps"),i=[];if(r>0)throw new Ft("Verbose mode is not implemented yet.");if(o!=null)throw new Ft("steps mode in testLoop() is not implemented yet");{const l=kf(a,s),c=yn(as(0,a));for(let u=0;u<l.length;++u){const d=l[u][0],h=l[u][1],p=so(c,d,h-d),f=If(e,p),m=t(f);if(u===0)for(let g=0;g<m.length;++g)i.push(St(0));for(let g=0;g<m.length;++g){const b=m[g];i[g]=et(i[g],A(h-d,b))}}for(let u=0;u<i.length;++u)i[u]=wt(i[u],a)}return i})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let s=0;s<t.length;++s){const r=t[s];let o=r;if(rx(t,r)>1){const a=rx(t.slice(0,s),r);o+=`_${a}`}e.push(o)}return e}makeTrainFunction(){return t=>{const e=[],s=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{const d=[];for(let m=0;m<this.inputs.length;++m)d.push({key:this.inputs[m],value:s[m]});const h=new cr(d),p=ju(this.outputs,h,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const g=this.lossFunctions[m];let b=g(r[m],p[m]);o[m]!=null&&(b=oD(b,o[m]));const x=Ce(b);e.push(x),m===0?f=b:f=et(f,b)}for(let m=0;m<this.metricsTensors.length;++m){let g;if(this.outputs.length>1&&m<this.outputs.length)g=e[m];else{const b=this.metricsTensors[m][0],x=this.metricsTensors[m][1];g=Ce(b(r[x],p[x]))}ms(g),a.push(g)}return f=Ce(f),this.calculateLosses().forEach(m=>{f=et(f,m)}),f},l=this.collectedTrainableWeights.map(d=>d.read());return[this.optimizer_.minimize(i,!0,l)].concat(a)}}makeTestFunction(){this.testFunction=t=>G(()=>{const e=[];let s;const r=t.slice(0,this.inputs.length),o=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let c=0;c<this.inputs.length;++c)a.push({key:this.inputs[c],value:r[c]});const i=new cr(a),l=ju(this.outputs,i);for(let c=0;c<this.lossFunctions.length;++c){const u=this.lossFunctions[c],d=Ce(u(o[c],l[c]));c===0?s=d:s=et(s,d),e.push(s)}for(let c=0;c<this.metricsTensors.length;++c){const u=this.metricsTensors[c][0],d=this.metricsTensors[c][1],h=Ce(u(o[d],l[d]));e.push(h)}return e})}async fit(t,e,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,o,a,i,l,c,u,d,h;try{const p=s.batchSize==null?32:s.batchSize;wf(p);const m=await this.standardizeUserData(t,e,s.sampleWeight,s.classWeight,!1,p);r=m[0],o=m[1],h=m[2];let g=!1,b;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)l=s.validationData[0],c=s.validationData[1];else throw s.validationData.length===3?new Ft("validationData including sample weights is not supported yet."):new D(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const $=await this.standardizeUserData(l,c,null,null,!0,p);u=$[0],d=$[1],b=u.concat(d)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;const v=Math.floor(r[0].shape[0]*(1-s.validationSplit)),$=r[0].shape[0];u=Yu(r,v,$),a=r,r=Yu(r,0,v),d=Yu(o,v,$),i=o,o=Yu(o,0,v),b=u.concat(d)}else s.validationSteps!=null&&(g=!0);const x=r.concat(o).concat(h);this.checkTrainableWeightsConsistency();const y=this.makeTrainFunction(),w=this.getDedupedMetricsNames();let I,C;g?(this.makeTestFunction(),I=this.testFunction,C=w.slice().concat(w.map(v=>"val_"+v))):(I=null,b=[],C=w.slice());const S=Ox(s.callbacks,s.yieldEvery);return await this.fitLoop(y,x,w,p,s.epochs,s.verbose,S,I,b,s.shuffle,C,s.initialEpoch,null,null)}finally{this.isTraining=!1,cs(r,t),cs(o,e),cs(a,t),cs(i,e),cs(u,l),cs(d,c),h!=null&&Mt(h)}}async fitLoop(t,e,s,r,o,a,i,l,c,u,d,h,p,f){r==null&&(r=32),o==null&&(o=1),u==null&&(u=!0),h==null&&(h=0);let m=!1;if(l!=null&&c!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new D("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(e,r,p,"steps_per_epoch");let b;g!=null&&(b=as(0,g)),a==null&&(a=1);const{callbackList:x,history:y}=Lx(i,a,o,h,g,p,r,m,d);x.setModel(this),this.history=y,await x.onTrainBegin(),this.stopTraining_=!1;for(let w=h;w<o;++w){await x.onEpochBegin(w);const I={};if(p!=null)throw new Ft("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new Ft("batch shuffling is not implemneted yet");u&&mC(b);const C=yn(b),S=kf(g,r);for(let T=0;T<S.length;++T){const v={};if(await x.onBatchBegin(T,v),G(()=>{const $=S[T][0],k=S[T][1],R=so(C,$,k-$);v.batch=T,v.size=k-$;const F=If(e,R),B=t(F);for(let M=0;M<s.length;++M){const z=s[M],j=B[M];v[z]=j,ms(j)}if(T===S.length-1&&m){const M=this.testLoop(l,c,r);for(let z=0;z<s.length;++z){const j=s[z],V=M[z];ms(V),I["val_"+j]=V}}}),await x.onBatchEnd(T,v),Fx(v),this.stopTraining_)break}C.dispose()}if(await x.onEpochEnd(w,I),this.stopTraining_)break}return await x.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(t,e){return uD(this,t,e)}async trainOnBatch(t,e){const s=await this.standardizeUserData(t,e),r=s[0],o=s[1],i=this.makeTrainFunction()(r.concat(o)),l=[];for(const c of i){const u=await c.data();l.push(u[0])}return Mt(i),cs(s[0],t),cs(s[1],e),pn(l)}getNamedWeights(t){const e=[],s=t!=null&&t.trainableOnly,r=s?this.trainableWeights:this.weights,o=this.getWeights(s);for(let a=0;a<r.length;++a)s&&!r[a].trainable||e.push({name:r[a].originalName,tensor:o[a]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const e=mg().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-mg().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=Us(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>Us(e))}else{const e=Object.keys(this.loss);t={};const s=this.loss;for(const r of e)if(typeof s[r]=="string")t[r]=Us(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Us(Vc(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>Us(Vc(t)));{const t={};for(const e in this.metrics)t[e]=Us(Vc(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Gc(t.optimizer_config),s=Ss(e);let r;if(typeof t.loss=="string")r=to(t.loss);else if(Array.isArray(t.loss))r=t.loss.map(a=>to(a));else if(t.loss!=null){r={};for(const a in t.loss)r[a]=to(t.loss[a])}let o;if(Array.isArray(t.metrics))o=t.metrics.map(a=>to(a));else if(t.metrics!=null){o={};for(const a in t.metrics)o[a]=to(t.metrics[a])}this.compile({loss:r,metrics:o,optimizer:s})}async save(t,e){if(typeof t=="string"){const c=v$(t);if(c.length===0)throw new D(`Cannot find any save handlers for URL '${t}'`);if(c.length>1)throw new D(`Found more than one (${c.length}) save handlers for URL '${t}'`);t=c[0]}if(t.save==null)throw new D("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await gg(this.getNamedWeights(e)),i={modelTopology:this.toJSON(null,!1),format:gD,generatedBy:`TensorFlow.js tfjs-layers v${jx}`,convertedBy:null};if((e==null?!1:e.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();const c="optimizer",{data:u,specs:d}=await gg(await this.optimizer.getWeights(),c);s.specs.push(...d),s.data=b$([s.data,u])}return this.userDefinedMetadata!=null&&(Gx(this.userDefinedMetadata,this.name,!0),i.userDefinedMetadata=this.userDefinedMetadata),i.weightData=s.data,i.weightSpecs=s.specs,t.save(i)}setUserDefinedMetadata(t){Gx(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}ai.className="Model",tt(ai);class ny extends ai{}ny.className="Functional",tt(ny);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function bD(n,t){if(t==null&&(t={}),typeof n=="string"){const e=S$(n,t);if(e.length===0)e.push(v_(n,t));else if(e.length>1)throw new D(`Found more than one (${e.length}) load handlers for URL '${n}'`);n=e[0]}return xD(n,void 0,t)}async function xD(n,t,e){if(e==null&&(e={}),n.load==null)throw new D("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await n.load();let r=s.modelTopology;r.model_config!=null&&(r=r.model_config);const o=e.strict==null?!0:e.strict,a=s.weightData!=null&&s.weightSpecs!=null&&o,i=Ss(Gc(r),t,a),l=s.trainingConfig;if(l!=null&&i.loadTrainingConfig(l),s.userDefinedMetadata!=null&&i.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new D("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:c,optimizerWeights:u}=yD(s.weightData,s.weightSpecs);i.loadWeights(c,o),i.optimizer!=null&&u.length>0&&await i.optimizer.setWeights(u),Mt(c),Mt(u.map(d=>d.tensor))}return i}function yD(n,t){const e=d$(n,t),s={},r=[];return t.forEach(o=>{o.group==="optimizer"?r.push({name:o.name,tensor:e[o.name]}):s[o.name]=e[o.name]}),{modelWeights:s,optimizerWeights:r}}class ii extends ai{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:Tc("sequential_"),t.layers!=null)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new D(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof ii||t instanceof ai;let s;if(e){if(s=t,s.outputs.length!==1)throw new D("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new D("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new D("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=yA({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(r)}if(e)this.outputs=s.outputs,this.inputs=s.inputs;else{if(t.inboundNodes.length!==1)throw new D(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new D("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=Sx(this.outputs[0])}this.inboundNodes=[],new Dc({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Qr(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=t.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(Ht(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ai({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,s=console.log){this.built||this.build(),super.summary(t,e,s)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,s={}){if(!this.built)throw new Gn("The model needs to be compiled before being used.");return this.model.evaluate(t,e,s)}async evaluateDataset(t,e){if(!this.built)throw new Gn("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,s={}){if(!this.built)throw new Gn("The model needs to be compiled before being used.");return this.model.fit(t,e,s)}async fitDataset(t,e){if(!this.built)throw new Gn("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,s={},r=!1){let o,a={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new D("Legacy serialization format not supported yet.");o=e}else N(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=e.layers,delete e.layers,a=e;const i=new t(a);if(!(i instanceof ii))throw new Ft(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const l of o){const u=Ss(l,void 0,r);r&&u.setFastWeightInitDuringBuild(!0),i.add(u)}return i}set stopTraining(t){if(this.model==null)throw new D("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new D("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const s={};s.className=e.getClassName(),s.config=e.getConfig(),t.push(s)}return{name:this.name,layers:t}}}ii.className="Sequential",tt(ii);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wD(n){return new ii(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Je=class extends si{getConfig(){return{}}};class sy extends Je{apply(t,e=1){return sA(t,e)}}sy.className="elu",tt(sy);class ry extends Je{apply(t){return Qg(t)}}ry.className="selu",tt(ry);class oy extends Je{apply(t){return Ps(t)}}oy.className="relu",tt(oy);class ay extends Je{apply(t){return G(()=>ei(6,Ps(t)))}}ay.className="relu6",tt(ay);class iy extends Je{apply(t){return t}}iy.className="linear",tt(iy);class uy extends Je{apply(t){return Ja(t)}}uy.className="sigmoid",tt(uy);class ly extends Je{apply(t){return oA(t)}}ly.className="hardSigmoid",tt(ly);class cy extends Je{apply(t){return Du(t)}}cy.className="softplus",tt(cy);class dy extends Je{apply(t){return rA(t)}}dy.className="softsign",tt(dy);class hy extends Je{apply(t){return Kl(t)}}hy.className="tanh",tt(hy);let $f=class extends Je{apply(t,e=-1){return ap(t,e)}};$f.className="softmax",tt($f);class py extends Je{apply(t,e=-1){return Pg(t,e)}}py.className="logSoftmax",tt(py);class fy extends Je{apply(t){return G(()=>G(()=>{const e=Math.sqrt(2),s=A(.5,et(1,Fg(wt(t,e))));return A(t,s)}))}}fy.className="gelu",tt(fy);class my extends Je{apply(t){return G(()=>A(.5,A(t,et(1,Kl(A(Ze(wt(2,Math.PI)),et(t,A(.044715,Ur(t,3)))))))))}}my.className="gelu_new",tt(my);class gy extends Je{apply(t){return G(()=>A(t,Kl(Du(t))))}}gy.className="mish",tt(gy);class by extends Je{apply(t,e=1){return G(()=>A(Ja(A(t,e)),t))}}by.className="swish",tt(by);function dr(n){return n.getClassName()}function vf(n,t={}){return zu(n,Un.getMap().classNameMap,t,"activation")}function hr(n){if(n==null){const t={};return t.className="linear",t.config={},vf(t)}if(typeof n=="string"){const t={};return t.className=n,t.config={},vf(t)}else return n instanceof Je?n:vf(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ID(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class xy extends si{}class yy extends xy{constructor(t){super(),ID(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return G(()=>{let e=Pe([1]);return this.hasL1&&(e=et(e,gt(A(this.l1,Le(t))))),this.hasL2&&(e=et(e,gt(A(this.l2,Uu(t))))),W(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}yy.className="L1L2",tt(yy);const wy={l1l2:"L1L2"};function re(n){return Xp(n)}function Iy(n,t={}){return zu(n,Un.getMap().classNameMap,t,"regularizer")}function me(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in wy?wy[n]:n,config:{}};return Iy(e)}else return n instanceof xy?n:Iy(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ky extends Lt{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=$t(t);let s=Ps(t);return this.maxValue!=null&&(s=_n(s,0,this.maxValue)),s}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}ky.className="ReLU",tt(ky);class Cy extends Lt{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=$t(t);return jh(s,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Cy.className="LeakyReLU",tt(Cy);class $y extends Lt{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=fe(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=me(t.alphaRegularizer),this.alphaConstraint=De(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new D(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=Ht(t);const e=t.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)e[r-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<t.length;++r)s[r]=t[r];this.inputSpec=[new Re({ndim:t.length,axes:s})],this.built=!0}call(t,e){return t=$t(t),tp(t,this.alpha.read())}getConfig(){const t={alphaInitializer:xe(this.alphaInitializer),alphaRegularizer:re(this.alphaRegularizer),alphaConstraint:Ae(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}$y.className="PReLU",tt($y);let vy=class extends Lt{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new Ft(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=$t(t);return Zl(s)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}};vy.className="ELU",tt(vy);class Sy extends Lt{constructor(t){super(t??{}),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){const s=$t(t);return A(s,it(An(s,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}Sy.className="ThresholdedReLU",tt(Sy);class Ny extends Lt{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new $f().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){return G(()=>{let s=$t(t);const r=e.mask;if(r!=null){const o=A(ft(Ls(s.shape),it(r,s.dtype)),St(-1e9));s=et(s,o)}return this.axis instanceof Array?this.axis.length>1?En(ft(s,Kh(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}Ny.className="Softmax",tt(Ny);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ui(n,t,e){if(typeof n=="number")return Qr(n,t);if(n.length!==t)throw new D(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${n.length} elements.`);for(let s=0;s<t;++s){const r=n[s];if(!QR(r))throw new D(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function ds(n,t,e,s,r=1){if(n==null)return n;const o=t+(t-1)*(r-1);let a;return e==="same"?a=n:a=n-o+1,Math.floor((a+s-1)/s)}function Ns(n,t,e,s){if(n==null)return null;if(s==="valid")n=n*t+lr([e-t,0]);else if(s==="same")n=n*t;else throw new D(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Sf(n,t){return G(()=>($e(t),t==="channelsFirst"?Vt(n,[0,2,3,1]):n))}function Ty(n,t){return G(()=>($e(t),t==="channelsFirst"?Vt(n,[0,2,3,4,1]):n))}function kD(n,t,e,s=1,r="valid",o,a=1){return G(()=>{if(o==null&&(o=is()),$e(o),n.shape.length!==3)throw new D(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(t.shape.length!==3)throw new D(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new D(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(o==="channelsFirst"&&(n=Vt(n,[0,2,1])),r==="causal")throw new Ft("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Tg(n,t,s,r==="same"?"same":"valid","NWC",a);return e!=null&&(i=us(i,e)),i})}function _y(n,t,e,s=[1,1],r="valid",o,a,i=null){return G(()=>{if(o==null&&(o=is()),$e(o),n.rank!==3&&n.rank!==4)throw new D(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(t.rank!==3&&t.rank!==4)throw new D(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=Sf(n,o);if(r==="causal")throw new Ft("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=nT({x:l,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:e,activation:i}),o==="channelsFirst"&&(l=Vt(l,[0,3,1,2])),l})}function CD(n,t,e,s=[1,1,1],r="valid",o,a){return G(()=>{if(o==null&&(o=is()),$e(o),n.rank!==4&&n.rank!==5)throw new D(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(t.rank!==4&&t.rank!==5)throw new D(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let i=Ty(n,o);if(r==="causal")throw new Ft("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=eS(i,t,s,r==="same"?"same":"valid","NDHWC",a),e!=null&&(i=us(i,e)),o==="channelsFirst"&&(i=Vt(i,[0,4,1,2,3])),i})}class Hc extends Lt{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Hc.verifyArgs(e),this.rank=t,Be(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Ft(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ui(e.kernelSize,t,"kernelSize"),this.strides=ui(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,Mn(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,$e(this.dataFormat),this.activation=hr(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=fe(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=De(e.biasConstraint),this.biasRegularizer=me(e.biasRegularizer),this.activityRegularizer=me(e.activityRegularizer),this.dilationRate=ui(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new D(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new D(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new D(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(ks("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!Zp(t.kernelSize,"number",1,3))throw new D(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:dr(this.activation),useBias:this.useBias,biasInitializer:xe(this.biasInitializer),biasRegularizer:re(this.biasRegularizer),activityRegularizer:re(this.activityRegularizer),biasConstraint:Ae(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class li extends Hc{constructor(t,e){super(t,e),this.kernel=null,li.verifyArgs(e),this.filters=e.filters,Be(this.filters,"filters"),this.kernelInitializer=fe(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=De(e.kernelConstraint),this.kernelRegularizer=me(e.kernelRegularizer)}build(t){t=Ht(t);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new D(`The channel dimension of the input should be defined. Found ${t[e]}`);const s=t[e],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:s}}],this.built=!0}call(t,e){return G(()=>{t=$t(t);let s;const r=this.bias==null?null:this.bias.read(),o=ax(this.activation.getClassName());if(o!=null&&this.rank===2)s=_y(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(this.rank===1)s=kD(t,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=_y(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=CD(t,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Ft("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(t){t=Ht(t);const e=[],s=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let o=0;o<s.length;++o){const a=ds(s[o],this.kernelSize[o],this.padding,this.strides[o],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[o]);e.push(a)}let r=[t[0]];return this.dataFormat==="channelsLast"?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:xe(this.kernelInitializer),kernelRegularizer:re(this.kernelRegularizer),kernelConstraint:Ae(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new D(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class Zu extends li{constructor(t){super(2,t),Zu.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Zp(t.kernelSize,"number",1,2))throw new D(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}Zu.className="Conv2D",tt(Zu);class Ju extends li{constructor(t){super(3,t),Ju.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new D(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Ju.className="Conv3D",tt(Ju);class Ey extends Zu{constructor(t){if(super(t),this.inputSpec=[new Re({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new D(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Ht(t),t.length!==4)throw new D("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new D("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Re({ndim:4,axes:{[e]:s}})],this.built=!0}call(t,e){return G(()=>{let s=$t(t);if(s.shape.length!==4)throw new D(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);const l=r[a],c=r[i],u=this.kernelSize[0],d=this.kernelSize[1],h=this.strides[0],p=this.strides[1],f=Ns(l,h,u,this.padding),m=Ns(c,p,d,this.padding),g=[o,f,m,this.filters];this.dataFormat!=="channelsLast"&&(s=Vt(s,[0,2,3,1]));let b=_g(s,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(b=Vt(b,[0,3,1,2])),this.bias!=null&&(b=us(b,this.bias.read(),this.dataFormat)),this.activation!=null&&(b=this.activation.apply(b)),b})}computeOutputShape(t){t=Ht(t);const e=t.slice();let s,r,o;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3):(s=3,r=1,o=2);const a=this.kernelSize[0],i=this.kernelSize[1],l=this.strides[0],c=this.strides[1];return e[s]=this.filters,e[r]=Ns(e[r],l,a,this.padding),e[o]=Ns(e[o],c,i,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Ey.className="Conv2DTranspose",tt(Ey);class Ry extends Ju{constructor(t){if(super(t),this.inputSpec=[new Re({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new D(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=Ht(t),t.length!==5)throw new D("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new D("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Re({ndim:5,axes:{[e]:s}})],this.built=!0}call(t,e){return G(()=>{let s=$t(t);if(s.shape.length!==5)throw new D(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let a,i,l;this.dataFormat==="channelsFirst"?(l=2,a=3,i=4):(l=1,a=2,i=3);const c=r[l],u=r[a],d=r[i],h=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],g=this.strides[1],b=this.strides[2],x=Ns(c,m,h,this.padding),y=Ns(u,g,p,this.padding),w=Ns(d,b,f,this.padding),I=[o,x,y,w,this.filters];this.dataFormat!=="channelsLast"&&(s=Vt(s,[0,2,3,4,1]));let C=rS(s,this.kernel.read(),I,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(C=Vt(C,[0,4,1,2,3])),this.bias!==null&&(C=us(C,this.bias.read(),this.dataFormat)),this.activation!==null&&(C=this.activation.apply(C)),C})}computeOutputShape(t){t=Ht(t);const e=t.slice();let s,r,o,a;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3,a=4):(s=4,r=1,o=2,a=3);const i=this.kernelSize[0],l=this.kernelSize[1],c=this.kernelSize[2],u=this.strides[0],d=this.strides[1],h=this.strides[2];return e[s]=this.filters,e[r]=Ns(e[r],u,i,this.padding),e[o]=Ns(e[o],d,l,this.padding),e[a]=Ns(e[a],h,c,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Ry.className="Conv3DTranspose",tt(Ry);class Ay extends li{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new D("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new D("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new D(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=fe(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=me(e.depthwiseRegularizer),this.depthwiseConstraint=De(e.depthwiseConstraint),this.pointwiseInitializer=fe(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=me(e.pointwiseRegularizer),this.pointwiseConstraint=De(e.pointwiseConstraint)}build(t){if(t=Ht(t),t.length<this.rank+2)throw new D(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new D(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const s=t[e],r=this.kernelSize.concat([s,this.depthMultiplier]),o=[];for(let i=0;i<this.rank;++i)o.push(1);o.push(s*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Re({ndim:this.rank+2,axes:{[e]:s}})],this.built=!0}call(t,e){return G(()=>{t=$t(t);let s;if(this.rank===1)throw new Ft("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Vt(t,[0,2,3,1])),s=tb(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=us(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=Vt(s,[0,3,1,2])),s})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=xe(this.depthwiseInitializer),t.pointwiseInitializer=xe(this.pointwiseInitializer),t.depthwiseRegularizer=re(this.depthwiseRegularizer),t.pointwiseRegularizer=re(this.pointwiseRegularizer),t.depthwiseConstraint=Ae(this.depthwiseConstraint),t.pointwiseConstraint=Ae(this.pointwiseConstraint),t}}Ay.className="SeparableConv";class Dy extends Ay{constructor(t){super(2,t)}}Dy.className="SeparableConv2D",tt(Dy);class jc extends li{constructor(t){super(1,t),jc.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Zp(t.kernelSize,"number",1,1))throw new D(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}jc.className="Conv1D",tt(jc);class Fy extends Lt{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return G(()=>{if(t=$t(t),this.dataFormat==="channelsLast"){const s=_c(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return _c(s,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=_c(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return _c(s,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Fy.className="Cropping2D",tt(Fy);class My extends Lt{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,$e(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,YR(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){const e=t[2]==null?null:this.size[0]*t[2],s=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,s]}else{const e=t[1]==null?null:this.size[0]*t[1],s=t[2]==null?null:this.size[1]*t[2];return[t[0],e,s,t[3]]}}call(t,e){return G(()=>{let s=$t(t);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=Vt(s,[0,2,3,1]);const o=this.size[0]*r[2],a=this.size[1]*r[3],i=this.interpolation==="nearest"?zs.resizeNearestNeighbor(s,[o,a]):zs.resizeBilinear(s,[o,a]);return Vt(i,[0,3,1,2])}else{const o=this.size[0]*r[1],a=this.size[1]*r[2];return this.interpolation==="nearest"?zs.resizeNearestNeighbor(s,[o,a]):zs.resizeBilinear(s,[o,a])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}My.className="UpSampling2D",tt(My);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $D(n,t,e=[1,1],s="valid",r,o){return G(()=>{r==null&&(r=is()),$e(r);let a=Sf(n,r);if(n.rank!==4)throw new D(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(t.rank!==4)throw new D(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return a=Uh(a,t,e,s==="same"?"same":"valid","NHWC",o),r==="channelsFirst"&&(a=Vt(a,[0,3,1,2])),a})}class Oy extends Hc{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=fe(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=De(t.depthwiseConstraint),this.depthwiseRegularizer=me(t.depthwiseRegularizer)}build(t){if(t=Ht(t),t.length<4)throw new D(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new D(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const s=t[e],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return G(()=>{t=$t(t);let s=$D(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=us(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(t){t=Ht(t);const e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],r=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,o=ds(e,this.kernelSize[0],this.padding,this.strides[0]),a=ds(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],r,o,a]:[t[0],o,a,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=xe(this.depthwiseInitializer),t.depthwiseRegularizer=re(this.depthwiseRegularizer),t.depthwiseConstraint=Ae(this.depthwiseRegularizer),t}}Oy.className="DepthwiseConv2D",tt(Oy);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ly(n,t,e,s){if(Array.isArray(n)){if(t!=null||e!=null)throw new D("When inputs is an array, neither initialState or constants should be provided");s!=null&&(e=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(t=n.slice(1,n.length)),n=n[0]}function r(o){return o==null||Array.isArray(o)?o:[o]}return t=r(t),e=r(e),{inputs:n,initialState:t,constants:e}}function Py(n,t,e,s=!1,r,o,a=!1,i=!1){return G(()=>{const l=t.shape.length;if(l<3)throw new D(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(as(2,l));t=Vt(t,c),a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=it(it(r,"bool"),"float32"),r.rank===l-1&&(r=dn(r,-1)),r=Vt(r,c)),s&&(t=qr(t,0),r!=null&&(r=qr(r,0)));const u=[];let d,h=e;const p=t.shape[0],f=Kr(t);let m;r!=null&&(m=Kr(r));for(let b=0;b<p;++b){const x=f[b],y=G(()=>n(x,h));if(r==null)d=y[0],h=y[1];else{const w=G(()=>{const I=m[b],C=ft(Vn(I),I),S=et(A(y[0],I),A(h[0],C)),T=h.map((v,$)=>et(A(y[1][$],I),A(v,C)));return{output:S,newStates:T}});d=w.output,h=w.newStates}i&&u.push(d)}let g;return i&&(g=ys(u,1)),[d,g,h]})}class pr extends Lt{constructor(t){super(t);let e;if(t.cell==null)throw new D("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new _f({cells:t.cell}):e=t.cell,e.stateSize==null)throw new D("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new Re({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return as(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){df(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const s=e[0];let r;if(this.returnSequences?r=[t[0],t[1],s]:r=[t[0],s],this.returnState){const o=[];for(const a of e)o.push([t[0],a]);return[r].concat(o)}else return r}computeMask(t,e){return G(()=>{Array.isArray(e)&&(e=e[0]);const s=this.returnSequences?e:null;if(this.returnState){const r=this.states.map(o=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let s=0;s<t;++s)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new Ft("Constants support is not implemented in RNN yet.");df(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,s=t.slice(2);this.inputSpec[0]=new Re({shape:[e,null,...s]});const r=[t[0]].concat(t.slice(2));this.cell.build(r);let o;if(Array.isArray(this.cell.stateSize)?o=this.cell.stateSize:o=[this.cell.stateSize],this.stateSpec!=null){if(!Kt(this.stateSpec.map(a=>a.shape[a.shape.length-1]),o))throw new D(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=o.map(a=>new Re({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){G(()=>{if(!this.stateful)throw new Is("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new D("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Pe([s,r])):this.states_=[Pe([s,this.cell.stateSize])];else if(t==null)Mt(this.states_),this.keptStates!=null&&(Mt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Pe([s,r])):this.states_[0]=Pe([s,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new D(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):Mt(this.states_);for(let r=0;r<this.states_.length;++r){const o=t[r],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,i=[s,a];if(!Kt(o.shape,i))throw new D(`State ${r} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${o.shape}`);this.states_[r]=o}}this.states_=this.states_.map(r=>ms(r.clone()))})}apply(t,e){let s=e==null?null:e.initialState,r=e==null?null:e.constants;e==null&&(e={});const o=Ly(t,s,r,this.numConstants);t=o.inputs,s=o.initialState,r=o.constants;let a=[],i=[];if(s!=null){e.initialState=s,a=a.concat(s),this.stateSpec=[];for(const c of s)this.stateSpec.push(new Re({shape:c.shape}));i=i.concat(this.stateSpec)}if(r!=null&&(e.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof vs){const c=[t].concat(a),u=this.inputSpec.concat(i),d=this.inputSpec;this.inputSpec=u;const h=super.apply(c,e);return this.inputSpec=d,h}else return super.apply(t,e)}call(t,e){return G(()=>{const s=e==null?null:e.mask,r=e==null?null:e.training;let o=e==null?null:e.initialState;t=$t(t),o==null&&(this.stateful?o=this.states_:o=this.getInitialState(t));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(o.length!==a)throw new D(`RNN Layer has ${a} state(s) but was passed ${o.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},c=Py((f,m)=>{const g=this.cell.call([f].concat(m),i);return[g[0],g.slice(1)]},t,o,this.goBackwards,s,null,this.unroll,this.returnSequences),u=c[0],d=c[1],h=c[2];this.stateful&&this.resetStates(h,r);const p=this.returnSequences?d:u;return this.returnState?[p].concat(h):p})}getInitialState(t){return G(()=>{let e=Pe(t.shape);return e=gt(e,[1,2]),e=Vu(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?ef(e,[1,s]):e):this.cell.stateSize>1?[ef(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===pr.className&&(e.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),t),e)}static fromConfig(t,e,s={}){const r=e.cell,o=Ss(r,s);return new t(Object.assign(e,{cell:o}))}}pr.className="RNN",tt(pr);class qc extends Lt{}class Nf extends qc{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Be(this.units,"units"),this.activation=hr(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=fe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=fe(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=fe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=me(t.kernelRegularizer),this.recurrentRegularizer=me(t.recurrentRegularizer),this.biasRegularizer=me(t.biasRegularizer),this.kernelConstraint=De(t.kernelConstraint),this.recurrentConstraint=De(t.recurrentConstraint),this.biasConstraint=De(t.biasConstraint),this.dropout=oi([1,lr([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=oi([1,lr([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Ht(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return G(()=>{if(t=t,t.length!==2)throw new D(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let s=t[1];t=t[0];const r=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=fr({ones:()=>Vn(t),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=fr({ones:()=>Vn(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let o;const a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?o=$s(A(t,a),this.kernel.read()):o=$s(t,this.kernel.read()),this.bias!=null&&(o=us(o,this.bias.read())),i!=null&&(s=A(s,i));let l=et(o,$s(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:dr(this.activation),useBias:this.useBias,kernelInitializer:xe(this.kernelInitializer),recurrentInitializer:xe(this.recurrentInitializer),biasInitializer:xe(this.biasInitializer),kernelRegularizer:re(this.kernelRegularizer),recurrentRegularizer:re(this.recurrentRegularizer),biasRegularizer:re(this.biasRegularizer),activityRegularizer:re(this.activityRegularizer),kernelConstraint:Ae(this.kernelConstraint),recurrentConstraint:Ae(this.recurrentConstraint),biasConstraint:Ae(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}}Nf.className="SimpleRNNCell",tt(Nf);class By extends pr{constructor(t){t.cell=new Nf(t),super(t)}call(t,e){return G(()=>{this.cell.dropoutMask!=null&&(Mt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Mt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,r=e==null?null:e.training,o=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:o})})}static fromConfig(t,e){return new t(e)}}By.className="SimpleRNN",tt(By);class Tf extends qc{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new D("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Be(this.units,"units"),this.activation=hr(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=hr(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=fe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=fe(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=fe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=me(t.kernelRegularizer),this.recurrentRegularizer=me(t.recurrentRegularizer),this.biasRegularizer=me(t.biasRegularizer),this.kernelConstraint=De(t.kernelConstraint),this.recurrentConstraint=De(t.recurrentConstraint),this.biasConstraint=De(t.biasConstraint),this.dropout=oi([1,lr([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=oi([1,lr([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Ht(t);const e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return G(()=>{if(t=t,t.length!==2)throw new D(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training==null?!1:e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=fr({ones:()=>Vn(t),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=fr({ones:()=>Vn(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,a=this.recurrentDropoutMask;let i,l,c;0<this.dropout&&this.dropout<1&&(t=A(t,o[0]));let u=$s(t,this.kernel.read());this.useBias&&(u=us(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=A(r,a[0]));const d=this.recurrentKernel.read(),[h,p]=Dn(d,[2*this.units,this.units],d.rank-1),f=$s(r,h),[m,g,b]=Dn(u,3,u.rank-1),[x,y]=Dn(f,2,f.rank-1);i=this.recurrentActivation.apply(et(m,x)),l=this.recurrentActivation.apply(et(g,y));const w=$s(A(l,r),p);c=this.activation.apply(et(b,w));const I=et(A(i,r),A(et(1,pe(i)),c));return[I,I]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:dr(this.activation),recurrentActivation:dr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:xe(this.kernelInitializer),recurrentInitializer:xe(this.recurrentInitializer),biasInitializer:xe(this.biasInitializer),kernelRegularizer:re(this.kernelRegularizer),recurrentRegularizer:re(this.recurrentRegularizer),biasRegularizer:re(this.biasRegularizer),activityRegularizer:re(this.activityRegularizer),kernelConstraint:Ae(this.kernelConstraint),recurrentConstraint:Ae(this.recurrentConstraint),biasConstraint:Ae(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}}Tf.className="GRUCell",tt(Tf);class zy extends pr{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Tf(t),super(t)}call(t,e){return G(()=>{this.cell.dropoutMask!=null&&(Mt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Mt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,r=e==null?null:e.training,o=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:o})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}zy.className="GRU",tt(zy);class Kc extends qc{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Be(this.units,"units"),this.activation=hr(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=hr(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=fe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=fe(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=fe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=me(t.kernelRegularizer),this.recurrentRegularizer=me(t.recurrentRegularizer),this.biasRegularizer=me(t.biasRegularizer),this.kernelConstraint=De(t.kernelConstraint),this.recurrentConstraint=De(t.recurrentConstraint),this.biasConstraint=De(t.biasConstraint),this.dropout=oi([1,lr([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=oi([1,lr([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=Ht(t);const s=t[t.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const o=this.biasInitializer,a=this.units;r=new(e=class extends jn{apply(l,c){const u=o.apply([a]),d=new sf().apply([a]),h=o.apply([a*2]);return px(px(u,d),h)}},e.className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return G(()=>{const s=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new D(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const o=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=fr({ones:()=>Vn(t),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=fr({ones:()=>Vn(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let l,c,u,d;0<this.dropout&&this.dropout<1&&(t=A(t,a[0]));let h=$s(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=A(r,i[0])),h=et(h,$s(r,this.recurrentKernel.read())),this.useBias&&(h=us(h,this.bias.read()));const[p,f,m,g]=Dn(h,4,h.rank-1);l=this.recurrentActivation.apply(p),c=this.recurrentActivation.apply(f),u=et(A(c,o),A(l,this.activation.apply(m))),d=this.recurrentActivation.apply(g);const b=A(d,this.activation.apply(u));return[b,b,u]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:dr(this.activation),recurrentActivation:dr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:xe(this.kernelInitializer),recurrentInitializer:xe(this.recurrentInitializer),biasInitializer:xe(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:re(this.kernelRegularizer),recurrentRegularizer:re(this.recurrentRegularizer),biasRegularizer:re(this.biasRegularizer),activityRegularizer:re(this.activityRegularizer),kernelConstraint:Ae(this.kernelConstraint),recurrentConstraint:Ae(this.recurrentConstraint),biasConstraint:Ae(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}}Kc.className="LSTMCell",tt(Kc);class Wy extends pr{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Kc(t),super(t)}call(t,e){return G(()=>{this.cell.dropoutMask!=null&&(Mt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Mt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,r=e==null?null:e.training,o=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:o})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}Wy.className="LSTM",tt(Wy);class _f extends qc{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return G(()=>{t=t;let s=t.slice(1);const r=[];for(const i of this.cells.slice().reverse())Array.isArray(i.stateSize)?r.push(s.splice(0,i.stateSize.length)):r.push(s.splice(0,1));r.reverse();const o=[];let a;for(let i=0;i<this.cells.length;++i){const l=this.cells[i];s=r[i],i===0?a=[t[0]].concat(s):a=[a[0]].concat(s),a=l.call(a,e),o.push(a.slice(1))}s=[];for(const i of o.slice().reverse())s.push(...i);return[a[0]].concat(s)})}build(t){df(t)&&(t=t[0]),t=t;let e;this.cells.forEach((s,r)=>{no(`RNNCell_${r}`,()=>{s.build(t),Array.isArray(s.stateSize)?e=s.stateSize[0]:e=s.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e=o=>({className:o.getClassName(),config:o.getConfig()}),r={cells:this.cells.map(e)};return Object.assign(Object.assign({},t),r)}static fromConfig(t,e,s={}){const r=[];for(const o of e.cells)r.push(Ss(o,s));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.cells)e.push(...s.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return hf(t)}setWeights(t){const e=[];for(const s of this.cells){const r=s.weights.length,o=t.splice(r);for(let a=0;a<s.weights.length;++a)e.push([s.weights[a],o[a]])}pf(e)}}_f.className="StackedRNNCells",tt(_f);function fr(n){const{ones:t,rate:e,training:s=!1,count:r=1,dropoutFunc:o}=n,a=()=>o!=null?o(t(),e):mx(t(),e),i=()=>Gu(a,t,s);return!r||r<=1?ms(i().clone()):Array(r).fill(void 0).map(i).map(c=>ms(c.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var vD=function(n,t){var e={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&t.indexOf(s)<0&&(e[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(n);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(e[s[r]]=n[s[r]]);return e};class Vy extends pr{constructor(t){if(t.unroll)throw new Ft("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Ft("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new Re({ndim:5})]}call(t,e){return G(()=>{if(this.cell.dropoutMask!=null&&(Mt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Mt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new D("ConvRNN2D cell does not support constants");const s=e==null?null:e.mask,r=e==null?null:e.training,o=e==null?null:e.initialState;return super.call(t,{mask:s,training:r,initialState:o})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return G(()=>{const{stateSize:e}=this.cell,s=t.shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)],a=Pe(o);return Array.isArray(e)?Array(e.length).fill(a):[a]})}resetStates(t,e=!1){G(()=>{if(!this.stateful)throw new Is("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)];if(s[0]==null)throw new D("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Pe(o)):this.states_=[Pe(o)];else if(t==null)Mt(this.states_),this.keptStates!=null&&(Mt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Pe(o)):this.states_[0]=Pe(o);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new D(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):Mt(this.states_);for(let i=0;i<this.states_.length;++i){const l=t[i],c=o;if(!Kt(l.shape,c))throw new D(`State ${i} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${l.shape}`);this.states_[i]=l}}this.states_=this.states_.map(i=>ms(i.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:s,kernelSize:r,padding:o,strides:a,dilationRate:i}=this.cell,l=e==="channelsFirst",c=t[l?3:2],u=t[l?4:3],d=ds(c,r[0],o,a[0],i[0]),h=ds(u,r[1],o,a[1],i[1]);return[...t.slice(0,2),...l?[s,d,h]:[d,h,s]]}}Vy.className="ConvRNN2D";class Ef extends Kc{constructor(t){const{filters:e,kernelSize:s,strides:r,padding:o,dataFormat:a,dilationRate:i}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,Be(this.filters,"filters"),this.kernelSize=ui(s,2,"kernelSize"),this.kernelSize.forEach(l=>Be(l,"kernelSize")),this.strides=ui(r||1,2,"strides"),this.strides.forEach(l=>Be(l,"strides")),this.padding=o||"valid",Mn(this.padding),this.dataFormat=a||"channelsLast",$e(this.dataFormat),this.dilationRate=ui(i||1,2,"dilationRate"),this.dilationRate.forEach(l=>Be(l,"dilationRate"))}build(t){var e;t=Ht(t);const s=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[s]==null)throw new D(`The channel dimension of the input should be defined. Found ${t[s]}`);const r=t[s],o=4,a=this.kernelSize.concat([r,this.filters*o]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const c=this.biasInitializer,u=this.filters;l=new(e=class extends jn{apply(h,p){const f=c.apply([u]),m=Ls([u]),g=c.apply([u*2]);return tf([f,m,g])}},e.className="CustomInit",e)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return G(()=>{if(t.length!==3)throw new D(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training||!1,r=t[0],o=t[1],a=t[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=fr({ones:()=>Vn(r),rate:this.dropout,training:s,count:i,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,c=(X,Z,Q)=>!Z||!Z[Q]?X:A(Z[Q],X);let u=c(r,l,0),d=c(r,l,1),h=c(r,l,2),p=c(r,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=fr({ones:()=>Vn(o),rate:this.recurrentDropout,training:s,count:i,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let m=c(o,f,0),g=c(o,f,1),b=c(o,f,2),x=c(o,f,3);const y=3,[w,I,C,S]=Dn(this.kernel.read(),i,y),[T,v,$,k]=this.useBias?Dn(this.bias.read(),i):[null,null,null,null];u=this.inputConv(u,w,T,this.padding),d=this.inputConv(d,I,v,this.padding),h=this.inputConv(h,C,$,this.padding),p=this.inputConv(p,S,k,this.padding);const[R,F,B,M]=Dn(this.recurrentKernel.read(),i,y);m=this.recurrentConv(m,R),g=this.recurrentConv(g,F),b=this.recurrentConv(b,B),x=this.recurrentConv(x,M);const z=this.recurrentActivation.apply(et(u,m)),j=this.recurrentActivation.apply(et(d,g)),V=et(A(j,a),A(z,this.activation.apply(et(h,b)))),q=A(this.recurrentActivation.apply(et(p,x)),this.activation.apply(V));return[q,q,V]})}getConfig(){const t=super.getConfig(),{units:e}=t,s=vD(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},s),r)}inputConv(t,e,s,r){const o=Vr(t,e,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?us(o,s,this.dataFormat):o}recurrentConv(t,e){return Vr(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}Ef.className="ConvLSTM2DCell",tt(Ef);class Uy extends Vy{constructor(t){const e=new Ef(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}}Uy.className="ConvLSTM2D",tt(Uy);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Rf extends Lt{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;const e=t.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?e[r]:this.noiseShape[r]);return s}call(t,e){return G(()=>{this.invokeCallHook(t,e);const s=$t(t);if(0<this.rate&&this.rate<1){const r=e.training==null?!1:e.training,o=this.getNoiseShape(s);return Gu(()=>mx(s,this.rate,o,this.seed),()=>s,r)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Rf.className="Dropout",tt(Rf);class Gy extends Rf{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Gy.className="SpatialDropout1D",tt(Gy);class Af extends Lt{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Be(this.units,"units"),this.activation=hr(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=fe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=fe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=De(t.kernelConstraint),this.biasConstraint=De(t.biasConstraint),this.kernelRegularizer=me(t.kernelRegularizer),this.biasRegularizer=me(t.biasRegularizer),this.activityRegularizer=me(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=Ht(t);const e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=Ht(t);const e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return G(()=>{this.invokeCallHook(t,e);const s=$t(t),r=ax(this.activation.getClassName());let o;return r!=null?o=$s(s,this.kernel.read(),r,this.bias?this.bias.read():null):(o=$s(s,this.kernel.read()),this.bias!=null&&(o=us(o,this.bias.read())),this.activation!=null&&(o=this.activation.apply(o))),o})}getConfig(){const t={units:this.units,activation:dr(this.activation),useBias:this.useBias,kernelInitializer:xe(this.kernelInitializer),biasInitializer:xe(this.biasInitializer),kernelRegularizer:re(this.kernelRegularizer),biasRegularizer:re(this.biasRegularizer),activityRegularizer:re(this.activityRegularizer),kernelConstraint:Ae(this.kernelConstraint),biasConstraint:Ae(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Af.className="Dense",tt(Af);class Hy extends Lt{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Ht(t);for(const e of t.slice(1))if(e==null)throw new D(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],ur(t,1)]}call(t,e){return G(()=>{this.invokeCallHook(t,e);let s=$t(t);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let o=2;o<s.rank;++o)r.push(o);r.push(1),s=Vt(s,r)}return nA(s)})}getConfig(){const t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Hy.className="Flatten",tt(Hy);class jy extends Lt{constructor(t){super(t),this.supportsMasking=!0,this.activation=hr(t.activation)}call(t,e){return G(()=>{this.invokeCallHook(t,e);const s=$t(t);return this.activation.apply(s)})}getConfig(){const t={activation:dr(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}jy.className="Activation",tt(jy);class qy extends Lt{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return G(()=>(t=$t(t),tA(t,this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}qy.className="RepeatVector",tt(qy);class Ky extends Lt{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){const s="Total size of new array must be unchanged.",r=e.slice();let o=1,a=null;for(let l=0;l<r.length;++l){const c=r[l];if(this.isUnknown(c))if(a===null)a=l;else throw new D("Can only specifiy one unknown dimension.");else o*=c}const i=ur(t);if(a!==null){if(o===0||i%o!==0)throw new D(s);r[a]=i/o}else if(i!==o)throw new D(s);return r}computeOutputShape(t){let e=!1;for(let s=0;s<t.length;++s)if(this.isUnknown(t[s])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return G(()=>{this.invokeCallHook(t,e);const s=$t(t),r=s.shape,o=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return W(s,o)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Ky.className="Reshape",tt(Ky);class Xy extends Lt{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=as(1,t.dims.length+1);if(!Kt(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Re({ndim:this.dims.length+1})]}computeOutputShape(t){t=Ht(t);const e=t.slice();return this.dims.forEach((s,r)=>{e[r+1]=t[s]}),e}call(t,e){return Vt($t(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Xy.className="Permute",tt(Xy);class Yy extends Lt{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const s=$t(t);return Mh(Fu(s,this.maskValue),-1)}call(t,e){return G(()=>{this.invokeCallHook(t,e);const s=$t(t),a=Mh(Fu(s,this.maskValue),-1,!0);return A(s,it(a,s.dtype))})}}Yy.className="Masking",tt(Yy);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Zy extends Lt{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Zt(t.inputLength))}this.inputDim=t.inputDim,Be(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Be(this.outputDim,"outputDim"),this.embeddingsInitializer=fe(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=me(t.embeddingsRegularizer),this.activityRegularizer=me(t.activityRegularizer),this.embeddingsConstraint=De(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return G(()=>this.maskZero?(t=$t(t),Fu(t,Wt(t))):null)}computeOutputShape(t){if(t=Ht(t),this.inputLength==null)return[...t,this.outputDim];const e=Zt(this.inputLength);if(e.length!==t.length-1)throw new D(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let s=0;for(let r=0;r<e.length;++r){const o=e[r],a=t[r+1];if(o!=null&&a!=null&&o!==a)throw new D(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);o==null&&(e[s]=a),s++}}return[t[0],...e,this.outputDim]}call(t,e){return G(()=>{this.invokeCallHook(t,e);let s=$t(t);s.dtype!=="int32"&&(s=Cs(s,"int32"));const r=fx(this.embeddings.read(),W(s,[s.size]));return W(r,Ht(this.computeOutputShape(s.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:xe(this.embeddingsInitializer),embeddingsRegularizer:re(this.embeddingsRegularizer),activityRegularizer:re(this.activityRegularizer),embeddingsConstraint:Ae(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}Zy.className="Embedding",tt(Zy);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class oo extends Lt{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Ft}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;const s=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const o=t[t.length-e.length+r],a=e[r];if(o==null||a==null||o<0||a<0)s.push(null);else if(o===1)s.push(a);else if(a===1)s.push(o);else{if(o!==a)throw new D("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));s.push(o)}}return s}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Ht(t)]),t=t,t.length<2)throw new D(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const o of t)o!=null&&o[0]!==null&&e.push(o[0]);if(e=ir(e),e.length>1)throw new D(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let s=t[0]==null?null:t[0].slice(1);for(let o=1;o<t.length;++o){const a=t[o]==null?null:t[o].slice(1);s=this.computeElementwiseOpOutputShape(s,a)}const r=t.map(o=>o.length);t.indexOf(null)===-1&&ir(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return G(()=>{if(t=t,this.reshapeRequired){const s=[],r=t.map(o=>o.rank);if(r.indexOf(null)===-1){const o=lr(r);for(let a of t){const i=a.rank;for(let l=0;l<o-i;++l)a=Vu(a,1);s.push(a)}return this.mergeFunction(s)}else{let o=!1;for(const l of t){const c=l.rank;if(c==null){const u=l.shape,d=u[0],h=u.slice(1).concat([d]);let p=W(l,[d].concat(ur(u.slice(1))));p=Vt(p,[1,0]),p=W(p,h),s.push(p),o=!0}else if(c>1){const u=as(1,c).concat([0]);s.push(Vt(l,u)),o=!0}else s.push(l)}let a=this.mergeFunction(s);const i=a.rank;if(o){if(i==null){const l=a.shape,c=l.length,u=l[c-1],d=[u].concat(l.slice(0,l.length-1));a=W(Vt(W(a,[-1,u]),[1,0]),d)}else if(i>1){const l=[i-1].concat(as(0,i-1));a=Vt(a,l)}}return a}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let r=1;r<t.length;++r){const o=t[r]==null?null:t[r].slice(1);e=this.computeElementwiseOpOutputShape(e,o)}let s=[];for(const r of t)r!=null&&r[0]!==null&&s.push(r[0]);return s=ir(s),s.length===1?e=s.concat(e):e=[null].concat(e),e}computeMask(t,e){return G(()=>{if(e==null)return null;if(!Array.isArray(e))throw new D("`mask` should be an Array");if(!Array.isArray(t))throw new D("`inputs` should be an Array");if(e.length!==t.length)throw new D(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(r=>r==null))return null;e=e.map(r=>r==null?r:dn(r,0));let s=e[0];for(let r=1;r<e.length-1;++r)s=Os(s,e[r]);return s})}}class Jy extends oo{constructor(t){super(t)}mergeFunction(t){return G(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=et(e,t[s]);return e})}}Jy.className="Add",tt(Jy);class Qy extends oo{constructor(t){super(t)}mergeFunction(t){return G(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=A(e,t[s]);return e})}}Qy.className="Multiply",tt(Qy);class tw extends oo{constructor(t){super(t)}mergeFunction(t){return G(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=et(e,t[s]);return A(1/t.length,e)})}}tw.className="Average",tt(tw);class ew extends oo{constructor(t){super(t)}mergeFunction(t){return G(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=rr(e,t[s]);return e})}}ew.className="Maximum",tt(ew);class nw extends oo{constructor(t){super(t)}mergeFunction(t){return G(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=ei(e,t[s]);return e})}}nw.className="Minimum",tt(nw);class sw extends oo{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new D("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const r of t)if(r!=null){e=!1;break}if(e)return;const s=[];for(let r=0;r<t.length;++r){const o=t[r].slice();o.splice(this.axis,1);let a=!1;for(const i of s)if(Kt(i,o)){a=!0;break}a||s.push(o)}if(s.length>1)throw new D("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return G(()=>tf(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new D("A `Concatenate` layer should be called on a list of inputs.");const e=t,s=e[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const o of e.slice(1)){if(s[r]==null||o[r]==null){s[r]=null;break}s[r]+=o[r]}return s}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new D("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new D("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new D(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return G(()=>{let s=!0;if(e.forEach(a=>{if(a!=null){s=!1;return}}),s)return null;const r=[];for(let a=0;a<t.length;++a)e[a]==null?r.push(it(Vn(t[a]),"bool")):e[a].rank<t[a].rank?r.push(dn(e[a],-1)):r.push(e[a]);const o=nn(r,this.axis);return Ng(o,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}sw.className="Concatenate",tt(sw);function Qu(n,t){for(;n<0;)n+=t;return n}function SD(n,t,e){if(n.shape.length>3||t.shape.length>3)throw new Ft("batchDot is not implemented for tensors of 4D or higher rank yet");if(N(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),N(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),n.dtype==="complex64"||t.dtype==="complex64")throw new Ft("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=t.shape.length;e==null&&(e=[s-1,r-2]);const o=e;return G(()=>{let a;if(s>r){a=s-r;const l=[];for(let c=0;c<a;++c)l.push(1);t=W(t,t.shape.concat(l))}else if(r>s){a=r-s;const l=[];for(let c=0;c<a;++c)l.push(1);n=W(n,n.shape.concat(l))}else a=0;let i;if(n.shape.length===2&&t.shape.length===2)o[0]===o[1]?i=gt(A(n,t),o[0]):i=gt(A(Vt(n,[1,0]),t),o[1]);else{const l=o[0]!==n.shape.length-1,c=o[1]===t.shape.length-1;i=Xt(n,t,l,c)}if(a>0){let l;s>r?l=s+r-3:l=s-1;const c=[];for(let u=l;u<l+a;++u)c.push(u);i=Ou(i,c)}return i.shape.length===1&&(i=dn(i,1)),i})}class rw extends oo{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){N(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],s=t[1];if(e.length>3||s.length>3)throw new Ft("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,s);if(e[r[0]]!==s[r[1]])throw new D(`Dimension incompatibility: ${e[r[0]]} !== ${s[r[1]]}`)}mergeFunction(t){if(t.length!==2)throw new D(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],s=t[1],r;return Array.isArray(this.axes)?r=this.axes.map((o,a)=>Qu(o,t[a].shape.length)):r=[Qu(this.axes,e.shape.length),Qu(this.axes,s.shape.length)],this.normalize&&(e=Oc(e,r[0]),s=Oc(s,r[1])),SD(e,s,r)}interpretAxes(t,e){let s;return Array.isArray(this.axes)?s=this.axes:s=[Qu(this.axes,t.length),Qu(this.axes,e.length)],s}computeOutputShape(t){N(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),s=t[1].slice();if(e.length>3||s.length>3)throw new Ft("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,s);e.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const o=e.concat(s);return o.length===1&&o.push(1),o}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}rw.className="Dot",tt(rw);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ow extends Lt{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return G(()=>{this.invokeCallHook(t,e);const s=$t(t);return Gu(()=>et(Ec(s.shape,0,this.stddev),s),()=>s,e.training||!1)})}}ow.className="GaussianNoise",tt(ow);class aw extends Lt{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return G(()=>{this.invokeCallHook(t,e);const s=$t(t);return this.rate>0&&this.rate<1?Gu(()=>{const o=Math.sqrt(this.rate/(1-this.rate));return A(s,Ec(s.shape,1,o))},()=>s,e.training||!1):s})}}aw.className="GaussianDropout",tt(aw);class iw extends Lt{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||$t(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return G(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(t);return Gu(()=>{const o=$t(t),i=-1.6732632423543772*1.0507009873554805;let l=Gr(jr(s),this.rate);l=Cs(l,"float32");const c=((1-this.rate)*(1+this.rate*i**2))**-.5,u=-c*i*this.rate,d=et(A(o,l),A(et(l,-1),i));return et(A(d,c),u)},()=>$t(t),e.training||!1)}return t})}}iw.className="AlphaDropout",tt(iw);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function tl(n,t,e,s,r,o=.001){let a;if(n.rank===2)a=Rv(n,t,e,s,r,o);else if(n.rank===3)a=Dv(n,t,e,s,r,o);else if(n.rank===4)a=Mv(n,t,e,s,r,o);else throw new Ft(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return a}function ND(n,t,e,s,r=.001){return G(()=>{const o=Zh(n,s),a=o.mean,i=o.variance;return[tl(n,a,i,e,t,r),a,i]})}function TD(n,t,e,s,r=.001){return G(()=>{const o=Zh(n,s),a=o.mean,i=o.variance,l=[];for(const f of as(0,n.rank))s.indexOf(f)!==-1?l.push(1):l.push(n.shape[f]);const c=W(a,l),u=W(i,l),d=t==null?null:W(t,l),h=e==null?null:W(e,l);return[tl(n,c,u,h,d,r),a,i]})}function _D(n,t,e,s,r=.001){return Kt(s.slice().sort(),as(0,n.rank-1))?ND(n,t,e,s,r):TD(n,t,e,s,r)}class uw extends Lt{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=fe(t.betaInitializer||"zeros"),this.gammaInitializer=fe(t.gammaInitializer||"ones"),this.movingMeanInitializer=fe(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=fe(t.movingVarianceInitializer||"ones"),this.betaConstraint=De(t.betaConstraint),this.gammaConstraint=De(t.gammaConstraint),this.betaRegularizer=me(t.betaRegularizer),this.gammaRegularizer=me(t.gammaRegularizer)}build(t){t=Ht(t);const e=this.axis>=0?this.axis:this.axis+t.length,s=t[e];if(s==null)throw new D(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new Re({ndim:t.length,axes:{[e]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return G(()=>{const s=e.training==null?!1:e.training,r=$t(t),o=r.shape,a=o.length,i=as(0,a),l=this.axis>=0?this.axis:this.axis+a;i.splice(l,1);const c=Qr(1,a);c[l]=o[l];const u=i.slice();u.sort();const d=!Kt(u,as(0,a).slice(0,a-1)),h=()=>{if(d){const x=W(this.movingMean.read(),c),y=W(this.movingVariance.read(),c),w=this.center?W(this.beta.read(),c):null,I=this.scale?W(this.gamma.read(),c):null;return tl(r,x,y,w,I,this.epsilon)}else return tl(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return h();const[p,f,m]=_D(r,this.gamma.read(),this.beta.read(),i,this.epsilon),g=(x,y,w)=>{G(()=>{const I=1-w,C=x.read(),S=A(ft(C,y),I);x.write(ft(C,S))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:xe(this.betaInitializer),gammaInitializer:xe(this.gammaInitializer),movingMeanInitializer:xe(this.movingMeanInitializer),movingVarianceInitializer:xe(this.movingVarianceInitializer),betaRegularizer:re(this.betaRegularizer),gammaRegularizer:re(this.gammaRegularizer),betaConstraint:Ae(this.betaConstraint),gammaConstraint:Ae(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}uw.className="BatchNormalization",tt(uw);class lw extends Lt{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=fe(t.betaInitializer||"zeros"),this.gammaInitializer=fe(t.gammaInitializer||"ones"),this.betaRegularizer=me(t.betaRegularizer),this.gammaRegularizer=me(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=Ht(t);const e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let o=0;o<this.axis.length;++o)this.axis[o]<0&&(this.axis[o]+=e);for(const o of this.axis)if(o<0||o>=e)throw new Error(`Invalid axis: ${o}`);if(this.axis.length!==ir(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(o=>t[o]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(t,e){const s=$t(t),r=s.shape,o=r.length;return G(()=>{let{mean:i,variance:l}=Zh(s,this.axis,!0);const c=Qr(1,o);for(const m of this.axis)c[m]=r[m];const u=m=>m!=null&&m.shape.length!==o?W(m,c):m;let d=this.scale?u(this.gamma.read()):null,h=this.center?u(this.beta.read()):null;const p=[],f=[];for(let m=0;m<o;++m)this.axis.indexOf(m)!==-1?(p.push(r[m]),f.push(1)):(p.push(1),f.push(r[m]));return i=Rn(i,p),l=Rn(l,p),d!=null&&(d=Rn(d,f)),h!=null&&(h=Rn(h,f)),tl(s,i,l,h,d,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:xe(this.betaInitializer),gammaInitializer:xe(this.gammaInitializer),betaRegularizer:re(this.betaRegularizer),gammaRegularizer:re(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}lw.className="LayerNormalization",tt(lw);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ED(n,t,e){return G(()=>{if(n.rank!==4)throw new D(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new D("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=is()),e!=="channelsLast"&&e!=="channelsFirst")throw new D(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return e==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],Jh(n,s)})}class cw extends Lt{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?is():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new D(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,s;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],s=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new D(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new D(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);s=t.padding[1]}this.padding=[e,s]}this.inputSpec=[new Re({ndim:4})]}computeOutputShape(t){t=Ht(t);let e,s;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?s=t[3]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],t[1],e,s]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?s=t[2]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],e,s,t[3]])}call(t,e){return G(()=>ED($t(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}cw.className="ZeroPadding2D",tt(cw);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Xc(n,t,e,s,r,o){return G(()=>{$e(r),ux(o),Mn(s),e==null&&(e=[1,1]),s==null&&(s="valid"),r==null&&(r=is()),o==null&&(o="max"),n=Sf(n,r);let a;const i=s==="same"?"same":"valid";return o==="max"?a=Yh(n,t,e,i):a=Ph(n,t,e,i),r==="channelsFirst"&&(a=Vt(a,[0,3,1,2])),a})}function dw(n,t,e,s,r,o){return G(()=>{$e(r),ux(o),Mn(s),e==null&&(e=[1,1,1]),s==null&&(s="valid"),r==null&&(r=is()),o==null&&(o="max"),n=Ty(n,r);let a;const i=s==="same"?"same":"valid";return o==="max"?a=w2(n,t,e,i):a=Iv(n,t,e,i),r==="channelsFirst"&&(a=Vt(a,[0,4,1,2,3])),a})}class hw extends Lt{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new D(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(Be(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new D(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);Be(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,Mn(this.padding),this.inputSpec=[new Re({ndim:3})]}computeOutputShape(t){t=Ht(t);const e=ds(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return G(()=>{this.invokeCallHook(t,e),t=Vu($t(t),2);const s=this.poolingFunction($t(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ou(s,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class pw extends hw{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return $e(o),Mn(r),Xc(t,e,s,r,o,"max")}}pw.className="MaxPooling1D",tt(pw);class fw extends hw{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return $e(o),Mn(r),Xc(t,e,s,r,o,"avg")}}fw.className="AveragePooling1D",tt(fw);class mw extends Lt{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new D(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Be(this.poolSize,"poolSize"),Be(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,$e(this.dataFormat),Mn(this.padding),this.inputSpec=[new Re({ndim:4})]}computeOutputShape(t){t=Ht(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=ds(e,this.poolSize[0],this.padding,this.strides[0]),s=ds(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s]:[t[0],e,s,t[3]]}call(t,e){return G(()=>(this.invokeCallHook(t,e),this.poolingFunction($t(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class gw extends mw{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return $e(o),Mn(r),Xc(t,e,s,r,o,"max")}}gw.className="MaxPooling2D",tt(gw);class bw extends mw{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return $e(o),Mn(r),Xc(t,e,s,r,o,"avg")}}bw.className="AveragePooling2D",tt(bw);class xw extends Lt{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new D(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Be(this.poolSize,"poolSize"),Be(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,$e(this.dataFormat),Mn(this.padding),this.inputSpec=[new Re({ndim:5})]}computeOutputShape(t){t=Ht(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],r=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=ds(e,this.poolSize[0],this.padding,this.strides[0]),s=ds(s,this.poolSize[1],this.padding,this.strides[1]),r=ds(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s,r]:[t[0],e,s,r,t[4]]}call(t,e){return G(()=>(this.invokeCallHook(t,e),this.poolingFunction($t(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class yw extends xw{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return $e(o),Mn(r),dw(t,e,s,r,o,"max")}}yw.className="MaxPooling3D",tt(yw);class ww extends xw{constructor(t){super(t)}poolingFunction(t,e,s,r,o){return $e(o),Mn(r),dw(t,e,s,r,o,"avg")}}ww.className="AveragePooling3D",tt(ww);class Iw extends Lt{constructor(t){super(t),this.inputSpec=[new Re({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Ft}}class kw extends Iw{constructor(t){super(t||{})}call(t,e){return G(()=>{const s=$t(t);return Ce(s,1)})}}kw.className="GlobalAveragePooling1D",tt(kw);class Cw extends Iw{constructor(t){super(t||{})}call(t,e){return G(()=>{const s=$t(t);return rs(s,1)})}}Cw.className="GlobalMaxPooling1D",tt(Cw);class $w extends Lt{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,$e(this.dataFormat),this.inputSpec=[new Re({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Ft}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class vw extends $w{call(t,e){return G(()=>{const s=$t(t);return this.dataFormat==="channelsLast"?Ce(s,[1,2]):Ce(s,[2,3])})}}vw.className="GlobalAveragePooling2D",tt(vw);class Sw extends $w{call(t,e){return G(()=>{const s=$t(t);return this.dataFormat==="channelsLast"?rs(s,[1,2]):rs(s,[2,3])})}}Sw.className="GlobalMaxPooling2D",tt(Sw);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Nw extends Lt{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,s={}){const r=e.layer,o=Ss(r,s);delete e.layer;const a={layer:o};return Object.assign(a,e),new t(a)}}class Tw extends Nw{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=Ht(t),t.length<3)throw new D(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=Ht(t);const e=[t[0]].concat(t.slice(2)),s=this.layer.computeOutputShape(e),r=t[1];return[s[0],r].concat(s.slice(1))}call(t,e){return G(()=>(t=$t(t),Py((a,i)=>[$t(this.layer.call(a,e)),[]],t,[],!1,null,null,!1,!0)[1]))}}Tw.className="TimeDistributed",tt(Tw);function RD(n){eo(XR,"BidirectionalMergeMode",n)}const AD="concat";class _w extends Nw{constructor(t){super(t);const e=t.layer.getConfig(),s={};s.className=t.layer.getClassName(),s.config=e,this.forwardLayer=Ss(s),e.goBackwards=e.goBackwards!==!0;const r={};if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=Ss(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?AD:t.mergeMode,RD(this.mergeMode),t.weights)throw new Ft("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,s=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,s)),this.backwardLayer.setWeights(t.slice(s))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let s,r,o;return this.returnState&&(o=e.slice(1)),s=e[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(o).concat(o.slice()):[s].concat(o).concat(o.slice()):pn(r)}apply(t,e){let s=e==null?null:e.initialState,r=e==null?null:e.constants;e==null&&(e={});const o=Ly(t,s,r,this.numConstants);if(t=o.inputs,s=o.initialState,r=o.constants,Array.isArray(t)&&(s=t.slice(1),t=t[0]),(s==null||s.length===0)&&r==null)return super.apply(t,e);const a=[],i=[];if(s!=null){const c=s.length;if(c%2>0)throw new D("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=s,a.push(...s);const u=s.map(d=>new Re({shape:d.shape}));this.forwardLayer.stateSpec=u.slice(0,c/2),this.backwardLayer.stateSpec=u.slice(c/2),i.push(...u)}if(r!=null)throw new Ft("Support for constants in Bidirectional layers is not implemented yet.");const l=a[0]instanceof vs;for(const c of a)if(c instanceof vs!==l)throw new D("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const c=[t].concat(a),u=this.inputSpec.concat(i),d=this.inputSpec;this.inputSpec=u;const h=super.apply(c,e);return this.inputSpec=d,h}else return super.apply(t,e)}call(t,e){return G(()=>{const s=e.initialState;let r,o;if(s==null)r=this.forwardLayer.call(t,e),o=this.backwardLayer.call(t,e);else{const l=s.slice(0,s.length/2),c=s.slice(s.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:l})),o=this.backwardLayer.call(t,Object.assign(e,{initialState:c}))}let a;this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(o.slice(1))),r=r[0],o=o[0]),this.returnSequences&&(o=qr(o,1));let i;return this.mergeMode==="concat"?i=tf([r,o]):this.mergeMode==="sum"?i=et(r,o):this.mergeMode==="ave"?i=A(.5,et(r,o)):this.mergeMode==="mul"?i=A(r,o):this.mergeMode==null&&(i=[r,o]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){no(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),no(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[e,e]:s=e:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const o=this.forwardLayer.states.map(a=>null);return Array.isArray(s)?s.concat(o).concat(o):[s].concat(o).concat(o)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const s=Ss(e.layer);if(delete e.layer,e.numConstants!=null)throw new Ft("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=s,new t(r)}}_w.className="Bidirectional",tt(_w);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ew extends Lt{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return G(()=>(t=$t(t),t.dtype!=="float32"&&(t=Cs(t,"float32")),et(A(t,this.scale),this.offset)))}}Ew.className="Rescaling",tt(Ew);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:DD,cropAndResize:FD}=zs;class Rw extends Lt{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,e,s,r,o,a,i,l){return G(()=>{let c,u=!1;const d=e/a,h=s/i,p=(r+e)/a,f=(o+s)/i,m=[d,h,p,f],g=[];t.rank===3?(u=!0,c=ys([t])):c=t;for(let I=0;I<c.shape[0];I++)g.push(m);const b=Ka(g,[g.length,4]),x=Mu(0,g.length,1,"int32"),w=FD(c,b,x,[r,o],"nearest");return Cs(u?$t(Kr(w)):w,l)})}upsize(t,e,s,r){return G(()=>{const o=DD(t,[e,s]);return Cs(o,r)})}call(t,e){return G(()=>{const s=$t(t),r=s.dtype,o=s.shape,a=o[o.length-3],i=o[o.length-2];let l=0;a!==this.height&&(l=Math.floor((a-this.height)/2));let c=0;return i!==this.width&&(c=Math.floor((i-this.width)/2),c===0&&(c=1)),l>=0&&c>=0?this.centerCrop(s,l,c,this.height,this.width,a,i,r):this.upsize(t,this.height,this.width,r)})}getConfig(){const t={height:this.height,width:this.width},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=Ht(t);const e=t.length-3,s=t.length-2;return t[e]=this.height,t[s]=this.width,t}}Rw.className="CenterCrop",tt(Rw);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function MD(n,t,e,s){let r=$t(n);if(r.dtype!=="int32"&&(r=Cs(r,"int32")),t==="int")return r;const o=r.shape;if(r.rank===0&&(r=dn(r,-1)),t==="oneHot"&&r.shape[r.shape.length-1]!==1&&(r=dn(r,-1)),r.rank>2)throw new D(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${o} which would result in output rank ${r.rank}.`);const a=["multiHot","oneHot"].includes(t),i=r;let l;if(typeof s<"u"&&t==="count"?l=Dg(i,s,e,a):l=Dg(i,[],e,a),t!=="tfIdf")return l;if(s)return A(l,s);throw new D("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Aw extends Lt{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return t=Ht(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return G(()=>{t=$t(t),t.dtype!=="int32"&&(t=Cs(t,"int32"));let s;if(typeof e.countWeights<"u"){if(this.outputMode!=="count")throw new D(`countWeights is not used when outputMode !== count.
              Received countWeights=${e.countWeights}`);s=$t(e.countWeights)}const r=rs(t),o=Jl(t),a=An(this.numTokens,r).bufferSync().get(0),i=Gr(o,0).bufferSync().get(0);if(!(a&&i))throw new D(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return MD(t,this.outputMode,this.numTokens,s)})}}Aw.className="CategoryEncoding",tt(Aw);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const OD=["bilinear","nearest"],Dw=new Set(OD);class Fw extends Lt{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(Dw.has(t.interpolation))this.interpolation=t.interpolation;else throw new D(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!t.cropToAspectRatio}computeOutputShape(t){t=Ht(t);const e=t[2];return[this.height,this.width,e]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return G(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return zs.resizeBilinear(t,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return zs.resizeNearestNeighbor(t,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Dw]} are supported`)})}}Fw.className="Resizing",tt(Fw);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Mw{constructor(t){this.seed=t}next(){if(this.seed!==void 0)return this.seed++}}Mw.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ow extends Lt{constructor(t){super(t),this.randomGenerator=new Mw(t.seed)}getConfig(){const t={seed:this.randomGenerator.seed},e=super.getConfig();return Object.assign(t,e),t}}Ow.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const LD=["bilinear","nearest"],Lw=new Set(LD);class Pw extends Ow{constructor(t){super(t);const{factor:e,interpolation:s="bilinear"}=t;if(this.factor=e,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new D(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new D(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new D(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(Lw.has(s))this.interpolation=s;else throw new D(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const t={factor:this.factor,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=Ht(t);const e=t[2];return[this.imgHeight,-1,e]}call(t,e){return G(()=>{const s=$t(t);this.imgHeight=s.shape[s.shape.length-3];const r=s.shape[s.shape.length-2];this.widthFactor=jr([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let o=this.widthFactor.dataSync()[0]*r;o=Math.round(o);const a=[this.imgHeight,o];switch(this.interpolation){case"bilinear":return zs.resizeBilinear(t,a);case"nearest":return zs.resizeNearestNeighbor(t,a);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...Lw]} are supported`)}})}}Pw.className="RandomWidth",tt(Pw);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Yc(n){return new Af(n)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */H().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Bw;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(Bw||(Bw={}));var zw;(function(n){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(zw||(zw={}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Ww;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(Ww||(Ww={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mt(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&N(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PD=lb;class Zc extends yl{nextDataId(){return Zc.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new zd(this,es())}write(t,e,s){this.firstUse&&(this.firstUse=!1,H().get("IS_NODE")&&Nn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:t,dtype:s,refCount:1}),r}makeTensorInfo(t,e,s){let r;if(e==="string"&&s!=null&&s.length>0&&Ni(s[0])){const o=s.map(a=>Qs(a));r=this.write(o,t,e)}else r=this.write(s,t,e);return{dataId:r,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){const e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){const e=this.data.get(t);e.refCount--}}move(t,e,s,r,o){this.data.set(t,{values:e,dtype:r,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:s}=this.data.get(t);if(e==="complex64"){const r=this.readSync(s.real.dataId),o=this.readSync(s.imag.dataId);return Ws(r,o)}return IC(this.data.get(t).values,e)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const s=e.map(r=>tr(r));return Ot(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ot(t.shape,t.dtype,e)}makeOutput(t,e,s){return es().makeTensorFromTensorInfo(this.makeTensorInfo(e,s,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(t);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=Xe();return t(),{kernelMs:Xe()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){mt([t],"where");const e=this.readSync(t.dataId);return PD(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Zc.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vw(n){const t=new Float32Array(n.length);for(let e=0;e<n.length;++e)t[e]=Math.abs(n[e]);return t}const BD={kernelName:Ti,backendName:"cpu",kernelFunc:n=>{const{x:t}=n.inputs,e=n.backend;mt(t,"abs");let s=new Float32Array(L(t.shape));const r=e.data.get(t.dataId).values;return s=Vw(r),e.makeOutput(s,t.shape,t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ve(n){return(t,e,s,r,o)=>{const a=vt(t,e),i=a.length,l=pt(a),c=L(a),u=qe(o,c),d=t.length,h=e.length,p=pt(t),f=pt(e),m=Qa(t,a),g=Qa(e,a);if(m.length+g.length===0)for(let b=0;b<u.length;++b)u[b]=n(s[b%s.length],r[b%r.length]);else for(let b=0;b<u.length;++b){const x=So(b,i,l),y=x.slice(-d);m.forEach(S=>y[S]=0);const w=fs(y,d,p),I=x.slice(-h);g.forEach(S=>I[S]=0);const C=fs(I,h,f);u[b]=n(s[w],r[C])}return[u,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function In(n){const{inputs:t,backend:e}=n,{real:s,imag:r}=t,o=e.data.get(s.dataId).values,a=e.data.get(r.dataId).values,i=e.makeTensorInfo(s.shape,"complex64"),l=e.data.get(i.dataId);return l.complexTensorInfos={real:e.makeTensorInfo(s.shape,"float32",o),imag:e.makeTensorInfo(r.shape,"float32",a)},i}const zD={kernelName:Jd,backendName:"cpu",kernelFunc:In};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jc(n,t,e="float32"){if(e==="complex64"){const r=Jc(n,t,"float32"),o=Jc(n,t,"float32");return In({inputs:{real:r,imag:o},backend:n})}const s=Ke(L(t),e);return n.makeTensorInfo(t,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ts(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const WD={kernelName:ea,backendName:"cpu",kernelFunc:Ts};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ao(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.data.get(s.dataId).complexTensorInfos.real,o=e.data.get(r.dataId).values;return e.makeTensorInfo(r.shape,r.dtype,o)}const VD={kernelName:uh,backendName:"cpu",kernelFunc:ao};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uw(n,t,e,s){if(s==="int32"){const r=Int32Array.from(n);return[t,"int32",r]}if(s==="bool"){const r=Dr([0],e),[o,a]=ve((i,l)=>i!==l?1:0)(t,[],n,r,"bool");return[a,"bool",o]}throw new Error(`Error in Cast: failed to cast ${e} to ${s}`)}function mr(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return Ts({inputs:{x:r},backend:e});const u=Jc(e,r.shape,r.dtype),d=mr({inputs:{x:r},backend:e,attrs:{dtype:"float32"}}),h=In({inputs:{real:d,imag:u},backend:e});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(d),h}if(r.dtype==="complex64"){const u=ao({inputs:{input:r},backend:e}),d=mr({inputs:{x:u},backend:e,attrs:{dtype:o}});return e.disposeIntermediateTensorInfo(u),d}if(!Fm(r.dtype,o)){const u=Ts({inputs:{x:r},backend:e});return{dataId:u.dataId,shape:u.shape,dtype:o}}const a=e.data.get(r.dataId).values,[i,l,c]=Uw(a,r.shape,r.dtype,o);return e.makeTensorInfo(i,l,c)}const UD={kernelName:Oo,backendName:"cpu",kernelFunc:mr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fe(n,t,e,s){return e==null?({inputs:r,backend:o})=>{const{a,b:i}=r,l=o;mt([a,i],n);const c=l.data.get(a.dataId).values,u=l.data.get(i.dataId).values,d=a.dtype==="string"?Vs(c):c,h=a.dtype==="string"?Vs(u):u,p=s||a.dtype,[f,m]=t(a.shape,i.shape,d,h,p);return l.makeTensorInfo(m,p,f)}:({inputs:r,backend:o})=>{const{a,b:i}=r,l=o;if(a.dtype==="complex64"||i.dtype==="complex64"){const c=mr({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),d=u.complexTensorInfos.real,h=u.complexTensorInfos.imag,p=l.data.get(d.dataId).values,f=l.data.get(h.dataId).values,m=mr({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),g=l.data.get(m.dataId),b=g.complexTensorInfos.real,x=g.complexTensorInfos.imag,y=l.data.get(b.dataId).values,w=l.data.get(x.dataId).values,[I,C,S]=e(a.shape,i.shape,p,f,y,w),T=l.makeTensorInfo(S,"float32",I),v=l.makeTensorInfo(S,"float32",C),$=In({inputs:{real:T,imag:v},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(T),l.disposeIntermediateTensorInfo(v),$}else{const c=l.data.get(a.dataId).values,u=l.data.get(i.dataId).values,d=s||a.dtype,[h,p]=t(a.shape,i.shape,c,u,d);return l.makeTensorInfo(p,d,h)}}}function Df(n){return(t,e,s,r,o,a)=>{const i=vt(t,e),l=L(i),c=i.length,u=pt(i),d=qe("float32",l),h=qe("float32",l),p=Qa(t,i),f=Qa(e,i),m=Ws(s,r),g=Ws(o,a),b=t.length,x=pt(t),y=e.length,w=pt(e);if(p.length+f.length===0)for(let I=0;I<d.length;I++){const C=I%m.length,S=I%g.length,T=n(m[C*2],m[C*2+1],g[S*2],g[S*2+1]);d[I]=T.real,h[I]=T.imag}else for(let I=0;I<d.length;I++){const C=So(I,c,u),S=C.slice(-b);p.forEach(R=>S[R]=0);const T=fs(S,b,x),v=C.slice(-y);f.forEach(R=>v[R]=0);const $=fs(v,y,w),k=n(m[T*2],m[T*2+1],g[$*2],g[$*2+1]);d[I]=k.real,h[I]=k.imag}return[d,h,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gw=ve((n,t)=>n+t),GD=Df((n,t,e,s)=>({real:n+e,imag:t+s})),ci=Fe(Nr,Gw,GD),HD={kernelName:Nr,backendName:"cpu",kernelFunc:ci};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ff(n,t,e,s,r){const o=L(s),a=Ke(r,e);for(let i=0;i<n.length;i++){const l=n[i];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(o>0?a[l]+=t[i]:a[l]+=1)}return a}function Hw(n,t,e,s=!1){const r=n.shape[0],o=n.shape[1],a=Ot([r,e],t.dtype);for(let i=0;i<r;i++)for(let l=0;l<o;l++){const c=n.get(i,l);if(c<0)throw new Error("Input x must be non-negative!");c>=e||(s?a.set(1,i,c):t.size>0?a.set(a.get(i,c)+t.get(i,l),i,c):a.set(a.get(i,c)+1,i,c))}return a}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jw=ve((n,t)=>n&t),jD=Fe(kl,jw),qD={kernelName:kl,backendName:"cpu",kernelFunc:jD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _s(n){return(t,e,s)=>{const r=Ie(e,t.length);for(let o=0;o<t.length;++o)r[o]=n(t[o],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jt(n,t,e){const s=_s(t);return gr(n,s,e)}function gr(n,t,e){return({inputs:s,attrs:r,backend:o})=>{const{x:a}=s;mt(a,n);const i=o,l=i.data.get(a.dataId).values;let c;if(a.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");c=Vs(l)}else c=l;const u=e||a.dtype,d=t(c,u,r);return i.makeTensorInfo(a.shape,u,d)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qw=_s(n=>Math.ceil(n)),KD=gr(Lo,qw),XD={kernelName:Lo,backendName:"cpu",kernelFunc:KD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mf(n,t,e,s){const r=Ie(e,L(t));if(s&&e!=="string"){let o=0;n.forEach(a=>{const i=L(a.shape);r.set(a.vals,o),o+=i})}else{let o=0;n.forEach(a=>{const i=e==="string"?Vs(a.vals):a.vals;let l=0;for(let c=0;c<a.shape[0];++c){const u=c*t[1]+o;for(let d=0;d<a.shape[1];++d)r[u+d]=i[l++]}o+=a.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kw=ve((n,t)=>n===t?1:0),Xw=Fe(ji,Kw,null,"bool"),YD={kernelName:ji,backendName:"cpu",kernelFunc:Xw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yw=_s(n=>Math.exp(n)),Zw=gr(Xo,Yw,"float32"),ZD={kernelName:Xo,backendName:"cpu",kernelFunc:Zw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jw=_s(n=>Math.expm1(n)),JD=gr(Yo,Jw),QD={kernelName:Yo,backendName:"cpu",kernelFunc:JD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qw=_s(n=>Math.floor(n)),tF=gr(Zo,Qw),eF={kernelName:Zo,backendName:"cpu",kernelFunc:tF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t0=ve((n,t)=>Math.floor(n/t)),nF=Fe(Jo,t0,null,"int32"),sF={kernelName:Jo,backendName:"cpu",kernelFunc:nF};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e0(n,t,e,s,r,o,a,i,l){const c=Ot([s,o],e);for(let u=0;u<s;u++){const d=[];let h=0;for(let p=0;p<r;p++){const f=n[u*r+p];h+=f*a[p],d.push(f)}if(h<0||h>=l/o)throw new Error(`Invalid indices: ${d} does not index into ${i}`);for(let p=0;p<o;p++)c.values[u*o+p]=t.get(...t.indexToLoc(h*o+p))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n0(n,t,e){const s=Ot(e,n.dtype);for(let r=0;r<s.size;++r){const a=s.indexToLoc(r).slice(),i=a[0],l=a[2],c=t.locToIndex([i,l]);a[2]=t.values[c];const u=n.locToIndex(a);0<=u&&u<n.values.length&&(s.values[r]=n.values[u])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s0=ve((n,t)=>n>t?1:0),rF=Fe(Yi,s0,null,"bool"),oF={kernelName:Yi,backendName:"cpu",kernelFunc:rF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r0=ve((n,t)=>n>=t?1:0),aF=Fe(ta,r0,null,"bool"),iF={kernelName:ta,backendName:"cpu",kernelFunc:aF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o0=ve((n,t)=>n<t?1:0),uF=Fe(Zi,o0,null,"bool"),lF={kernelName:Zi,backendName:"cpu",kernelFunc:uF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a0=ve((n,t)=>n<=t?1:0),cF=Fe(Ji,a0,null,"bool"),dF={kernelName:Ji,backendName:"cpu",kernelFunc:cF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i0(n,t,e){const s=(t-n)/(e-1),r=Ke(e,"float32");r[0]=n;for(let o=1;o<r.length;o++)r[o]=r[o-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u0=_s(n=>Math.log(n)),hF=gr(aa,u0),pF={kernelName:aa,backendName:"cpu",kernelFunc:hF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l0(n,t,e,s){const r=qe(s,L(e));for(let o=0;o<r.length;++o){const a=o*t;let i=n[a];for(let l=0;l<t;++l){const c=n[a+l];(Number.isNaN(c)||c>i)&&(i=c)}r[o]=i}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c0=ve((n,t)=>Math.max(n,t)),fF=Fe(ca,c0),mF={kernelName:ca,backendName:"cpu",kernelFunc:fF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d0=ve((n,t)=>Math.min(n,t)),gF=Fe(fa,d0),bF={kernelName:fa,backendName:"cpu",kernelFunc:gF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Of=ve((n,t)=>n*t),xF=Df((n,t,e,s)=>({real:n*e-t*s,imag:n*s+t*e})),Qc=Fe(ba,Of,xF),yF={kernelName:ba,backendName:"cpu",kernelFunc:Qc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h0(n,t,e){const s=Js(-1,e);return Of([],t,s,n,e)}function wF(n){const{inputs:t,backend:e}=n,{x:s}=t;mt(s,"neg");const r=e.data.get(s.dataId).values,[o,a]=h0(r,s.shape,s.dtype);return e.makeTensorInfo(a,s.dtype,o)}const IF={kernelName:ou,backendName:"cpu",kernelFunc:wF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p0=ve((n,t)=>n!==t?1:0),kF=Fe(au,p0,null,"bool"),CF={kernelName:au,backendName:"cpu",kernelFunc:kF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lf(n,t,e,s,r){const o=t.length,a=L(t),i=pt(t),l=pt(r),c=qe(e,L(r));for(let u=0;u<a;++u){const d=So(u,o,i),h=new Array(d.length);for(let f=0;f<h.length;f++)h[f]=d[s[f]];const p=fs(h,o,l);c[p]=n[u]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fn(n){const{inputs:t,attrs:e,backend:s}=n,{x:r}=t,{perm:o}=e;mt(r,"transpose");const a=r.shape.length,i=new Array(a);for(let d=0;d<i.length;d++)i[d]=r.shape[o[d]];const l=s.data.get(r.dataId).values,c=Lf(l,r.shape,r.dtype,o,i);return{dataId:s.write(c,i,r.dtype),shape:i,dtype:r.dtype}}const $F={kernelName:Ys,backendName:"cpu",kernelFunc:fn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f0(n,t,e,s){const[r,o]=he(n,s),a=xn(t,"int32"),i=Ke(L(r),a),l=L(o);for(let c=0;c<i.length;++c){const u=c*l;let d=1;for(let h=0;h<l;++h)d*=e[u+h];i[c]=d}return{outVals:i,outShape:r,outDtype:a}}function vF(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;mt(r,"prod");const i=r.shape.length,l=Et(o,r.shape),c=ue(l,i);let u=l,d=r;const h=[];c!=null&&(d=fn({inputs:{x:r},backend:e,attrs:{perm:c}}),h.push(d),u=se(u.length,i));const p=e.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=f0(d.shape,d.dtype,p,u);let b=m;return a&&(b=ee(m,l)),h.forEach(x=>e.disposeIntermediateTensorInfo(x)),e.makeTensorInfo(b,g,f)}const SF={kernelName:ka,backendName:"cpu",kernelFunc:vF};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NF(n,t,e){n.forEach((s,r)=>{if(s<0||s>=e){const o=So(r,t.length,pt(t)).join(",");throw new Error(`indices[${o}] = ${s} is not in [0, ${e})`)}})}function TF(n,t){for(let e=0;e<n.length;++e){const s=n[e],r=e===n.length-1?t:n[e+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let o=1;o<s.length;++o)if(s[o-1]>s[o])throw new Error("Ragged splits must be sorted in ascending order")}}function _F(n,t,e,s){const r=[];let o=0;const a=t.length-1+e.length,i=new Array(a).fill(null).map(()=>[0]);TF(e,s);let l=1;for(let c=0;c<t.length-1;++c){l*=t[c];const u=t[c+1];for(let d=1;d<l+1;++d)i[c].push(d*u)}for(let c=0;c<n.length;++c){let u=n[c],d=n[c]+1;for(let h=0;h<e.length;++h){const p=e[h],f=h+t.length-1;if(f>=0){const m=i[f],g=m[m.length-1]-p[u];for(let b=u;b<d;++b)i[f].push(p[b+1]+g)}u=p[u],d=p[d]}d!==u&&(r.push([u,d]),o+=d-u)}return{outSplits:i,valueSlices:r,numValues:o}}function EF(n){const t=[];for(let e=0;e<n.length;++e){const s=n[e].length,r=Ie("int32",s);t.push(r),n[e].forEach((o,a)=>r[a]=o)}return t}function m0(n,t){const e=n.slice(0,t);for(;e.length<t;)e.push(1);for(let s=t;s<n.length;s++)e[t-1]*=n[s];return e}function RF(n,t,e,s,r,o){const a=m0(t,2)[1],i=m0(o,2)[1];let l=0;for(const c of e)for(let u=c[0];u<c[1];++u){for(let d=0;d<s;++d)r[l*i+d]=n[u*a+d];++l}}function AF(n,t,e,s,r){const o=t.slice();o[0]=r;const a=Ie(e,L(o)),i=n.length,l=i===0?0:i/t[0];return RF(n,t,s,l,a,o),[a,o]}function g0(n,t,e,s,r,o,a,i){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");const l=t[0][0]-1;if(NF(o,a,l),s.length===0)throw new Error("params.rank must be nonzero");const c=s[0],{outSplits:u,valueSlices:d,numValues:h}=_F(o,a,n,c),p=EF(u),f=AF(e,s,r,d,h);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b0=2147483647;function x0(n,t,e,s,r,o,a){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const i=t.length===0,l=r.length===0,c=a.length===0,u=[];i||u.push(t[0]),l||u.push(r[0]),c||u.push(a[0]);for(let g=1;g<u.length;++g)if(u[g]!==u[g-1])throw new Error("starts, limits, and deltas must have the same shape");const d=u.length===0?1:u[0],h=Ie("int32",d+1);h[0]=0;for(let g=0;g<d;++g){const b=i?n[0]:n[g],x=l?s[0]:s[g],y=c?o[0]:o[g];if(y===0)throw new Error("Requires delta != 0");let w;if(y>0&&x<b||y<0&&x>b)w=0;else if(w=Math.ceil(Math.abs((x-b)/y)),w>b0)throw new Error(`Requires ((limit - start) / delta) <= ${b0}`);h[g+1]=h[g]+w}const p=h[d],f=Ie(e,p);let m=0;for(let g=0;g<d;++g){const b=h[g+1]-h[g];let x=i?n[0]:n[g];const y=c?o[0]:o[g];for(let w=0;w<b;++w)f[m++]=x,x+=y}return[h,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Kn=os;class td{constructor(t,e,s,r,o,a,i,l,c,u){this.shape=t,this.shapeShape=e,this.values=s,this.valuesShape=r,this.valuesDType=o,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=l,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=Ob(u),this.raggedRank=Lb(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Kn.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Kn.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Kn.VALUE_ROWIDS:return td.getMaxWidthValueRowID(e);case Kn.ROW_SPLITS:return td.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${Kn[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(e===0||e===1)return 0;let s=0;for(let r=0;r<e-1;++r){const o=t[r+1]-t[r];o>s&&(s=o)}return s}static getMaxWidthValueRowID(t){const e=t.length;if(e===0)return 0;let s=0,r=t[0],o=0;for(let a=1;a<e;++a){const i=t[a];i!==r&&(r=i,o=Math.max(a-s,o),s=a)}return Math.max(e-s,o)}tensorShapeFromTensor(t,e,s=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return w0(t,s)}calculateOutputSize(t){const e=this.valuesShape,s=this.defaultValueShape;Pb(s,e);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=Mb(this.raggedRank,r,e);a[0]<0&&(a[0]=t);for(let i=1;i<=this.raggedRank;++i)a[i]<0&&(a[i]=this.getMaxWidth(i));return a}calculateFirstParentOutputIndex(t,e,s){const r=Math.min(t,s),o=[];let a=0;for(let i=0;i<r;++i,a+=e)o.push(a);for(let i=r;i<t;++i)o.push(-1);return N(o.length===t,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(t,e,s,r){const o=t.length,a=[];for(let i=0;i<o-1;++i){const l=t[i+1]-t[i];let c=Math.min(r,l),u=e[i];u===-1&&(c=0);for(let d=0;d<c;++d)a.push(u),u+=s;for(let d=0;d<l-c;++d)a.push(-1)}if(o>0&&a.length!==t[o-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(t,e,s,r){const o=t.length,a=[];if(o===0)return[];let i=0,l=t[0];if(l>=e.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${e.length}`);let c=e[l];a.push(c);for(let u=1;u<o;++u){const d=t[u];if(d===l)c>=0&&(++i,i<r?c+=s:c=-1);else{if(i=0,l=d,d>=e.length)throw new Error(`Got nextValueRowId=${d} which is not less than ${e.length}`);c=e[d]}a.push(c)}if(a.length!==t.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(t,e,s,r){const o=this.getRowPartitionTensor(t),a=this.getRowPartitionTypeByDimension(t);switch(a){case Kn.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,e,s,r);case Kn.ROW_SPLITS:if(o.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(o,e,s,r);default:throw new Error(`Unsupported partition type: ${Kn[a]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case Kn.FIRST_DIM_SIZE:return t[0];case Kn.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Kn.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Kn[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),s=this.calculateOutputSize(e),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let l=r.length-2;l>=0;--l)r[l]=r[l+1]*s[l+1];const o=w0(s,!1),a=Ie(this.valuesDType,L(o));if(r[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(e,r[0],s[0]);for(let c=1;c<=this.raggedRank;++c)l=this.calculateOutputIndex(c-1,l,r[c],s[c]);this.setOutput(this.raggedRank,l,a,o)}return[o,a]}setOutput(t,e,s,r){if(s.length===0)return;const o=this.values,a=s;let i=r.slice();i=i.slice(t+1);const l=L(i),c=e.length;let u=this.defaultValue;if(u.length!==l&&u.length!==1){const f=this.defaultValueShape;G(()=>{const m=W(u,f);u=Ru(m,i).dataSync()})}let d=0,h=0,p=0;for(let f=0;f<=c;++f){let m=f<c?e[f]:-1;if(m===p){++p;continue}if(h<p){const g=o.subarray(d*l),b=a.subarray(h*l),x=(p-h)*l;y0(b,g,x)}if(f>=c){const g=s.length;m=Math.floor(g/l)}if(m>p)if(this.defaultValue.length===1)a.subarray(p*l,m*l).fill(this.defaultValue[0]),p=m;else for(;m>p;){const g=a.slice(p*l);y0(g,u,l),++p}m<0?(d=f+1,h=p):(d=f,h=p,p=h+1)}}}function y0(n,t,e){for(let s=0;s<e;s++)n[s]=t[s]}function w0(n,t){const e=[];for(let s of n){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}e.push(s)}return e}function I0(n,t,e,s,r,o,a,i,l,c){return new td(n,t,e,s,r,o,a,i,l,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pf(n,t,e,s){const r=n===t,o=n<t&&e<0,a=t<n&&e>1;if(r||o||a)return Ke(0,s);const i=Math.abs(Math.ceil((t-n)/e)),l=Ke(i,s);t<n&&e===1&&(e=-1),l[0]=n;for(let c=1;c<l.length;c++)l[c]=l[c-1]+e;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k0=_s(n=>1/Math.sqrt(n)),DF=gr(Ea,k0),FF={kernelName:Ea,backendName:"cpu",kernelFunc:DF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function io(n,t,e,s,r,o,a,i,l,c){const u=[s/r,r],d=n.values,h=t.values;if(s===0)return Ot(e,t.dtype);const p=l instanceof ze?l:Ot(u,t.dtype);typeof l=="string"||typeof l=="number"?p.values.fill(l):typeof l=="boolean"&&p.values.fill(+l);for(let f=0;f<o;f++){const m=[];let g=0;for(let b=0;b<a;b++){const x=d[f*a+b];m.push(x),g+=x*i[b]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${e}`);for(let b=0;b<r;b++)c?p.values[g*r+b]+=h[f*r+b]:p.values[g*r+b]=t.rank===0?h[0]:h[f*r+b]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MF=_s(n=>1/(1+Math.exp(-n))),C0=Jt(Ma,n=>1/(1+Math.exp(-n))),OF={kernelName:Ma,backendName:"cpu",kernelFunc:C0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ed(n,t,e,s,r){const o=fc(s,t,e),a=L(e),i=pt(s);if(o){const d=mc(t,i);return r==="string"?n.slice(d,d+a):n.subarray(d,d+a)}const l=r==="string"?Vs(n):n,c=Ot(s,r,l),u=Ot(e,r);for(let d=0;d<u.size;++d){const h=u.indexToLoc(d),p=h.map((f,m)=>f+t[m]);u.set(c.get(...p),...h)}return r==="string"?qp(u.values):u.values}function uo(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,size:a}=s;mt(r,"slice");const[i,l]=Pu(r,o,a);Ip(r,i,l);const c=e.data.get(r.dataId).values,u=ed(c,i,l,r.shape,r.dtype);return e.makeTensorInfo(l,r.dtype,u)}const LF={kernelName:gu,backendName:"cpu",kernelFunc:uo};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $0(n,t,e,s,r,o,a){const i=t[0],l=o[0],c=new Array(l),u=new Array(i),d=t[1];if(l===0){if(i!==0)throw new Error(Op(i));const g=Ie(e,0),b=Ie(r,0);return[g,[0,d],b,c,u]}let h=!0,p=0;const f=new Array(l).fill(0);for(let g=0;g<i;++g){const b=n[g*d];if(b<0)throw new Error(Lp(g,b));if(b>=l)throw new Error(Pp(g,b,l));++f[b],h=h&&b>=p,p=b}let m=!0;for(let g=0;g<l;++g){const b=f[g]===0;c[g]=b,m=m&&!b,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&h){const g=n,b=s;for(let x=0;x<i;++x)u[x]=x;return[g,[i,d],b,c,u]}else{const g=f[l-1],b=Ie(e,g*d),x=Ie(r,g),y=new Array(l).fill(0);for(let w=0;w<i;++w){const I=n[w*d],C=y[I],S=(I===0?0:f[I-1])+C;y[I]++;for(let T=0;T<d;++T)b[S*d+T]=n[w*d+T];x[S]=s[w],u[w]=S}for(let w=0;w<l;++w)if(y[w]===0){const C=w===0?0:f[w-1];b[C*d+0]=w;for(let S=1;S<d;++S)b[C*d+S]=0;x[C]=a}return[b,[g,d],x,c,u]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v0(n,t,e,s,r){const o=L(s),a=t[0],i=r.length,l=[];let c=1,u=-1;for(let g=0;g<i;++g){const b=r[g];if(b===-1){if(u!==-1)throw new Error(Bp(u,g));u=g,l.push(1)}else{if(b<0)throw new Error(zp(g,b));c*=b,l.push(b)}}if(u!==-1){if(c<=0)throw new Error(Wp());const g=Math.trunc(o/c);if(c*g!==o)throw new Error(Vp(s,l));l[u]=g}if(L(l)!==o)throw new Error(Up(s,l));const h=s.length,p=[];if(h>0){p[h-1]=1;for(let g=h-2;g>=0;--g)p[g]=p[g+1]*s[g+1]}const f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*l[g+1]}const m=Ie(e,a*i);for(let g=0;g<a;++g){let b=0;for(let x=0;x<h;++x)b+=n[g*h+x]*p[x];for(let x=0;x<i;++x)m[g*i+x]=Math.trunc(b/f[x]),b%=f[x]}return[m,[a,i],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bf(n,t,e,s,r,o=!1,a=0){const i=s.length,l=[t[0],n.length/t[0]],c=l[1],d=i>0?r[i-1]+1:0;if(d<0)throw new Error(Bu());const h=t.slice();h[0]=d;const p=h.reduce((y,w)=>y*w,1),f=Ie(e,p);if(i===0)return d>0&&f.fill(a),[f,h];if(d<=0)throw new Error(Bu());let m=0,g=1,b=0,x=r[m];for(;;){let y=0;if(g<i){if(y=r[g],x===y){++g;continue}if(x>=y)throw new Error(Gp())}if(x<0||x>=d)throw new Error(Hp(x,d));x>b&&f.fill(a,b*c,x*c);for(let w=m;w<g;++w){const I=s[w];if(I<0||I>=l[0])throw new Error(jp(w,s[w],l[0]));for(let C=0;C<c;C++)f[x*c+C]+=n[I*c+C]}if(o)for(let w=0;w<c;w++)f[x*c+w]/=g-m;if(m=g,++g,b=x+1,x=y,g>i)break}return b<d&&f.fill(a,b*c,d*c),[f,h]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PF=_s(n=>Math.sqrt(n)),BF=Jt(La,n=>Math.sqrt(n)),zF={kernelName:La,backendName:"cpu",kernelFunc:BF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S0=ve((n,t)=>{const e=n-t;return e*e}),WF=Fe(za,S0),VF={kernelName:za,backendName:"cpu",kernelFunc:WF};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N0=_s((n,t)=>{const{pattern:e,replaceGlobal:s,rewrite:r}=t;return n.replace(new RegExp(e,s?"g":""),r)}),UF=gr(hh,N0),GF={kernelName:hh,backendName:"cpu",kernelFunc:UF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T0(n,t,e,s){const r=Ot(n,t.dtype);for(let o=0;o<r.size;o++){const a=r.indexToLoc(o),i=new Array(a.length);for(let l=0;l<i.length;l++)i[l]=a[l]*e[l]+s[l];r.set(t.get(...i),...a)}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HF{constructor(t,e,s,r,o,a){this.separator=Qs(t),this.nGramWidths=e,this.leftPad=Qs(s),this.rightPad=Qs(r),this.padWidth=o,this.preserveShort=a}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const s=this.getPadWidth(e);return Math.max(0,t+2*s-e+1)}createNGrams(t,e,s,r,o,a){for(let i=0;i<o;++i){const l=this.getPadWidth(a),c=Math.max(0,l-i),u=Math.max(0,l-(o-(i+1))),d=a-(c+u),h=e+(c>0?0:i-l);let p=0;p+=c*this.leftPad.length;for(let x=0;x<d;++x)p+=t[h+x].length;p+=u*this.rightPad.length;const f=c+u+d-1;p+=f*this.separator.length,s[r+i]=new Uint8Array(p);const m=s[r+i];let g=0;const b=x=>x.forEach(y=>m[g++]=y);for(let x=0;x<c;++x)b(this.leftPad),b(this.separator);for(let x=0;x<d-1;++x)b(t[h+x]),b(this.separator);if(d>0){b(t[h+d-1]);for(let x=0;x<u;++x)b(this.separator),b(this.rightPad)}else{for(let x=0;x<u-1;++x)b(this.rightPad),b(this.separator);b(this.rightPad)}}}compute(t,e){const s=t.length,r=e.length;if(r>0){let l=e[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let c=1;c<r;++c){let u=e[c]>=l;if(u=u&&e[c]<=s,!u)throw new Error(`Invalid split value ${e[c]}, must be in [${l}, ${s}]`);l=e[c]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const o=r-1,a=Ie("int32",r);if(s===0||r===0){const l=new Array(s);for(let c=0;c<=o;++c)a[c]=0;return[l,a]}a[0]=0;for(let l=1;l<=o;++l){const c=e[l]-e[l-1];let u=0;this.nGramWidths.forEach(d=>{u+=this.getNumNGrams(c,d)}),this.preserveShort&&c>0&&u===0&&(u=1),a[l]=a[l-1]+u}const i=new Array(a[o]);for(let l=0;l<o;++l){const c=e[l];let u=a[l];if(this.nGramWidths.forEach(d=>{const h=e[l+1]-e[l],p=this.getNumNGrams(h,d);this.createNGrams(t,c,i,u,p,d),u+=p}),this.preserveShort&&u===a[l]){const d=e[l+1]-e[l];if(d===0)continue;const h=d+2*this.padWidth;this.createNGrams(t,c,i,u,1,h)}}return[i,a]}}function zf(n,t,e,s,r,o,a,i){return new HF(e,s,r,o,a,i).compute(n,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jF(n,t,e,s){if(!n.length)return;if(t.length===0){for(let o=0;o<n.length;++o)s.push(n.subarray(o,o+1));return}if(t.length===1){const o=t[0];let a=n.indexOf(o);for(;a!==-1;){const i=n.subarray(0,a);(!e||i.length!==0)&&s.push(i),n=n.subarray(a+1),a=n.indexOf(o)}(!e||n.length!==0)&&s.push(n);return}let r=0;for(let o=0;o<n.length+1;o++)if(o===n.length||t.indexOf(n[o])!==-1){const a=n.subarray(r,o);(!e||a.length!==0)&&s.push(a),r=o+1}}function Wf(n,t,e){const s=n.length,r=[];let o=0,a=0;const i=new Array(s);for(let h=0;h<s;++h){const p=r.length;jF(n[h],t,e,r);const f=r.length-p;i[h]=f,o+=f,a=Math.max(a,f)}const l=Ie("int32",o*2),c=new Array(o),u=[s,a];let d=0;for(let h=0;h<s;++h)for(let p=0;p<i[h];++p)l[d*2]=h,l[d*2+1]=p,c[d]=r[d],++d;return[l,c,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vf(n,t){const e=Ie("int32",n.length);for(let s=0;s<n.length;++s)e[s]=VC(n[s]).modulo(t).getLowBitsUnsigned();return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _0=ve((n,t)=>n-t),qF=Df((n,t,e,s)=>({real:n-e,imag:t-s})),Uf=Fe(Wa,_0,qF),KF={kernelName:Wa,backendName:"cpu",kernelFunc:Uf};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E0(n,t){const e=new Array(n.rank);for(let r=0;r<e.length;r++)e[r]=n.shape[r]*t[r];const s=Ot(e,n.dtype);for(let r=0;r<s.values.length;++r){const o=s.indexToLoc(r),a=new Array(n.rank);for(let l=0;l<a.length;l++)a[l]=o[l]%n.shape[l];const i=n.locToIndex(a);s.values[r]=n.values[i]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const el=(n,t)=>{const e=t.value-n.value;return e===0?n.index-t.index:e};function R0(n,t,e=0,s=n.length-1){for(;s>e;){if(s-e>600){const i=s-e+1,l=t-e+1,c=Math.log(i),u=.5*Math.exp(2*c/3),d=.5*Math.sqrt(c*u*(i-u)/i)*Math.sign(l-i/2),h=Math.max(e,Math.floor(t-l*u/i+d)),p=Math.min(s,Math.floor(t+(i-l)*u/i+d));R0(n,t,h,p)}const r=n[t];let o=e,a=s;for(ko(n,e,t),el(n[s],r)>0&&ko(n,e,s);o<a;){for(ko(n,o,a),o++,a--;el(n[o],r)<0;)o=o+1;for(;el(n[a],r)>0;)a=a-1}el(n[e],r)===0?ko(n,e,a):(a=a+1,ko(n,a,s)),a<=t&&(e=a+1),t<=a&&(s=a-1)}}function A0(n,t,e,s,r){const o=t[t.length-1],[a,i]=[n.length/o,o],l=qe(e,a*s),c=qe("int32",a*s);for(let d=0;d<a;d++){const h=d*i,p=n.subarray(h,h+i);let f=new Array(p.length);p.forEach((x,y)=>f[y]={value:x,index:y}),s<f.length&&(R0(f,s),f=f.slice(0,s)),r&&f.sort(el);const m=d*s,g=l.subarray(m,m+s),b=c.subarray(m,m+s);for(let x=0;x<s;x++)g[x]=f[x].value,b[x]=f[x].index}const u=t.slice();return u[u.length-1]=s,[Ot(u,e,l),Ot(u,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gf(n,t,e,s){const r=Et(t,e)[0],o=[1,e[0],1];for(let f=0;f<r;f++)o[0]*=e[f];o[1]=e[r];for(let f=r+1;f<e.length;f++)o[2]*=e[f];const a=new Map,i=new Int32Array(e[r]),l=new ze(o,s,n),c=[],u=o[0]===1&&o[2]===1;for(let f=0;f<e[r];f++){let m;if(u)m=n[f].toString();else{const b=[];for(let x=0;x<o[0];x++)for(let y=0;y<o[2];y++)b.push(l.get(x,f,y));m=b.join(",")}const g=a.get(m);if(g!=null)i[f]=g;else{const b=a.size;a.set(m,b),i[f]=b,c.push(f)}}const d=o.slice();d[1]=a.size;const h=new ze(d,s);c.forEach((f,m)=>{for(let g=0;g<o[0];g++)for(let b=0;b<o[2];b++)h.set(l.get(g,f,b),g,m,b)});const p=e.slice();return p[r]=d[1],{outputValues:h.values,outputShape:p,indices:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var XF=Object.freeze({__proto__:null,addImpl:Gw,bincountImpl:Ff,bincountReduceImpl:Hw,bitwiseAndImpl:jw,castImpl:Uw,ceilImpl:qw,concatImpl:Mf,equalImpl:Kw,expImpl:Yw,expm1Impl:Jw,floorDivImpl:t0,floorImpl:Qw,gatherNdImpl:e0,gatherV2Impl:n0,greaterEqualImpl:r0,greaterImpl:s0,lessEqualImpl:a0,lessImpl:o0,linSpaceImpl:i0,logImpl:u0,maxImpl:l0,maximumImpl:c0,minimumImpl:d0,multiplyImpl:Of,negImpl:h0,notEqualImpl:p0,prodImpl:f0,raggedGatherImpl:g0,raggedRangeImpl:x0,raggedTensorToTensorImpl:I0,rangeImpl:Pf,rsqrtImpl:k0,scatterImpl:io,sigmoidImpl:MF,simpleAbsImpl:Vw,sliceImpl:ed,sparseFillEmptyRowsImpl:$0,sparseReshapeImpl:v0,sparseSegmentReductionImpl:Bf,sqrtImpl:PF,squaredDifferenceImpl:S0,staticRegexReplaceImpl:N0,stridedSliceImpl:T0,stringNGramsImpl:zf,stringSplitImpl:Wf,stringToHashBucketFastImpl:Vf,subImpl:_0,tileImpl:E0,topKImpl:A0,transposeImpl:Lf,uniqueImpl:Gf});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Th("cpu",()=>new Zc,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D0=Jt(qo,n=>n>=0?n:Math.exp(n)-1),YF={kernelName:qo,backendName:"cpu",kernelFunc:D0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F0(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{alpha:o}=s;mt([r],"leakyRelu");const a=L(r.shape),i=e.data.get(r.dataId).values,l=qe("float32",a);for(let c=0;c<i.length;c++)l[c]=i[c]<0?o*i[c]:i[c];return e.makeTensorInfo(r.shape,"float32",l)}const ZF={kernelName:oa,backendName:"cpu",kernelFunc:F0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JF=ve((n,t)=>n<0?t*n:n);function M0(n){const{inputs:t,backend:e}=n,{x:s,alpha:r}=t;mt([s,r],"prelu");const o=e.data.get(s.dataId).values,a=e.data.get(r.dataId).values,[i,l]=JF(s.shape,r.shape,o,a,"float32");return e.makeTensorInfo(l,"float32",i)}const QF={kernelName:Ia,backendName:"cpu",kernelFunc:M0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O0=Jt($a,n=>Math.max(0,n)),tM={kernelName:$a,backendName:"cpu",kernelFunc:O0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L0=Jt(Na,n=>Math.min(Math.max(0,n),6)),eM={kernelName:Na,backendName:"cpu",kernelFunc:L0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nd(n,t,e,s,r){if(e==="linear")return Ts({inputs:{x:t},backend:n});if(e==="relu")return O0({inputs:{x:t},backend:n});if(e==="elu")return D0({inputs:{x:t},backend:n});if(e==="relu6")return L0({inputs:{x:t},backend:n});if(e==="prelu")return M0({inputs:{x:t,alpha:s},backend:n});if(e==="leakyrelu")return F0({inputs:{x:t},backend:n,attrs:{alpha:r}});if(e==="sigmoid")return C0({inputs:{x:t},backend:n});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ce(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{shape:o}=s,a=L(r.shape),i=Ud(o,a),l=L(i);N(a===l,()=>`The new shape (${i}) has ${l} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.incRef(r.dataId);const c=e.data.get(r.dataId);if(c.complexTensorInfos!=null){const u=c.complexTensorInfos.real,d=c.complexTensorInfos.imag;u.shape=i,d.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}const nM={kernelName:hu,backendName:"cpu",kernelFunc:ce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P0(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o}=t,{transposeA:a,transposeB:i}=s;mt([r,o],"matMul");const l=r.shape.length,c=o.shape.length,u=a?r.shape[l-2]:r.shape[l-1],d=i?o.shape[c-1]:o.shape[c-2],h=a?r.shape[l-1]:r.shape[l-2],p=i?o.shape[c-2]:o.shape[c-1],f=r.shape.slice(0,-2),m=o.shape.slice(0,-2),g=L(f),b=L(m),y=vt(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([h,p]);N(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${a} and transposeB=${i} must match.`);const w=a?[g,u,h]:[g,h,u],I=i?[b,p,d]:[b,d,p],C=ce({inputs:{x:r},backend:e,attrs:{shape:w}}),S=ce({inputs:{x:o},backend:e,attrs:{shape:I}}),T=a?C.shape[1]:C.shape[2],v=a?C.shape[2]:C.shape[1],$=i?S.shape[1]:S.shape[2],k=Math.max(g,b),R=e.data.get(C.dataId).values,F=e.data.get(S.dataId).values,B=pt(C.shape),M=pt(S.shape),[z,j,V]=a?[B[0],1,B[1]]:[B[0],B[1],1],[q,X,Z]=i?[1,M[1],M[0]]:[M[1],1,M[0]],Q=v*$,J=Ot([k,v,$],C.dtype),ot=J.values,nt=e.blockSize;for(let ut=0;ut<k;ut++){const xt=ut%g,dt=ut%b;for(let yt=0;yt<v;yt+=nt){const Nt=Math.min(yt+nt,v);for(let _t=0;_t<$;_t+=nt){const Bt=Math.min(_t+nt,$);for(let Yt=0;Yt<T;Yt+=nt){const qt=Math.min(Yt+nt,T);for(let Gt=yt;Gt<Nt;Gt++)for(let Tt=_t;Tt<Bt;Tt++){let Qt=0;for(let te=Yt;te<qt;te++){const Cn=R[xt*z+Gt*j+te*V],ge=F[te*q+Tt*X+dt*Z];Qt+=Cn*ge}ot[ut*Q+(Gt*$+Tt)]+=Qt}}}}}return e.disposeIntermediateTensorInfo(C),e.disposeIntermediateTensorInfo(S),e.makeTensorInfo(y,J.dtype,J.values)}const sM={kernelName:Mo,backendName:"cpu",kernelFunc:P0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rM(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o,bias:a,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s;let h,p,f;const m=[];h=P0({inputs:{a:r,b:o},attrs:{transposeA:l,transposeB:c},backend:e}),a&&(p=ci({inputs:{a:h,b:a},backend:e}),m.push(h),h=p),u&&(f=nd(e,h,u,i,d),m.push(h),h=f);for(const b of m)e.disposeIntermediateTensorInfo(b);return h}const oM={kernelName:Ga,backendName:"cpu",kernelFunc:rM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aM=Jt(No,n=>Math.acos(n)),iM={kernelName:No,backendName:"cpu",kernelFunc:aM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uM=Jt(To,n=>Math.acosh(n)),lM={kernelName:To,backendName:"cpu",kernelFunc:uM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cM(n){const{inputs:t,backend:e}=n,s=t;mt(t,"addN");const r=s.map(i=>e.data.get(i.dataId).values),o=Ot(s[0].shape,s[0].dtype),a=o.values;for(let i=0;i<s.length;i++){const l=r[i];for(let c=0;c<a.length;c++)a[c]+=l[c]}return e.makeTensorInfo(o.shape,o.dtype,o.values)}const dM={kernelName:_i,backendName:"cpu",kernelFunc:cM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;mt(r,"all");const i=Et(o,r.shape);let l=i;const c=ue(l,r.shape.length);let u=r;c!=null&&(u=fn({inputs:{x:r},backend:e,attrs:{perm:c}}),l=se(l.length,r.shape.length)),ie("all",l,u.shape.length);const[d,h]=he(u.shape,l),p=L(h),f=Ke(L(d),u.dtype),m=e.data.get(u.dataId).values;for(let b=0;b<f.length;++b){const x=b*p;let y=m[x];for(let w=0;w<p;++w){const I=m[x+w];y=y&&I}f[b]=y}c!=null&&e.disposeIntermediateTensorInfo(u);const g=e.makeTensorInfo(d,u.dtype,f);if(a){const b=ee(d,i),x=ce({inputs:{x:g},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo(g),x}return g}const pM={kernelName:Ei,backendName:"cpu",kernelFunc:hM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;mt(r,"any");const i=Et(o,r.shape);let l=i;const c=ue(l,r.shape.length);let u=r;c!=null&&(u=fn({inputs:{x:r},backend:e,attrs:{perm:c}}),l=se(l.length,r.shape.length)),ie("any",l,u.shape.length);const[d,h]=he(u.shape,l),p=L(h),f=Ke(L(d),u.dtype),m=e.data.get(u.dataId).values;for(let b=0;b<f.length;++b){const x=b*p;let y=m[x];for(let w=0;w<p;++w){const I=m[x+w];y=y||I}f[b]=y}c!=null&&e.disposeIntermediateTensorInfo(u);const g=e.makeTensorInfo(d,u.dtype,f);if(a){const b=ee(d,i),x=ce({inputs:{x:g},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo(g),x}return g}const mM={kernelName:Ri,backendName:"cpu",kernelFunc:fM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;mt(r,"argMax");let a=Et(o,r.shape);const i=ue(a,r.shape.length);let l=r;const c=[];i!=null&&(l=fn({inputs:{x:r},backend:e,attrs:{perm:i}}),c.push(l),a=se(a.length,l.shape.length)),a=[a[0]],ie("argMax",a,l.shape.length);const[u,d]=he(l.shape,a),h=L(u),p=Ke(h,"int32"),f=L(d),m=e.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const b=g*f;let x=m[b],y=0;for(let w=0;w<f;++w){const I=m[b+w];I>x&&(x=I,y=w)}p[g]=y}return c.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(u,"int32",p)}const bM={kernelName:Ai,backendName:"cpu",kernelFunc:gM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;mt(r,"argMin");let a=Et(o,r.shape);const i=ue(a,r.shape.length);let l=r;const c=[];i!=null&&(l=fn({inputs:{x:r},backend:e,attrs:{perm:i}}),c.push(l),a=se(a.length,l.shape.length)),a=[a[0]],ie("argMin",a,l.shape.length);const[u,d]=he(l.shape,a),h=L(u),p=Ke(h,"int32"),f=L(d),m=e.data.get(l.dataId).values;for(let g=0;g<p.length;++g){const b=g*f;let x=m[b],y=0;for(let w=0;w<f;++w){const I=m[b+w];I<x&&(x=I,y=w)}p[g]=y}return c.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.makeTensorInfo(u,"int32",p)}const yM={kernelName:Di,backendName:"cpu",kernelFunc:xM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wM=Jt(_o,n=>Math.asin(n)),IM={kernelName:_o,backendName:"cpu",kernelFunc:wM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kM=Jt(Eo,n=>Math.asinh(n)),CM={kernelName:Eo,backendName:"cpu",kernelFunc:kM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $M=Jt(Ro,n=>Math.atan(n)),vM={kernelName:Ro,backendName:"cpu",kernelFunc:$M};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SM=ve((n,t)=>Math.atan2(n,t)),NM=Fe(Do,SM),TM={kernelName:Do,backendName:"cpu",kernelFunc:NM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _M=Jt(Ao,n=>Math.atanh(n)),EM={kernelName:Ao,backendName:"cpu",kernelFunc:_M};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hf(n,t,e,s,r,o){const a=r.strideHeight,i=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,u=r.effectiveFilterHeight,d=r.effectiveFilterWidth,h=r.padInfo.top,p=r.padInfo.left,f=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ot(r.outShape,e),g=m.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],y=r.outShape[3];for(let w=0;w<r.batchSize;++w){const I=w*b,C=w*s[0];for(let S=0;S<r.inChannels;++S)for(let T=0;T<r.outHeight;++T){const v=T*a-h,$=Math.max(0,v),k=Math.min(r.inHeight,u+v),R=I+T*x;for(let F=0;F<r.outWidth;++F){const B=F*i-p,M=Math.max(0,B),z=Math.min(r.inWidth,d+B);let j=f,V=0,q=0;for(let Z=$;Z<k;Z+=l){const Q=C+Z*s[1];for(let J=M;J<z;J+=c){const ot=Q+J*s[2],nt=n[ot+S];o==="max"&&nt>j?j=nt:o==="avg"&&(V+=nt,q++)}if(isNaN(j))break}const X=R+F*y+S;g[X]=o==="avg"?V/q:j}}}return m}function B0(n,t,e,s,r=!1,o=!1){const a=Ot(s.outShape,"int32"),i=s.strideHeight,l=s.strideWidth,c=s.dilationHeight,u=s.dilationWidth,d=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=Ot(t,e,n);for(let g=0;g<s.batchSize;++g)for(let b=0;b<s.inChannels;++b)for(let x=0;x<s.outHeight;++x){const y=x*i-p;let w=y;for(;w<0;)w+=c;const I=Math.min(s.inHeight,d+y);for(let C=0;C<s.outWidth;++C){const S=C*l-f;let T=S;for(;T<0;)T+=u;const v=Math.min(s.inWidth,h+S);let $=Number.NEGATIVE_INFINITY,k=-1;for(let R=w;R<I;R+=c){const F=R-y;for(let B=T;B<v;B+=u){const M=B-S,z=m.get(g,R,B,b);z>$&&($=z,r?k=o?((g*s.inHeight+R)*s.inWidth+B)*s.inChannels+b:(R*s.inWidth+B)*s.inChannels+b:k=F*h+M)}}a.set(k,g,x,C,b)}}return a}function z0(n,t,e,s,r,o){const a=r.strideDepth,i=r.strideHeight,l=r.strideWidth,c=r.dilationDepth,u=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,b=r.padInfo.left,x=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=Ot(r.outShape,e),w=y.values,I=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],C=r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[3]*r.outShape[4],T=r.outShape[4];for(let v=0;v<r.batchSize;++v){const $=v*I,k=v*s[0];for(let R=0;R<r.inChannels;++R)for(let F=0;F<r.outDepth;++F){const B=F*a-m;let M=B;for(;M<0;)M+=c;const z=Math.min(r.inDepth,h+B),j=$+F*C;for(let V=0;V<r.outHeight;++V){const q=V*i-g;let X=q;for(;X<0;)X+=u;const Z=Math.min(r.inHeight,p+q),Q=j+V*S;for(let J=0;J<r.outWidth;++J){const ot=J*l-b;let nt=ot;for(;nt<0;)nt+=d;const ut=Math.min(r.inWidth,f+ot),xt=Q+J*T;let dt=x,yt=0,Nt=0;for(let Bt=M;Bt<z;Bt+=c){const Yt=k+Bt*s[1];for(let qt=X;qt<Z;qt+=u){const Gt=Yt+qt*s[2];for(let Tt=nt;Tt<ut;Tt+=d){const Qt=Gt+Tt*s[3],te=n[Qt+R];if(o==="max"&&te>dt?dt=te:o==="avg"&&(yt+=te,Nt++),isNaN(dt))break}if(isNaN(dt))break}if(isNaN(dt))break}const _t=xt+R;w[_t]=o==="avg"?yt/Math.max(Nt,1):dt}}}}return y}function RM(n,t){const e=Ot(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,o=t.strideWidth,a=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,u=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){const x=b*s-h;let y=x;for(;y<0;)y+=a;const w=Math.min(t.inDepth,c+x);for(let I=0;I<t.outHeight;++I){const C=I*r-p;let S=C;for(;S<0;)S+=i;const T=Math.min(t.inHeight,u+C);for(let v=0;v<t.outWidth;++v){const $=v*o-f;let k=$;for(;k<0;)k+=l;const R=Math.min(t.inWidth,d+$);let F=Number.NEGATIVE_INFINITY,B=-1;for(let M=y;M<w;M+=a){const z=M-x;for(let j=S;j<T;j+=i){const V=j-C;for(let q=k;q<R;q+=l){const X=q-$,Z=n.get(m,M,j,q,g);Z>=F&&(F=Z,B=z*u*d+V*u+X)}}}e.set(B,m,b,I,v,g)}}}return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;mt(r,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=s,c=1;N(We(a,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const u=Ye(r.shape,o,a,c,i,l);let d;if(u.filterWidth===1&&u.filterHeight===1&&Kt(u.inShape,u.outShape))d=Ts({inputs:{x:r},backend:e});else{const h=e.data.get(r.dataId).values,p=pt(r.shape),f=Hf(h,r.shape,r.dtype,p,u,"avg");d=e.makeTensorInfo(u.outShape,r.dtype,f.values)}return d}const DM={kernelName:Fo,backendName:"cpu",kernelFunc:AM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:l,dataFormat:c}=s;mt(r,"avgPool3d");const u=Tn(r.shape,o,a,1,i,l,c),d=e.data.get(r.dataId).values,h=z0(d,r.shape,r.dtype,pt(r.shape),u,"avg");return e.makeTensorInfo(h.shape,"float32",h.values)}const MM={kernelName:Fi,backendName:"cpu",kernelFunc:FM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OM(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,{filterSize:a,strides:i,pad:l,dimRoundingMode:c}=s;mt([r,o],"avgPool3DGrad");const u=Tn(o.shape,a,i,1,l,c),d=u.strideDepth,h=u.strideHeight,p=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,b=u.dilationDepth,x=u.dilationHeight,y=u.dilationWidth,w=u.effectiveFilterDepth,I=u.effectiveFilterHeight,C=u.effectiveFilterWidth,S=w-1-u.padInfo.front,T=C-1-u.padInfo.left,v=I-1-u.padInfo.top,$=Ot(o.shape,"float32"),k=1/(f*m*g),R=e.bufferSync(r);for(let F=0;F<u.batchSize;++F)for(let B=0;B<u.inChannels;++B)for(let M=0;M<u.inDepth;++M)for(let z=0;z<u.inHeight;++z)for(let j=0;j<u.inWidth;++j){const V=M-S,q=z-v,X=j-T;let Z=0;for(let Q=0;Q<w;Q+=b){const J=(V+Q)/d;if(!(J<0||J>=u.outDepth||Math.floor(J)!==J))for(let ot=0;ot<I;ot+=x){const nt=(q+ot)/h;if(!(nt<0||nt>=u.outHeight||Math.floor(nt)!==nt))for(let ut=0;ut<C;ut+=y){const xt=(X+ut)/p;if(xt<0||xt>=u.outWidth||Math.floor(xt)!==xt)continue;const dt=R.get(F,J,nt,xt,B);Z+=dt}}}$.set(Z*k,F,M,z,j,B)}return e.makeTensorInfo($.shape,$.dtype,$.values)}const LM={kernelName:Il,backendName:"cpu",kernelFunc:OM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PM(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,a=o;mt([r,o],"avgPoolGrad");const{filterSize:i,strides:l,pad:c}=s,u=Ye(a.shape,i,l,1,c),d=u.strideHeight,h=u.strideWidth,p=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,b=u.effectiveFilterHeight,x=u.effectiveFilterWidth,y=x-1-u.padInfo.left,w=b-1-u.padInfo.top,I=Ot(a.shape,"float32"),C=1/(p*f),S=e.data.get(r.dataId).values,T=Ot(r.shape,"float32",S);for(let v=0;v<u.batchSize;++v)for(let $=0;$<u.inChannels;++$)for(let k=0;k<u.inHeight;++k)for(let R=0;R<u.inWidth;++R){const F=k-w,B=R-y;let M=0;for(let z=0;z<b;z+=m){const j=(F+z)/d;if(!(j<0||j>=u.outHeight||Math.floor(j)!==j))for(let V=0;V<x;V+=g){const q=(B+V)/h;if(q<0||q>=u.outWidth||Math.floor(q)!==q)continue;const X=T.get(v,j,q,$);M+=X}}I.set(M*C,v,k,R,$)}return e.makeTensorInfo(I.shape,I.dtype,I.values)}const BM={kernelName:wl,backendName:"cpu",kernelFunc:PM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,scale:o,offset:a,mean:i,variance:l}=t;N(i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),N(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),N(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),mt([r,i,l,o,a],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);const u=e.data.get(r.dataId).values,d=e.data.get(i.dataId).values,h=e.data.get(l.dataId).values,p=o?e.data.get(o.dataId).values:new Float32Array([1]),f=a?e.data.get(a.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,b=p.length,x=h.length,y=d.length;let w=0,I=0,C=0,S=0;for(let T=0;T<u.length;++T)m[T]=f[w++]+(u[T]-d[I++])*p[C++]/Math.sqrt(h[S++]+c),w>=g&&(w=0),I>=y&&(I=0),C>=b&&(C=0),S>=x&&(S=0);return e.makeTensorInfo(r.shape,r.dtype,m)}const WM={kernelName:Qo,backendName:"cpu",kernelFunc:zM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,crops:a}=s;mt([r],"batchToSpaceND");const i=o.reduce((b,x)=>b*x),l=Yr(r.shape,o,i),c=Zr(l.length,o.length),u=Jr(r.shape,o,i),d=wc(a,o.length),h=Ic(u,a,o.length),p=ce({inputs:{x:r},backend:e,attrs:{shape:l}}),f=fn({inputs:{x:p},backend:e,attrs:{perm:c}}),m=ce({inputs:{x:f},backend:e,attrs:{shape:u}}),g=uo({inputs:{x:m},backend:e,attrs:{begin:d,size:h}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),g}const UM={kernelName:Mi,backendName:"cpu",kernelFunc:VM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GM(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:a}=s,i=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values,c=Ff(i,l,o.dtype,o.shape,a);return e.makeTensorInfo([a],o.dtype,c)}const HM={kernelName:Oi,backendName:"cpu",kernelFunc:GM};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jM(n){const{inputs:t,backend:e}=n,{s0:s,s1:r}=t,o=e.data.get(s.dataId).values,a=e.data.get(r.dataId).values,i=vt(Array.from(o),Array.from(a));return e.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const qM={kernelName:Zd,backendName:"cpu",kernelFunc:jM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KM=Jt(Tr,(n,t)=>{const e=t;return n>e.clipValueMax?e.clipValueMax:n<e.clipValueMin?e.clipValueMin:n}),XM={kernelName:Tr,backendName:"cpu",kernelFunc:KM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YM={kernelName:Cl,backendName:"cpu",kernelFunc:n=>{const{x:t}=n.inputs,e=n.backend,s=new Float32Array(L(t.shape)),r=e.data.get(t.dataId),o=r.complexTensorInfos.real,a=r.complexTensorInfos.imag,i=e.data.get(o.dataId).values,l=e.data.get(a.dataId).values;for(let c=0;c<i.length;c++){const u=i[c],d=l[c];s[c]=Math.hypot(u,d)}return e.makeOutput(s,t.shape,"float32")}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function di(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.data.get(s.dataId).complexTensorInfos.imag,o=e.data.get(r.dataId).values;return e.makeTensorInfo(r.shape,r.dtype,o)}const ZM={kernelName:ah,backendName:"cpu",kernelFunc:di};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hi(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s,o=Et(r,t[0].shape)[0],a=t.map(m=>m.shape);bc(a,o);let i=Fn(t.map(m=>m.shape),o);if(L(i)===0)return e.makeTensorInfo(i,t[0].dtype,[]);const l=t.filter(m=>L(m.shape)>0);if(l.length===1)return Ts({inputs:{x:l[0]},backend:e});if(l[0].dtype==="complex64"){const m=l.map(w=>ao({inputs:{input:w},backend:e})),g=l.map(w=>di({inputs:{input:w},backend:e})),b=hi({inputs:m,backend:e,attrs:{axis:o}}),x=hi({inputs:g,backend:e,attrs:{axis:o}}),y=In({inputs:{real:b,imag:x},backend:e});return m.forEach(w=>e.disposeIntermediateTensorInfo(w)),g.forEach(w=>e.disposeIntermediateTensorInfo(w)),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(x),y}const c=l.map(m=>{const b=[-1,L(m.shape.slice(o))];return ce({inputs:{x:m},backend:e,attrs:{shape:b}})}),u=c.map(m=>({vals:e.data.get(m.dataId).values,shape:m.shape}));i=Fn(c.map(m=>m.shape),1);const d=c[0].shape[0]===1,h=Mf(u,i,t[0].dtype,d),p=Fn(l.map(m=>m.shape),o),f=e.makeTensorInfo(p,t[0].dtype,h);return c.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}const JM={kernelName:Li,backendName:"cpu",kernelFunc:hi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W0(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=s;mt([r,o],"conv2d");const d=ss(l),h=we(r.shape,o.shape,a,c,i,u,!1,d),p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,b=h.padInfo.left,x=h.padInfo.top,y=h.dataFormat==="channelsLast",w=new ze(h.outShape,r.dtype),I=pt(r.shape),C=pt(o.shape),S=I[0],T=y?I[1]:I[2],v=y?I[2]:1,$=y?1:I[1],k=w.strides[0],R=y?w.strides[1]:w.strides[2],F=y?w.strides[2]:1,B=y?1:w.strides[1],M=e.data.get(r.dataId).values,z=e.data.get(o.dataId).values,j=w.values;for(let V=0;V<h.batchSize;++V){const q=V*S,X=V*k;for(let Z=0;Z<h.outHeight;++Z){const Q=X+Z*R,J=Z*h.strideHeight-x;for(let ot=0;ot<p;++ot){const nt=J+ot*m;if(nt<0||nt>=h.inHeight)continue;const ut=ot*C[0],xt=q+nt*T;for(let dt=0;dt<h.outWidth;++dt){const yt=Q+dt*F,Nt=dt*h.strideWidth-b;for(let _t=0;_t<f;++_t){const Bt=Nt+_t*g;if(Bt<0||Bt>=h.inWidth)continue;const Yt=ut+_t*C[1],qt=xt+Bt*v;let Gt=Yt;for(let Tt=0;Tt<h.inChannels;++Tt){const Qt=M[qt+Tt*$];for(let te=0;te<h.outChannels;++te)j[yt+te*B]+=Qt*z[Gt+te];Gt+=h.outChannels}}}}}}return e.makeTensorInfo(w.shape,w.dtype,j)}const QM={kernelName:Po,backendName:"cpu",kernelFunc:W0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,pad:i,dataFormat:l,dimRoundingMode:c,filterShape:u}=s;mt([r,o],"conv2dBackpropFilter");const d=ss(l),h=we(r.shape,u,a,1,i,c,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,b=h.dataFormat==="channelsLast",x=new ze(h.filterShape,"float32"),y=h.padInfo.left,w=h.padInfo.top,I=e.data.get(r.dataId).values,C=e.data.get(o.dataId).values,S=new ze(r.shape,r.dtype,I),T=new ze(o.shape,o.dtype,C);for(let v=0;v<m;++v){const $=Math.max(0,Math.ceil((w-v)/p)),k=Math.min(h.outHeight,(h.inHeight+w-v)/p);for(let R=0;R<g;++R){const F=Math.max(0,Math.ceil((y-R)/f)),B=Math.min(h.outWidth,(h.inWidth+y-R)/f);for(let M=0;M<h.inChannels;++M)for(let z=0;z<h.outChannels;++z){let j=0;for(let V=0;V<h.batchSize;++V)for(let q=$;q<k;++q){const X=v+q*p-w;for(let Z=F;Z<B;++Z){const Q=R+Z*f-y;b?j+=S.get(V,X,Q,M)*T.get(V,q,Z,z):j+=S.get(V,M,X,Q)*T.get(V,z,q,Z)}}x.set(j,v,R,M,z)}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}const eO={kernelName:Qd,backendName:"cpu",kernelFunc:tO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nO(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{inputShape:a,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=s;mt([r,o],"conv2dBackpropInput");const d=pt(o.shape),h=pt(r.shape);let p=ss(c);const f=we(a,o.shape,i,1,l,u,!1,p),m=new ze(f.inShape,"float32"),g=m.values,b=e.data.get(r.dataId).values,x=e.data.get(o.dataId).values,[y,w,I]=d,{batchSize:C,filterHeight:S,filterWidth:T,inChannels:v,inHeight:$,inWidth:k,outChannels:R,outHeight:F,outWidth:B,strideHeight:M,strideWidth:z}=f;p=f.dataFormat;const j=S-1-f.padInfo.top,V=T-1-f.padInfo.left,q=p==="channelsLast",X=m.strides[0],Z=q?m.strides[1]:m.strides[2],Q=q?m.strides[2]:1,J=q?1:m.strides[1],ot=h[0],nt=q?h[1]:h[2],ut=q?h[2]:1,xt=q?1:h[1];for(let dt=0;dt<C;++dt)for(let yt=0;yt<v;++yt)for(let Nt=0;Nt<$;++Nt){const _t=Nt-j,Bt=Math.max(0,Math.ceil(_t/M)),Yt=Math.min(F,(S+_t)/M);for(let qt=0;qt<k;++qt){const Gt=qt-V,Tt=Math.max(0,Math.ceil(Gt/z)),Qt=Math.min(B,(T+Gt)/z);let te=0;for(let ge=Bt;ge<Yt;++ge){const $n=ge*M-_t;for(let Ge=Tt;Ge<Qt;++Ge){const Zn=Ge*z-Gt,gn=ot*dt+nt*ge+ut*Ge,Ln=y*(S-1-$n)+w*(T-1-Zn)+I*yt;for(let Jn=0;Jn<R;++Jn){const He=b[gn+xt*Jn],un=x[Ln+Jn];te+=He*un}}}const Cn=X*dt+Z*Nt+Q*qt+J*yt;g[Cn]=te}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}const sO={kernelName:Bo,backendName:"cpu",kernelFunc:nO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:l}=s;mt([r,o],"conv3d");const c=ns(r.shape,o.shape,a,l,i),{filterDepth:u,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=c,b=g.front,x=g.left,y=g.top,w=new ze(c.outShape,r.dtype),I=e.data.get(r.dataId).values,C=e.data.get(o.dataId).values,S=w.values,T=pt(r.shape),v=pt(o.shape);for(let $=0;$<c.batchSize;++$){const k=$*T[0],R=$*w.strides[0];for(let F=0;F<c.outDepth;++F){const B=R+F*w.strides[1],M=F*c.strideDepth-b;for(let z=0;z<u;++z){const j=M+z*p;if(j<0||j>=c.inDepth)continue;const V=z*v[0],q=k+j*T[1];for(let X=0;X<c.outHeight;++X){const Z=B+X*w.strides[2],Q=X*c.strideHeight-y;for(let J=0;J<d;++J){const ot=Q+J*f;if(ot<0||ot>=c.inHeight)continue;const nt=V+J*v[1],ut=q+ot*T[2];for(let xt=0;xt<c.outWidth;++xt){const dt=Z+xt*c.outChannels,yt=xt*c.strideWidth-x;for(let Nt=0;Nt<h;++Nt){const _t=yt+Nt*m;if(_t<0||_t>=c.inWidth)continue;const Bt=nt+Nt*v[2],Yt=ut+_t*c.inChannels;let qt=Bt;for(let Gt=0;Gt<c.inChannels;++Gt){const Tt=I[Yt+Gt];for(let Qt=0;Qt<c.outChannels;++Qt)S[dt+Qt]+=Tt*C[qt+Qt];qt+=c.outChannels}}}}}}}}return e.makeTensorInfo(w.shape,w.dtype,w.values)}const oO={kernelName:zo,backendName:"cpu",kernelFunc:rO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,pad:i,filterShape:l}=s;mt([r,o],"conv3dBackpropFilterV2");const c=pt(r.shape),u=pt(o.shape),d=ns(r.shape,l,a,1,i),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,b=d.filterWidth,x=new ze(d.filterShape,"float32"),y=x.values,[w,I,C,S]=x.strides,T=e.data.get(o.dataId).values,[v,$,k,R]=u,F=e.data.get(r.dataId).values,[B,M,z,j]=c,V=d.padInfo.front,q=d.padInfo.left,X=d.padInfo.top;for(let Z=0;Z<m;++Z){const Q=Math.max(0,Math.ceil((V-Z)/h)),J=Math.min(d.outDepth,(d.inDepth+V-Z)/h),ot=Z*w;for(let nt=0;nt<g;++nt){const ut=Math.max(0,Math.ceil((X-nt)/p)),xt=Math.min(d.outHeight,(d.inHeight+X-nt)/p),dt=nt*I+ot;for(let yt=0;yt<b;++yt){const Nt=Math.max(0,Math.ceil((q-yt)/f)),_t=Math.min(d.outWidth,(d.inWidth+q-yt)/f),Bt=yt*C+dt;for(let Yt=0;Yt<d.inChannels;++Yt){const qt=Yt*S+Bt;for(let Gt=0;Gt<d.outChannels;++Gt){let Tt=0;for(let Qt=0;Qt<d.batchSize;++Qt){const te=Qt*B,Cn=Qt*v;for(let ge=Q;ge<J;++ge){const Ge=(Z+ge*h-V)*M+te,Zn=ge*$+Cn;for(let gn=ut;gn<xt;++gn){const Jn=(nt+gn*p-X)*z+Ge,He=gn*k+Zn;for(let un=Nt;un<_t;++un){const xo=(yt+un*f-q)*j+Jn,ps=un*R+He;Tt+=F[xo+Yt]*T[ps+Gt]}}}}y[qt+Gt]=Tt}}}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}const iO={kernelName:Pi,backendName:"cpu",kernelFunc:aO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uO(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{pad:a,strides:i,inputShape:l}=s;mt([r],"conv3dBackpropInputV2");const c=pt(r.shape),u=pt(o.shape),d=ns(l,o.shape,i,1,a),h=new ze(d.inShape,"float32"),p=h.values,[f,m,g,b]=h.strides,x=e.data.get(r.dataId).values,[y,w,I,C]=c,S=e.data.get(o.dataId).values,[T,v,$,k]=u,{batchSize:R,filterDepth:F,filterHeight:B,filterWidth:M,inChannels:z,inDepth:j,inHeight:V,inWidth:q,outChannels:X,outDepth:Z,outHeight:Q,outWidth:J,strideDepth:ot,strideHeight:nt,strideWidth:ut}=d,xt=F-1-d.padInfo.front,dt=B-1-d.padInfo.top,yt=M-1-d.padInfo.left;for(let Nt=0;Nt<R;++Nt)for(let _t=0;_t<z;++_t)for(let Bt=0;Bt<j;++Bt){const Yt=Bt-xt,qt=Math.max(0,Math.ceil(Yt/ot)),Gt=Math.min(Z,(F+Yt)/ot);for(let Tt=0;Tt<V;++Tt){const Qt=Tt-dt,te=Math.max(0,Math.ceil(Qt/nt)),Cn=Math.min(Q,(B+Qt)/nt);for(let ge=0;ge<q;++ge){const $n=ge-yt,Ge=Math.max(0,Math.ceil($n/ut)),Zn=Math.min(J,(M+$n)/ut);let gn=0;for(let Ln=qt;Ln<Gt;++Ln){const Jn=Ln*ot-Yt;for(let He=te;He<Cn;++He){const un=He*nt-Qt;for(let Hs=Ge;Hs<Zn;++Hs){const xo=Hs*ut-$n,ps=y*Nt+w*Ln+I*He+C*Hs,gl=T*(F-1-Jn)+v*(B-1-un)+$*(M-1-xo)+k*_t;for(let Rs=0;Rs<X;++Rs){const Cr=x[ps+Rs],je=S[gl+Rs];gn+=Cr*je}}}}p[f*Nt+m*Bt+g*Tt+b*ge+_t]=gn}}}return e.makeTensorInfo(h.shape,h.dtype,h.values)}const lO={kernelName:Bi,backendName:"cpu",kernelFunc:uO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cO=Jt(Wo,n=>Math.cos(n)),dO={kernelName:Wo,backendName:"cpu",kernelFunc:cO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hO=Jt(Vo,n=>Math.cosh(n)),pO={kernelName:Vo,backendName:"cpu",kernelFunc:hO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fO(n){const{inputs:t,backend:e,attrs:s}=n,{image:r,boxes:o,boxInd:a}=t,{cropSize:i,method:l,extrapolationValue:c}=s,[u,d,h,p]=r.shape,f=o.shape[0],[m,g]=i,b=Ot([f,m,g,p],"float32"),x=e.data.get(o.dataId).values,y=e.data.get(a.dataId).values,w=e.data.get(r.dataId).values,I=pt(r.shape),C=pt(b.shape);for(let S=0;S<f;S++){const T=S*4,v=x[T],$=x[T+1],k=x[T+2],R=x[T+3],F=y[S];if(F>=u)continue;const B=m>1?(k-v)*(d-1)/(m-1):0,M=g>1?(R-$)*(h-1)/(g-1):0;for(let z=0;z<m;z++){const j=m>1?v*(d-1)+z*B:.5*(v+k)*(d-1);if(j<0||j>d-1){for(let V=0;V<g;V++)for(let q=0;q<p;q++){const X=q+V*C[2]+z*C[1]+S*C[0];b.values[X]=c}continue}if(l==="bilinear"){const V=Math.floor(j),q=Math.ceil(j),X=j-V;for(let Z=0;Z<g;Z++){const Q=g>1?$*(h-1)+Z*M:.5*($+R)*(h-1);if(Q<0||Q>h-1){for(let ut=0;ut<p;ut++){const xt=ut+Z*C[2]+z*C[1]+S*C[0];b.values[xt]=c}continue}const J=Math.floor(Q),ot=Math.ceil(Q),nt=Q-J;for(let ut=0;ut<p;ut++){let xt=ut+J*I[2]+V*I[1]+F*I[0];const dt=w[xt];xt=ut+ot*I[2]+V*I[1]+F*I[0];const yt=w[xt];xt=ut+J*I[2]+q*I[1]+F*I[0];const Nt=w[xt];xt=ut+ot*I[2]+q*I[1]+F*I[0];const _t=w[xt],Bt=dt+(yt-dt)*nt,Yt=Nt+(_t-Nt)*nt;xt=ut+Z*C[2]+z*C[1]+S*C[0],b.values[xt]=Bt+(Yt-Bt)*X}}}else for(let V=0;V<g;++V){const q=g>1?$*(h-1)+V*M:.5*($+R)*(h-1);if(q<0||q>h-1){for(let Q=0;Q<p;Q++){const J=Q+V*C[2]+z*C[1]+S*C[0];b.values[J]=c}continue}const X=Math.round(q),Z=Math.round(j);for(let Q=0;Q<p;Q++){const J=Q+X*I[2]+Z*I[1]+F*I[0],ot=Q+V*C[2]+z*C[1]+S*C[0];b.values[ot]=w[J]}}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}const mO={kernelName:Wi,backendName:"cpu",kernelFunc:fO};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:a,reverse:i}=s;mt(r,"cumprod");const l=ue([o],r.shape.length);let c=r;l!=null&&(c=fn({inputs:{x:r},backend:e,attrs:{perm:l}}));const u=se(1,r.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const d=xn(c.dtype,"int32"),h=qd(L(c.shape),d),p=e.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(b,x)=>b+f-x-1:(b,x)=>b+x;for(let b=0;b<p.length;b+=f)for(let x=0;x<f;x++){const y=m(b,x);if(x===0)h[y]=a?1:p[y];else{const w=m(b,x-1);h[y]=a?p[w]*h[w]:p[y]*h[w]}}const g=e.makeTensorInfo(c.shape,d,h);if(l!=null){const b=xs(l),x=fn({inputs:{x:g},backend:e,attrs:{perm:b}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(c),x}return g}const bO={kernelName:zi,backendName:"cpu",kernelFunc:gO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:a,reverse:i}=s;mt(r,"cumsum");const l=ue([o],r.shape.length);let c=r;l!=null&&(c=fn({inputs:{x:r},backend:e,attrs:{perm:l}}));const u=se(1,r.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const d=xn(c.dtype,"int32"),h=Ke(L(c.shape),d),p=e.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(b,x)=>b+f-x-1:(b,x)=>b+x;for(let b=0;b<p.length;b+=f)for(let x=0;x<f;x++){const y=m(b,x);if(x===0)h[y]=a?0:p[y];else{const w=m(b,x-1);h[y]=a?p[w]+h[w]:p[y]+h[w]}}const g=e.makeTensorInfo(c.shape,d,h);if(l!=null){const b=xs(l),x=fn({inputs:{x:g},backend:e,attrs:{perm:b}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(c),x}return g}const yO={kernelName:Uo,backendName:"cpu",kernelFunc:xO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:a,binaryOutput:i}=s;if(r.shape.length===1){const l=e.data.get(r.dataId).values,c=e.data.get(o.dataId).values,u=Ff(l,c,o.dtype,o.shape,a);return e.makeTensorInfo([a],o.dtype,u)}else if(r.shape.length===2){const l=e.bufferSync(r),c=e.bufferSync(o),u=Hw(l,c,a,i);return e.makeTensorInfo(u.shape,o.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const IO={kernelName:$l,backendName:"cpu",kernelFunc:wO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockSize:o,dataFormat:a}=s;N(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);const i=r.shape[0],l=r.shape[1],c=r.shape[2],u=r.shape[3],d=l*o,h=c*o,p=u/(o*o),f=e.data.get(r.dataId).values,m=new Float32Array(i*d*h*p);let g=0;for(let b=0;b<i;++b)for(let x=0;x<d;++x){const y=Math.floor(x/o),w=x%o;for(let I=0;I<h;++I){const C=Math.floor(I/o),S=I%o,T=(w*o+S)*p;for(let v=0;v<p;++v){const k=v+T+u*(C+c*(y+l*b));m[g++]=f[k]}}}return e.makeTensorInfo([i,d,h,p],r.dtype,m)}const CO={kernelName:Vi,backendName:"cpu",kernelFunc:kO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V0(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:l,dimRoundingMode:c}=s;mt([r,o],"depthwiseConv2DNative");const u=pt(r.shape),d=pt(o.shape);let h=l;h==null&&(h=[1,1]),N(We(a,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${h}'`);const p=we(r.shape,o.shape,a,h,i,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:b,padInfo:x}=p,y=x.left,w=x.top,I=p.outChannels/p.inChannels,C=new ze(p.outShape,r.dtype),S=e.data.get(r.dataId).values,T=e.data.get(o.dataId).values,v=C.values;for(let $=0;$<p.batchSize;++$){const k=$*u[0],R=$*C.strides[0];for(let F=0;F<p.outHeight;++F){const B=R+F*C.strides[1],M=F*p.strideHeight-w;for(let z=0;z<f;++z){const j=M+z*g;if(j<0||j>=p.inHeight)continue;const V=z*d[0],q=k+j*u[1];for(let X=0;X<p.outWidth;++X){const Z=B+X*C.strides[2],Q=X*p.strideWidth-y;for(let J=0;J<m;++J){const ot=Q+J*b;if(ot<0||ot>=p.inWidth)continue;const nt=V+J*d[1],ut=q+ot*p.inChannels;let xt=Z,dt=nt;for(let yt=0;yt<p.inChannels;++yt){const Nt=S[ut+yt];for(let _t=0;_t<I;++_t)v[xt+_t]+=Nt*T[dt+_t];xt+=I,dt+=I}}}}}}return e.makeTensorInfo(C.shape,C.dtype,C.values)}const $O={kernelName:Go,backendName:"cpu",kernelFunc:V0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vO(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,dilations:i,pad:l,dimRoundingMode:c,filterShape:u}=s;mt([r,o],"depthwiseConv2dNativeBackpropFilter");const d=we(r.shape,u,a,i,l,c,!0),{strideHeight:h,strideWidth:p,filterHeight:f,filterWidth:m}=d,g=new ze(d.filterShape,"float32"),b=d.padInfo.left,x=d.padInfo.top,y=d.outChannels/d.inChannels,w=e.data.get(r.dataId).values,I=new ze(r.shape,r.dtype,w),C=e.data.get(o.dataId).values,S=new ze(o.shape,o.dtype,C);for(let T=0;T<f;++T){const v=Math.max(0,Math.ceil((x-T)/h)),$=Math.min(d.outHeight,(d.inHeight+x-T)/h);for(let k=0;k<m;++k){const R=Math.max(0,Math.ceil((b-k)/p)),F=Math.min(d.outWidth,(d.inWidth+b-k)/p);for(let B=0;B<d.outChannels;++B){const M=Math.trunc(B/y),z=B%y;let j=0;for(let V=0;V<d.batchSize;++V)for(let q=v;q<$;++q){const X=T+q*h-x;for(let Z=R;Z<F;++Z){const Q=k+Z*p-b;j+=I.get(V,X,Q,M)*S.get(V,q,Z,B)}}g.set(j,T,k,M,z)}}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}const SO={kernelName:th,backendName:"cpu",kernelFunc:vO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NO(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{strides:a,dilations:i,pad:l,dimRoundingMode:c,inputShape:u}=s;mt([r,o],"depthwiseConv2DNativeBackpropInput");const d=pt(r.shape),h=pt(o.shape),p=we(u,o.shape,a,i,l,c,!0),f=new ze(p.inShape,"float32"),m=f.values,[g,b,x]=f.strides,y=e.data.get(r.dataId).values,[w,I,C]=d,S=e.data.get(o.dataId).values,[T,v,$]=h,{batchSize:k,filterHeight:R,filterWidth:F,inChannels:B,inHeight:M,inWidth:z,outChannels:j,outHeight:V,outWidth:q,strideHeight:X,strideWidth:Z}=p,Q=R-1-p.padInfo.top,J=F-1-p.padInfo.left,ot=j/B;for(let nt=0;nt<k;++nt)for(let ut=0;ut<B;++ut)for(let xt=0;xt<M;++xt){const dt=xt-Q,yt=Math.max(0,Math.ceil(dt/X)),Nt=Math.min(V,(R+dt)/X);for(let _t=0;_t<z;++_t){const Bt=_t-J,Yt=Math.max(0,Math.ceil(Bt/Z)),qt=Math.min(q,(F+Bt)/Z);let Gt=0;for(let Tt=yt;Tt<Nt;++Tt){const Qt=Tt*X-dt;for(let te=Yt;te<qt;++te){const Cn=te*Z-Bt,ge=w*nt+I*Tt+C*te,$n=T*(R-1-Qt)+v*(F-1-Cn)+$*ut;for(let Ge=0;Ge<ot;++Ge){const Zn=ut*ot+Ge,gn=y[ge+Zn],Ln=S[$n+Ge];Gt+=gn*Ln}}}m[g*nt+b*xt+x*_t+ut]=Gt}}return e.makeTensorInfo(f.shape,f.dtype,f.values)}const TO={kernelName:eh,backendName:"cpu",kernelFunc:NO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _O(n){const{inputs:t,backend:e}=n,{x:s}=t,r=L(s.shape),o=e.data.get(s.dataId).values,a=Ot([r,r],s.dtype),i=a.values;for(let c=0;c<o.length;c++)i[c*r+c]=o[c];const l=[...s.shape,...s.shape];return e.makeTensorInfo(l,a.dtype,a.values)}const EO={kernelName:nh,backendName:"cpu",kernelFunc:_O};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RO={kernelName:Ho,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r}=n,{strides:o,pad:a,dilations:i}=e,l=t,c=l.data.get(s.dataId).values,u=s.shape.length,d=l.data.get(r.dataId).values,h=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:x,padInfo:y,strideHeight:w,strideWidth:I,filterHeight:C,filterWidth:S,dilationHeight:T,dilationWidth:v,outShape:$}=sr(s.shape,r.shape,o,a,"NHWC",i),k=L($),R=$.length,F=Ie(s.dtype,k);for(let M=0;M<p;++M)for(let z=0;z<b;++z){const j=z*w-y.top;for(let V=0;V<x;++V){const q=V*I-y.left;for(let X=0;X<g;++X){let Z=Number.MIN_SAFE_INTEGER;for(let J=0;J<C;++J){const ot=j+J*T;if(ot>=0&&ot<f)for(let nt=0;nt<S;++nt){const ut=q+nt*v;if(ut>=0&&ut<m){const xt=fs([M,ot,ut,X],u,pt(s.shape)),dt=fs([J,nt,X],h,pt(r.shape)),yt=c[xt]+d[dt];yt>Z&&(Z=yt)}}}const Q=fs([M,z,V,X],R,pt($));F[Q]=Z}}}return{dataId:l.write(Dr(F,s.dtype),$,s.dtype),shape:$,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AO={kernelName:Gi,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r,dy:o}=n,{strides:a,pad:i,dilations:l}=e,c=t,u=Qn(s.shape,c.data.get(s.dataId).values),d=Qn(r.shape,c.data.get(r.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:x,strideHeight:y,strideWidth:w,filterHeight:I,filterWidth:C,dilationHeight:S,dilationWidth:T,outShape:v}=sr(s.shape,r.shape,a,i,"NHWC",l);N(o.rank===v.length,()=>`Error in ${Gi}, dy must have the same rank as output ${v.length}, but got ${o.rank}`);const $=Qn(v,c.data.get(o.dataId).values),k=Om(r.shape,r.dtype);for(let F=0;F<h;++F)for(let B=0;B<g;++B){const M=B*y-x.top;for(let z=0;z<b;++z){const j=z*w-x.left;for(let V=0;V<m;++V){let q=Number.MIN_SAFE_INTEGER,X=0,Z=0;for(let Q=0;Q<I;++Q){const J=M+Q*S;if(J>=0&&J<p)for(let ot=0;ot<C;++ot){const nt=j+ot*T;if(nt>=0&&nt<f){const ut=u[F][J][nt][V]+d[Q][ot][V];ut>q&&(q=ut,X=Q,Z=ot)}}}k[X][Z][V]+=$[F][B][z][V]}}}return{dataId:c.write(Dr(k,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DO={kernelName:Ui,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:r,dy:o}=n,{strides:a,pad:i,dilations:l}=e,c=t,u=Qn(s.shape,c.data.get(s.dataId).values),d=Qn(r.shape,c.data.get(r.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:x,strideHeight:y,strideWidth:w,filterHeight:I,filterWidth:C,dilationHeight:S,dilationWidth:T,outShape:v}=sr(s.shape,r.shape,a,i,"NHWC",l);N(o.rank===v.length,()=>`Error in ${Ui}, dy must have the same rank as output ${v.length}, but got ${o.rank}`);const $=Qn(v,c.data.get(o.dataId).values),k=Om(s.shape,s.dtype);for(let F=0;F<h;++F)for(let B=0;B<g;++B){const M=B*y-x.top;for(let z=0;z<b;++z){const j=z*w-x.left;for(let V=0;V<m;++V){let q=Number.MIN_SAFE_INTEGER,X=M<0?0:M,Z=j<0?0:j;for(let Q=0;Q<I;++Q){const J=M+Q*S;if(J>=0&&J<p)for(let ot=0;ot<C;++ot){const nt=j+ot*T;if(nt>=0&&nt<f){const ut=u[F][J][nt][V]+d[Q][ot][V];ut>q&&(q=ut,X=J,Z=nt)}}}k[F][X][Z][V]+=$[F][B][z][V]}}}return{dataId:c.write(Dr(k,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FO(n){const{inputs:t,backend:e,attrs:s}=n,{image:r}=t,{canvas:o,options:a}=s,{contextOptions:i,imageOptions:l}=a||{},c=(l==null?void 0:l.alpha)||1,u=(i==null?void 0:i.contextType)||"2d";if(u!=="2d")throw new Error(`Context type ${i.contextType} is not supported by the CPU backend.`);const d=o.getContext(u,(i==null?void 0:i.contextAttributes)||{});if(d==null)throw new Error(`Could not get the context with ${u} type.`);const[h,p]=r.shape.slice(0,2),f=r.shape.length===2?1:r.shape[2],m=e.data.get(r.dataId).values,g=r.dtype==="float32"?255:1,b=new Uint8ClampedArray(p*h*4);for(let y=0;y<h*p;++y){const w=[0,0,0,255*c];for(let C=0;C<f;C++){const S=m[y*f+C];if(r.dtype==="float32"){if(S<0||S>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${S}.`)}else if(r.dtype==="int32"&&(S<0||S>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${S}.`);f===1?(w[0]=S*g,w[1]=S*g,w[2]=S*g):w[C]=S*g}const I=y*4;b[I+0]=Math.round(w[0]),b[I+1]=Math.round(w[1]),b[I+2]=Math.round(w[2]),b[I+3]=Math.round(w[3])}o.width=p,o.height=h;const x=new ImageData(b,p,h);return d.putImageData(x,0,0),r}const MO={kernelName:_C,backendName:"cpu",kernelFunc:FO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nl(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;mt(r,"sum");let i;r.dtype==="bool"?i=mr({inputs:{x:r},backend:e,attrs:{dtype:"int32"}}):i=Ts({inputs:{x:r},backend:e});const l=i.shape.length,c=Et(o,i.shape),u=ue(c,l);let d=c,h=i;u!=null&&(h=fn({inputs:{x:i},backend:e,attrs:{perm:u}}),d=se(d.length,l)),ie("sum",d,h.shape.length);const[p,f]=he(h.shape,d),m=xn(h.dtype,"int32");let g=Jc(e,p,m);const b=L(f),x=e.data.get(g.dataId).values,y=e.data.get(h.dataId).values;for(let w=0;w<x.length;++w){const I=w*b;let C=0;for(let S=0;S<b;++S)C+=y[I+S];x[w]=C}if(a){const w=ee(g.shape,c),I=g;g=ce({inputs:{x:g},backend:e,attrs:{shape:w}}),e.disposeIntermediateTensorInfo(I)}return e.disposeIntermediateTensorInfo(i),u!=null&&e.disposeIntermediateTensorInfo(h),g}const OO={kernelName:Pa,backendName:"cpu",kernelFunc:nl};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LO(n){const{inputs:t,backend:e,attrs:s}=n,{equation:r}=s,o=t,{allDims:a,summedDims:i,idDims:l}=Rp(r,o.length);Dp(a.length,l,o);const{path:c,steps:u}=Fp(i,l),d=u.length;let h=null,p=a.length;const f=[];for(let m=0;m<d;++m){for(const g of u[m]){const{permutationIndices:b,expandDims:x}=Ap(p,l[g]);let y;Mp(b)?y=o[g]:(y=fn({inputs:{x:o[g]},backend:e,attrs:{perm:b}}),f.push(y));const w=y.shape.slice();for(let I=0;I<x.length;++I)w.splice(x[I],0,1);Kt(y.shape,w)||(y=ce({inputs:{x:y},backend:e,attrs:{shape:w}}),f.push(y)),h===null?h=y:(h=Qc({inputs:{a:y,b:h},backend:e}),f.push(h))}m<d-1&&(c[m]>=0&&(h=nl({inputs:{x:h},backend:e,attrs:{axis:c[m]-(a.length-p),keepDims:!1}}),f.push(h)),p--)}for(const m of f)m!==h&&e.disposeIntermediateTensorInfo(m);return h}const PO={kernelName:sh,backendName:"cpu",kernelFunc:LO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BO(n){const{inputs:t,backend:e}=n,{dy:s,y:r}=t;mt([s,r],"eluGrad");const o=new Float32Array(L(r.shape)),a=e.data.get(r.dataId).values,i=e.data.get(s.dataId).values;for(let l=0;l<a.length;++l){const c=a[l];c>=0?o[l]=i[l]:o[l]=i[l]*(c+1)}return e.makeTensorInfo(r.shape,"float32",o)}const zO={kernelName:Hi,backendName:"cpu",kernelFunc:BO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WO=Cp,VO=$p,UO=vp,GO=Sp,HO=Np,jO=Tp,qO=Jt(Ko,n=>{const t=Math.sign(n),e=Math.abs(n),s=1/(1+WO*e);return t*(1-((((jO*s+HO)*s+GO)*s+UO)*s+VO)*s*Math.exp(-e*e))}),KO={kernelName:Ko,backendName:"cpu",kernelFunc:qO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sd(n){const{inputs:t,backend:e,attrs:s}=n,{input:r}=t,{dim:o}=s,a=r.shape.length,i=r.shape.slice();let l=o;return o<0&&(N(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+o+1),i.splice(l,0,1),ce({inputs:{x:r},backend:e,attrs:{shape:i}})}const XO={kernelName:qi,backendName:"cpu",kernelFunc:sd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YO=ve((n,t)=>n/t),jf=Fe(jo,YO),qf={kernelName:jo,backendName:"cpu",kernelFunc:jf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U0(n,t,e){const s=n.shape,r=s[0],o=s[1],a=e.data.get(n.dataId),i=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,c=[r,o],u=L(c),d=qe("float32",u),h=qe("float32",u);for(let g=0;g<r;g++){const b=uo({inputs:{x:i},backend:e,attrs:{begin:[g,0],size:[1,o]}}),x=uo({inputs:{x:l},backend:e,attrs:{begin:[g,0],size:[1,o]}}),y=In({inputs:{real:b,imag:x},backend:e}),{real:w,imag:I}=ZO(y,t,e),C=Ws(w,I);for(let S=0;S<o;S++){const T=_p(C,S);d[g*o+S]=T.real,h[g*o+S]=T.imag}e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(y)}const p=e.makeTensorInfo(c,"float32",d),f=e.makeTensorInfo(c,"float32",h),m=In({inputs:{real:p,imag:f},backend:e});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),m}function ZO(n,t,e){const s=L(n.shape),r=e.data.get(n.dataId),o=e.data.get(r.complexTensorInfos.real.dataId).values,a=e.data.get(r.complexTensorInfos.imag.dataId).values;if(JO(s)){const i=Kf(o,a,s,t,e),l=[n.shape[0],n.shape[1]];if(t){const c=e.makeTensorInfo(l,"float32",i.real),u=e.makeTensorInfo(l,"float32",i.imag),d=e.makeTensorInfo([],"float32",Js(s,"float32")),h=Ts({inputs:{x:d},backend:e}),p=qf.kernelFunc({inputs:{a:c,b:d},backend:e}),f=qf.kernelFunc({inputs:{a:u,b:h},backend:e}),m=e.data.get(p.dataId).values,g=e.data.get(f.dataId).values;return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{const i=Ws(o,a),l=QO(i,s,t);return Bb(l)}}function JO(n){return(n&n-1)===0}function Kf(n,t,e,s,r){if(e===1)return{real:n,imag:t};const o=Ws(n,t),a=e/2,i=zb(o),l=i.real,c=i.imag,u=[l.length],d=r.makeTensorInfo(u,"float32",l),h=r.makeTensorInfo(u,"float32",c),p=In({inputs:{real:d,imag:h},backend:r}),f=Wb(o),m=f.real,g=f.imag,b=[m.length],x=r.makeTensorInfo(b,"float32",m),y=r.makeTensorInfo(b,"float32",g),w=In({inputs:{real:x,imag:y},backend:r}),I=Kf(l,c,a,s,r),C=I.real,S=I.imag,T=[C.length],v=r.makeTensorInfo(T,"float32",C),$=r.makeTensorInfo(T,"float32",S),k=In({inputs:{real:v,imag:$},backend:r}),R=Kf(m,g,a,s,r),F=R.real,B=R.imag,M=[F.length],z=r.makeTensorInfo(M,"float32",F),j=r.makeTensorInfo(M,"float32",B),V=In({inputs:{real:z,imag:j},backend:r}),q=Ub(e,s),X=[q.real.length],Z=r.makeTensorInfo(X,"float32",q.real),Q=r.makeTensorInfo(X,"float32",q.imag),J=In({inputs:{real:Z,imag:Q},backend:r}),ot=Qc({inputs:{a:J,b:V},backend:r}),nt=ci({inputs:{a:k,b:ot},backend:r}),ut=Uf({inputs:{a:k,b:ot},backend:r}),xt=ao({inputs:{input:nt},backend:r}),dt=ao({inputs:{input:ut},backend:r}),yt=di({inputs:{input:nt},backend:r}),Nt=di({inputs:{input:ut},backend:r}),_t=hi({inputs:[xt,dt],backend:r,attrs:{axis:0}}),Bt=hi({inputs:[yt,Nt],backend:r,attrs:{axis:0}}),Yt=r.data.get(_t.dataId).values,qt=r.data.get(Bt.dataId).values;return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(k),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(Z),r.disposeIntermediateTensorInfo(Q),r.disposeIntermediateTensorInfo(J),r.disposeIntermediateTensorInfo(ot),r.disposeIntermediateTensorInfo(nt),r.disposeIntermediateTensorInfo(ut),r.disposeIntermediateTensorInfo(xt),r.disposeIntermediateTensorInfo(yt),r.disposeIntermediateTensorInfo(dt),r.disposeIntermediateTensorInfo(Nt),r.disposeIntermediateTensorInfo(_t),r.disposeIntermediateTensorInfo(Bt),{real:Yt,imag:qt}}function QO(n,t,e){const s=new Float32Array(t*2);for(let r=0;r<t;r++){let o=0,a=0;for(let i=0;i<t;i++){const l=Gb(r*i,t,e),c=_p(n,i);o+=c.real*l.real-c.imag*l.imag,a+=c.real*l.imag+c.imag*l.real}e&&(o/=t,a/=t),Vb(s,o,a,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t3(n){const{inputs:t,backend:e}=n,{input:s}=t,r=L(s.shape),o=s.shape[s.shape.length-1],a=r/o,i=ce({inputs:{x:s},backend:e,attrs:{shape:[a,o]}}),l=U0(i,!1,e),c=ce({inputs:{x:l},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),c}const e3={kernelName:rh,backendName:"cpu",kernelFunc:t3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xf(n){const{backend:t,attrs:e}=n,{shape:s,value:r,dtype:o}=e,a=o||Sr(r),i=Ie(a,L(s));return s3(i,r,a),t.makeTensorInfo(s,a,i)}const n3={kernelName:vl,backendName:"cpu",kernelFunc:Xf};function s3(n,t,e){n.fill(t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r3={kernelName:Ki,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,r=e,o=qe(s.dtype,L(s.shape)),[a,i,l,c]=s.shape,u=r.data.get(s.dataId).values;for(let h=0;h<a;h++){const p=h*l*i*c;for(let f=0;f<i;f++){const m=f*(l*c);for(let g=0;g<l;g++){const b=g*c;for(let x=0;x<c;x++){const y=Math.round(l-g-1),w=p+m+b+x;let I=u[w];if(y>=0&&y<l){const C=y*c,S=p+m+C+x;I=u[S]}o[w]=I}}}}return{dataId:r.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o3(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s;let m=W0({inputs:{x:r,filter:o},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h}});if(a){const g=m;if(u==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){const b=ce({inputs:{x:a},backend:e,attrs:{shape:[a.shape[0],1,1]}});m=ci({inputs:{a:m,b},backend:e}),e.disposeIntermediateTensorInfo(b)}else m=ci({inputs:{a:m,b:a},backend:e});e.disposeIntermediateTensorInfo(g)}if(p){const g=m;if(u==="NCHW"&&p==="prelu"&&i.shape.length===1&&i.shape[0]!==1){const b=ce({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});m=nd(e,m,p,b,f),e.disposeIntermediateTensorInfo(b)}else m=nd(e,m,p,i,f);e.disposeIntermediateTensorInfo(g)}return m}const a3={kernelName:Ha,backendName:"cpu",kernelFunc:o3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i3(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s;let m=V0({inputs:{x:r,filter:o},backend:e,attrs:{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h}});if(a){const g=m;m=ci({inputs:{a:m,b:a},backend:e}),e.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=nd(e,m,p,i,f),e.disposeIntermediateTensorInfo(g)}return m}const u3={kernelName:Bl,backendName:"cpu",kernelFunc:i3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l3(n){const{inputs:t,backend:e}=n,{params:s,indices:r}=t,o=L(s.shape),a=r.shape,i=a[a.length-1],[l,c,u,d]=hc(s,r);if(c===0)return e.makeTensorInfo(l,s.dtype,[]);const h=e.data.get(r.dataId).values,p=e.bufferSync(s),f=e0(h,p,s.dtype,c,i,u,d,s.shape,o);return e.makeTensorInfo(l,s.dtype,f.values)}const c3={kernelName:Sl,backendName:"cpu",kernelFunc:l3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d3(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,indices:o}=t,{axis:a,batchDims:i}=s;mt([r,o],"gatherV2");const l=Et(a,r.shape)[0],c=e.data.get(o.dataId).values,u=r.shape[l];for(let w=0;w<c.length;++w){const I=c[w];N(I<=u-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${u-1}]`)}let d=i;i==null&&(d=0);const h=L(o.shape),p=vc(r,o,l,d),f=ce({inputs:{x:r},backend:e,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=ce({inputs:{x:o},backend:e,attrs:{shape:[p.batchSize,h/p.batchSize]}}),g=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],b=e.bufferSync(m),x=e.bufferSync(f),y=n0(x,b,g);return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),e.makeTensorInfo(p.outputShape,y.dtype,y.values)}const h3={kernelName:Xi,backendName:"cpu",kernelFunc:d3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p3(n){const{inputs:t,backend:e}=n,{input:s}=t,r=L(s.shape),o=s.shape[s.shape.length-1],a=r/o,i=ce({inputs:{x:s},backend:e,attrs:{shape:[a,o]}}),l=U0(i,!0,e),c=ce({inputs:{x:l},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),c}const f3={kernelName:oh,backendName:"cpu",kernelFunc:p3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m3=Jt(na,n=>Number.isFinite(n)?1:0,"bool"),g3={kernelName:na,backendName:"cpu",kernelFunc:m3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b3=Jt(sa,n=>Math.abs(n)===1/0?1:0,"bool"),x3={kernelName:sa,backendName:"cpu",kernelFunc:b3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y3=Jt(ra,n=>Number.isNaN(n)?1:0,"bool"),w3={kernelName:ra,backendName:"cpu",kernelFunc:y3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I3(n){const{backend:t,attrs:e}=n,{start:s,stop:r,num:o}=e,a=i0(s,r,o);return t.makeTensorInfo([a.length],"float32",a)}const k3={kernelName:Qi,backendName:"cpu",kernelFunc:I3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C3=Jt(ia,n=>Math.log1p(n)),$3={kernelName:ia,backendName:"cpu",kernelFunc:C3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v3=ve((n,t)=>n&&t),S3=Fe(tu,v3,null,"bool"),N3={kernelName:tu,backendName:"cpu",kernelFunc:S3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T3=Jt(eu,n=>n?0:1,"bool"),_3={kernelName:eu,backendName:"cpu",kernelFunc:T3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E3=ve((n,t)=>n||t),R3=Fe(nu,E3,null,"bool"),A3={kernelName:nu,backendName:"cpu",kernelFunc:R3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D3(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{depthRadius:o,bias:a,alpha:i,beta:l}=s;mt(r,"LRN");const c=r.shape[3],u=c-1,d=e.data.get(r.dataId).values,h=L(r.shape),p=new Float32Array(h);function f(m){const g=m%c;let b=m-g+Math.max(0,g-o);const x=m-g+Math.min(g+o,u);let y=0;for(;b<=x;b++){const w=d[b];y+=w*w}return y}for(let m=0;m<h;m++){const g=f(m),b=d[m]*Math.pow(a+i*g,-l);p[m]=b}return e.makeTensorInfo(r.shape,r.dtype,p)}const F3={kernelName:ua,backendName:"cpu",kernelFunc:D3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M3(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,y:o,dy:a}=t,{depthRadius:i,bias:l,alpha:c,beta:u}=s;mt(a,"LRNGrad");const d=L(a.shape),h=a.shape[3],p=e.data.get(a.dataId).values,f=e.data.get(r.dataId).values,m=e.data.get(o.dataId).values,g=new Float32Array(d),b=d;for(let x=0;x<b;x++){const y=x%h,w=x-y+Math.max(0,y-i),I=x-y+Math.min(h,y+i+1);let C=0;for(let S=w;S<I;S++)C+=Math.pow(f[S],2);C=c*C+l;for(let S=w;S<I;S++){let T=-2*c*u*f[S]*m[x]/C;x===S&&(T+=Math.pow(C,-u)),T*=p[x],g[S]+=T}}return e.makeTensorInfo(a.shape,r.dtype,g)}const O3={kernelName:su,backendName:"cpu",kernelFunc:M3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G0(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reductionIndices:o,keepDims:a}=s,i=e;let l=r.shape;const c=l.length,u=Et(o,l);let d=u;const h=ue(d,c);let p=i.data.get(r.dataId).values;if(h!=null){const w=new Array(c);for(let I=0;I<w.length;I++)w[I]=l[h[I]];p=Lf(p,l,r.dtype,h,w),d=se(d.length,c),l=w}mt(r,"max"),ie("max",d,c);const[f,m]=he(l,d),g=L(m),b=l0(p,g,f,r.dtype),x=i.write(b,f,r.dtype);let y=f;return a&&(y=ee(f,u)),{dataId:x,shape:y,dtype:r.dtype}}const L3={kernelName:la,backendName:"cpu",kernelFunc:G0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P3(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;mt(r,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=s,c=1;N(We(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const u=Ye(r.shape,o,a,c,i,l);let d;if(u.filterWidth===1&&u.filterHeight===1&&Kt(u.inShape,u.outShape))d=Ts({inputs:{x:r},backend:e});else{const h=e.data.get(r.dataId).values,p=pt(r.shape),f=Hf(h,r.shape,r.dtype,p,u,"max");d=e.makeTensorInfo(u.outShape,r.dtype,f.values)}return d}const B3={kernelName:da,backendName:"cpu",kernelFunc:P3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z3(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:l,dataFormat:c}=s;mt(r,"maxPool3d");const u=Tn(r.shape,o,a,1,i,l,c),d=e.data.get(r.dataId).values,h=z0(d,r.shape,r.dtype,pt(r.shape),u,"max");return e.makeTensorInfo(h.shape,"float32",h.values)}const W3={kernelName:ru,backendName:"cpu",kernelFunc:z3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V3(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,{filterSize:a,strides:i,pad:l,dimRoundingMode:c}=s;mt([r,o],"maxPool3DGrad");const u=Tn(o.shape,a,i,1,l,c),d=e.bufferSync(o),h=RM(d,u),p=u.strideDepth,f=u.strideHeight,m=u.strideWidth,g=u.dilationDepth,b=u.dilationHeight,x=u.dilationWidth,y=u.effectiveFilterDepth,w=u.effectiveFilterHeight,I=u.effectiveFilterWidth,C=y-1-u.padInfo.front,S=I-1-u.padInfo.left,T=w-1-u.padInfo.top,v=Ot(o.shape,"float32"),$=e.bufferSync(r);for(let k=0;k<u.batchSize;++k)for(let R=0;R<u.inChannels;++R)for(let F=0;F<u.inDepth;++F)for(let B=0;B<u.inHeight;++B)for(let M=0;M<u.inWidth;++M){const z=F-C,j=B-T,V=M-S;let q=0;for(let X=0;X<y;X+=g){const Z=(z+X)/p;if(!(Z<0||Z>=u.outDepth||Math.floor(Z)!==Z))for(let Q=0;Q<w;Q+=b){const J=(j+Q)/f;if(!(J<0||J>=u.outHeight||Math.floor(J)!==J))for(let ot=0;ot<I;ot+=x){const nt=(V+ot)/m;if(nt<0||nt>=u.outWidth||Math.floor(nt)!==nt)continue;const ut=y*w*I-1-h.get(k,Z,J,nt,R),xt=X*w*I+Q*I+ot,dt=ut===xt?1:0;if(dt===0)continue;const yt=$.get(k,Z,J,nt,R);q+=yt*dt}}}v.set(q,k,F,B,M,R)}return e.makeTensorInfo(v.shape,v.dtype,v.values)}const U3={kernelName:Tl,backendName:"cpu",kernelFunc:V3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G3(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o,output:a}=t,i=o;mt([o,a],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:d}=s,h=Ye(i.shape,l,c,1,u,d),p=e.data.get(i.dataId).values,f=Ot(h.outShape,i.dtype,B0(p,i.shape,i.dtype,h).values),m=h.strideHeight,g=h.strideWidth,b=h.dilationHeight,x=h.dilationWidth,y=h.effectiveFilterHeight,w=h.effectiveFilterWidth,I=w-1-h.padInfo.left,C=y-1-h.padInfo.top,S=Ot(i.shape,"float32"),T=e.data.get(r.dataId).values,v=Ot(r.shape,"float32",T);for(let $=0;$<h.batchSize;++$)for(let k=0;k<h.inChannels;++k)for(let R=0;R<h.inHeight;++R)for(let F=0;F<h.inWidth;++F){const B=R-C,M=F-I;let z=0;for(let j=0;j<y;j+=b){const V=(B+j)/m;if(!(V<0||V>=h.outHeight||Math.floor(V)!==V))for(let q=0;q<w;q+=x){const X=(M+q)/g;if(X<0||X>=h.outWidth||Math.floor(X)!==X)continue;const Z=y*w-1-f.get($,V,X,k),Q=j*w+q,J=Z===Q?1:0;if(J===0)continue;const ot=v.get($,V,X,k);z+=ot*J}}S.set(z,$,R,F,k)}return e.makeTensorInfo(S.shape,S.dtype,S.values)}const H3={kernelName:Nl,backendName:"cpu",kernelFunc:G3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j3(n,t,e,s,r){const o=pt(t),a=Hf(n,t,e,o,r,"max"),i=B0(n,t,e,r,!0,s);return[a.values,i.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q3={kernelName:ih,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:r,strides:o,pad:a,includeBatchInIndex:i}=t,l=e;mt(s,"MaxPoolWithArgmax");const c=l.data.get(s.dataId).values,u=Ye(s.shape,r,o,[1,1],a),[d,h]=j3(c,s.shape,s.dtype,i,u),p=l.write(d,u.outShape,s.dtype),f=l.write(h,u.outShape,s.dtype);return[{dataId:p,shape:u.outShape,dtype:s.dtype},{dataId:f,shape:u.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K3(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s,i=Et(o,r.shape),c=he(r.shape,i)[1],u=L(c),d=[],h=e.makeTensorInfo([],"float32",new Float32Array([u]));d.push(h);const p=mr({inputs:{x:r},backend:e,attrs:{dtype:"float32"}});d.push(p);const f=jf({inputs:{a:p,b:h},backend:e});d.push(f);const m=nl({inputs:{x:f},backend:e,attrs:{axis:o,keepDims:a}});return d.forEach(g=>e.disposeIntermediateTensorInfo(g)),m}const X3={kernelName:ha,backendName:"cpu",kernelFunc:K3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y3(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;mt(r,"min");const i=Et(o,r.shape);let l=i;const c=ue(l,r.shape.length);let u=r;c!=null&&(u=fn({inputs:{x:r},backend:e,attrs:{perm:c}}),l=se(l.length,r.shape.length)),ie("min",l,u.shape.length);const[d,h]=he(u.shape,l),p=L(h),f=Ke(L(d),u.dtype),m=e.data.get(u.dataId).values;for(let b=0;b<f.length;++b){const x=b*p;let y=m[x];for(let w=0;w<p;++w){const I=m[x+w];(Number.isNaN(I)||I<y)&&(y=I)}f[b]=y}c!=null&&e.disposeIntermediateTensorInfo(u);const g=e.makeTensorInfo(d,u.dtype,f);if(a){const b=ee(d,i),x=ce({inputs:{x:g},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo(g),x}return g}const Z3={kernelName:pa,backendName:"cpu",kernelFunc:Y3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J3(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:o,mode:a}=s;mt(r,"mirrorPad");const i=o.map((y,w)=>y[0]+r.shape[w]+y[1]),l=o.map(y=>y[0]),c=o.map((y,w)=>y[0]+r.shape[w]),u=a==="reflect"?0:1,d=e.data.get(r.dataId).values,h=r.shape.length,p=pt(r.shape),f=L(i),m=i.length,g=pt(i),b=qe(r.dtype,f);for(let y=0;y<f;y++){let w=So(y,m,g);for(let C=0;C<m;C++)w[C]<l[C]?w[C]=l[C]*2-w[C]-u:w[C]>=c[C]&&(w[C]=(c[C]-1)*2-w[C]+u);w=w.map((C,S)=>C-l[S]);const I=fs(w,h,p);b[y]=d[I]}return{dataId:e.write(b,i,r.dtype),shape:i,dtype:r.dtype}}const Q3={kernelName:ma,backendName:"cpu",kernelFunc:J3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tL=ve((n,t)=>{const e=n%t;return n<0&&t<0||n>=0&&t>=0?e:(e+t)%t}),eL=Fe(ga,tL),nL={kernelName:ga,backendName:"cpu",kernelFunc:eL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H0(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{dim:o}=s,a=r.shape.length;let i=o;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);const l=Et([i],r.shape),c=G0({inputs:{x:r},backend:e,attrs:{reductionIndices:l,keepDims:!1}}),u=ee(c.shape,l),d=ce({inputs:{x:c},backend:e,attrs:{shape:u}}),h=Uf({inputs:{a:r,b:d},backend:e}),p=Zw({inputs:{x:h},backend:e}),f=nl({inputs:{x:p},backend:e,attrs:{axis:l,keepDims:!1}}),m=ce({inputs:{x:f},backend:e,attrs:{shape:u}}),g=jf({inputs:{a:p,b:m},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),g}const sL={kernelName:Ba,backendName:"cpu",kernelFunc:H0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rL(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{numSamples:o,seed:a,normalized:i}=s;mt(r,"multinomial");const l=i?r:H0({inputs:{logits:r},backend:e,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],d=e.data.get(l.dataId).values,h=[c,o],p=Ke(L(h),"int32");for(let f=0;f<c;++f){const m=f*u,g=new Float32Array(u-1);g[0]=d[m];for(let y=1;y<g.length;++y)g[y]=g[y-1]+d[m+y];const b=np.alea(a.toString()),x=f*o;for(let y=0;y<o;++y){const w=b();p[x+y]=g.length;for(let I=0;I<g.length;I++)if(w<g[I]){p[x+y]=I;break}}}return i||e.disposeIntermediateTensorInfo(l),e.makeTensorInfo(h,"int32",p)}const oL={kernelName:_l,backendName:"cpu",kernelFunc:rL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aL=fp;function iL(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=s;mt(r,"NonMaxSuppression");const c=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values,{selectedIndices:d}=aL(c,u,a,i,l);return e.makeTensorInfo([d.length],"int32",new Int32Array(d))}const uL={kernelName:iu,backendName:"cpu",kernelFunc:iL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lL=mp;function cL(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:c}=s;mt(r,"NonMaxSuppressionPadded");const u=e.data.get(r.dataId).values,d=e.data.get(o.dataId).values,{selectedIndices:h,validOutputs:p}=lL(u,d,a,i,l,c);return[e.makeTensorInfo([h.length],"int32",new Int32Array(h)),e.makeTensorInfo([],"int32",new Int32Array([p]))]}const dL={kernelName:uu,backendName:"cpu",kernelFunc:cL};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hL=gp;function pL(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=s;mt(r,"NonMaxSuppressionWithScore");const u=e.data.get(r.dataId).values,d=e.data.get(o.dataId).values,h=a,p=i,f=l,m=c,{selectedIndices:g,selectedScores:b}=hL(u,d,h,p,f,m);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const fL={kernelName:lu,backendName:"cpu",kernelFunc:pL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mL(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r}=t,{dtype:o,depth:a,onValue:i,offValue:l}=s;mt(r,"oneHot");const c=L(r.shape),u=new Float32Array(c*a);u.fill(l);const d=e.data.get(r.dataId).values;for(let h=0;h<c;++h)d[h]>=0&&d[h]<a&&(u[h*a+d[h]]=i);return e.makeTensorInfo([...r.shape,a],o,u)}const gL={kernelName:xa,backendName:"cpu",kernelFunc:mL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rd(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=ao({inputs:{input:s},backend:e}),o=rd({inputs:{x:r},backend:e}),a=di({inputs:{input:s},backend:e}),i=rd({inputs:{x:a},backend:e}),l=In({inputs:{real:o,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),l}else return Xf({backend:e,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const bL={kernelName:Cu,backendName:"cpu",kernelFunc:rd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j0(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=ao({inputs:{input:s},backend:e}),o=j0({inputs:{x:r},backend:e}),a=di({inputs:{input:s},backend:e}),i=rd({inputs:{x:a},backend:e}),l=In({inputs:{real:o,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),l}else return Xf({backend:e,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const xL={kernelName:cu,backendName:"cpu",kernelFunc:j0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q0(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s;if(t.length===1)return sd({inputs:{input:t[0]},backend:e,attrs:{dim:r}});const o=t[0].shape,a=t[0].dtype;t.forEach(u=>{Sn(o,u.shape,"All tensors passed to stack must have matching shapes"),N(a===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],l=t.map(u=>{const d=sd({inputs:{input:u},backend:e,attrs:{dim:r}});return i.push(d),d}),c=hi({inputs:l,backend:e,attrs:{axis:r}});return i.forEach(u=>e.disposeIntermediateTensorInfo(u)),c}const yL={kernelName:du,backendName:"cpu",kernelFunc:q0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:o,constantValue:a}=s;mt(r,"pad");const i=o.map((x,y)=>x[0]+r.shape[y]+x[1]),l=o.map(x=>x[0]),c=e.data.get(r.dataId).values,u=L(r.shape),d=r.shape.length,h=pt(r.shape),p=L(i),f=i.length,m=pt(i),g=qe(r.dtype,p);a!==0&&g.fill(a);for(let x=0;x<u;x++){const w=So(x,d,h).map((C,S)=>C+l[S]),I=fs(w,f,m);g[I]=c[x]}return{dataId:e.write(g,i,r.dtype),shape:i,dtype:r.dtype}}const K0={kernelName:ya,backendName:"cpu",kernelFunc:wL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IL=ve((n,t)=>Math.pow(n,t)),kL=Fe(wa,IL),CL={kernelName:wa,backendName:"cpu",kernelFunc:kL};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $L(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:a}=t,{outputRaggedRank:i}=s,l=r.map(b=>e.data.get(b.dataId).values),c=r.map(b=>b.shape),u=e.data.get(o.dataId).values,d=e.data.get(a.dataId).values,[h,p,f]=g0(l,c,u,o.shape,o.dtype,d,a.shape),m=h.map(b=>e.makeTensorInfo([b.length],"int32",b)),g=e.makeTensorInfo(f,o.dtype,p);return m.concat([g])}const vL={kernelName:zm,backendName:"cpu",kernelFunc:$L};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SL(n){const{inputs:t,backend:e}=n,{starts:s,limits:r,deltas:o}=t,a=e.data.get(s.dataId).values,i=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values,[c,u]=x0(a,s.shape,s.dtype,i,r.shape,l,o.shape),d=e.makeTensorInfo([c.length],"int32",c),h=e.makeTensorInfo([u.length],s.dtype,u);return[d,h]}const NL={kernelName:Wm,backendName:"cpu",kernelFunc:SL};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TL(n){const{inputs:t,backend:e,attrs:s}=n,{shape:r,values:o,defaultValue:a,rowPartitionTensors:i}=t,{rowPartitionTypes:l}=s,c=e.data.get(r.dataId).values,u=e.data.get(o.dataId).values,d=e.data.get(a.dataId).values,h=i.map(g=>e.data.get(g.dataId).values),p=i.map(g=>g.shape),[f,m]=I0(c,r.shape,u,o.shape,o.dtype,d,a.shape,h,p,l);return e.makeTensorInfo(f,o.dtype,m)}const _L={kernelName:Vm,backendName:"cpu",kernelFunc:TL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EL(n){const{backend:t,attrs:e}=n,{start:s,stop:r,dtype:o,step:a}=e,i=Pf(s,r,a,o);return t.makeTensorInfo([i.length],o,i)}const RL={kernelName:El,backendName:"cpu",kernelFunc:EL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AL=Jt(Ca,n=>1/n),DL={kernelName:Ca,backendName:"cpu",kernelFunc:AL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FL(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:a,size:i}=s;mt(r,"resizeBilinear");const l=pt(r.shape),[c,u]=i,[d,h,p,f]=r.shape,m=e.data.get(r.dataId).values,g=new Float32Array(L([d,c,u,f])),b=[o&&c>1?h-1:h,o&&u>1?p-1:p],x=[o&&c>1?c-1:c,o&&u>1?u-1:u];let y=0;const w=b[0]/x[0],I=b[1]/x[1];for(let C=0;C<d;C++)for(let S=0;S<c;S++){let T;a?T=w*(S+.5)-.5:T=w*S;const v=Math.max(0,Math.floor(T)),$=T-v,k=Math.min(h-1,Math.ceil(T)),R=C*l[0]+v*l[1],F=C*l[0]+k*l[1];for(let B=0;B<u;B++){let M;a?M=I*(B+.5)-.5:M=I*B;const z=Math.max(0,Math.floor(M)),j=M-z,V=Math.min(p-1,Math.ceil(M)),q=R+z*l[2],X=F+z*l[2],Z=R+V*l[2],Q=F+V*l[2];for(let J=0;J<f;J++){const ot=m[q+J],nt=m[X+J],ut=m[Z+J],xt=m[Q+J],dt=ot+(ut-ot)*j,yt=nt+(xt-nt)*j,Nt=dt+(yt-dt)*$;g[y++]=Nt}}}return e.makeTensorInfo([d,c,u,f],"float32",g)}const ML={kernelName:Sa,backendName:"cpu",kernelFunc:FL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OL(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:a}=s;mt([o,r],"resizeBilinearGrad");const i=pt(r.shape),[l,c,u,d]=r.shape,[,h,p]=o.shape,f=new Float32Array(l*c*u*d),m=[a&&h>1?c-1:c,a&&p>1?u-1:u],g=[a&&h>1?h-1:h,a&&p>1?p-1:p],b=m[0]/g[0],x=m[1]/g[1],y=e.data.get(o.dataId).values;let w=0;for(let I=0;I<l;I++){const C=I*i[0];for(let S=0;S<h;S++){const T=S*b,v=Math.floor(T),$=Math.min(Math.ceil(T),c-1),k=C+v*i[1],R=C+$*i[1],F=T-v,B=1-F;for(let M=0;M<p;M++){const z=M*x,j=Math.floor(z),V=Math.min(Math.ceil(z),u-1),q=z-j,X=1-q,Z=k+j*i[2],Q=k+V*i[2],J=R+j*i[2],ot=R+V*i[2],nt=B*X,ut=B*q,xt=F*X,dt=F*q;for(let yt=0;yt<d;yt++){const Nt=y[w++];f[Z+yt]+=Nt*nt,f[Q+yt]+=Nt*ut,f[J+yt]+=Nt*xt,f[ot+yt]+=Nt*dt}}}}return e.makeTensorInfo([l,u,c,d],"float32",f)}const LL={kernelName:fu,backendName:"cpu",kernelFunc:OL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PL(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:a,size:i}=s;mt(r,"resizeNearestNeighbor");const l=pt(r.shape),[c,u]=i,[d,h,p,f]=r.shape,m=e.data.get(r.dataId).values,g=new Float32Array(d*c*u*f),b=[o&&c>1?h-1:h,o&&u>1?p-1:p],x=[o&&c>1?c-1:c,o&&u>1?u-1:u],y=b[0]/x[0],w=b[1]/x[1];let I=0;for(let C=0;C<d;C++){const S=C*l[0];for(let T=0;T<c;T++){const v=a?y*(T+.5):y*T;let $=Math.min(h-1,o?Math.round(v):Math.floor(v));a&&($=Math.max(0,$));const k=S+$*l[1];for(let R=0;R<u;R++){const F=a?w*(R+.5):w*R;let B=Math.min(p-1,o?Math.round(F):Math.floor(F));a&&(B=Math.max(0,B));const M=k+B*l[2];for(let z=0;z<f;z++){const j=m[M+z];g[I++]=j}}}}return e.makeTensorInfo([d,c,u,f],r.dtype,g)}const BL={kernelName:va,backendName:"cpu",kernelFunc:PL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zL(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:a}=s;mt([o,r],"resizeNearestNeighborGrad");const i=pt(r.shape),l=pt(o.shape),[c,u,d,h]=r.shape,[,p,f]=o.shape,m=new Float32Array(c*u*d*h),g=e.data.get(o.dataId).values,b=[a&&p>1?u-1:u,a&&f>1?d-1:d],x=[a&&p>1?p-1:p,a&&f>1?f-1:f],y=b[0]/x[0],w=b[1]/x[1],I=1/y,C=1/w,S=Math.ceil(I)*2+2,T=Math.ceil(C)*2+2;for(let v=0;v<c;v++){const $=v*i[0];for(let k=0;k<u;k++){const R=$+k*i[1],F=Math.floor(k*I),B=Math.floor(F-S/2);for(let M=0;M<d;M++){const z=R+M*i[2],j=Math.floor(M*C),V=Math.floor(j-T/2);for(let q=0;q<h;q++){let X=0;for(let Z=0;Z<S;Z++){const Q=Z+B;if(Q<0||Q>=p)continue;const J=$+Q*l[1],ot=Q*y,nt=Math.min(u-1,a?Math.round(ot):Math.floor(ot));if(k===nt)for(let ut=0;ut<T;ut++){const xt=ut+V;if(xt<0||xt>=f)continue;const dt=J+xt*l[2],yt=xt*w,Nt=Math.min(d-1,a?Math.round(yt):Math.floor(yt));M===Nt&&(X+=g[dt+q])}}m[z+q]=X}}}}return e.makeTensorInfo(r.shape,r.dtype,m)}const WL={kernelName:pu,backendName:"cpu",kernelFunc:zL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VL(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dims:o}=s;mt(r,"reverse");const a=r.shape.length,i=Et(o,r.shape);if(a===0)return Ts({inputs:{x:r},backend:e});const l=new ze(r.shape,r.dtype),c=e.bufferSync(r);for(let u=0;u<l.size;u++){const d=l.indexToLoc(u),h=d.slice();i.forEach(p=>h[p]=r.shape[p]-1-h[p]),l.set(c.get(...h),...d)}return e.makeTensorInfo(l.shape,l.dtype,l.values)}const UL={kernelName:Ta,backendName:"cpu",kernelFunc:VL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GL={kernelName:$u,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:r,fillValue:o,center:a}=t,i=e,l=qe(s.dtype,L(s.shape)),[c,u,d,h]=s.shape,[p,f]=yc(a,u,d),m=255,g=Math.sin(r),b=Math.cos(r),x=i.data.get(s.dataId).values;for(let w=0;w<c;w++){const I=w*d*u*h;for(let C=0;C<u;C++){const S=C*(d*h);for(let T=0;T<d;T++){const v=T*h;for(let $=0;$<h;$++){const k=[c,C,T,$],R=k[2],F=k[1];let B=(R-p)*b-(F-f)*g,M=(R-p)*g+(F-f)*b;B=Math.round(B+p),M=Math.round(M+f);let z=o;if(typeof o!="number"&&($===3?z=m:z=o[$]),B>=0&&B<d&&M>=0&&M<u){const V=M*(d*h),q=B*h,X=I+V+q+$;z=x[X]}const j=I+S+v+$;l[j]=z}}}}return{dataId:i.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HL=Jt(_a,n=>{const t=Math.floor(n);return n-t<.5?Math.floor(n):n-t>.5?Math.ceil(n):t%2===0?t:t+1}),jL={kernelName:_a,backendName:"cpu",kernelFunc:HL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qL(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r,updates:o}=t,{shape:a}=s,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=ws(o,r,a),h=!0,p=e.bufferSync(r),f=e.bufferSync(o),m=io(p,f,a,d,c,l,i,u,0,h);return e.makeTensorInfo(a,m.dtype,m.values)}const KL={kernelName:Rl,backendName:"cpu",kernelFunc:qL};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XL(n,t){let e=0,s=n.length,r=0;for(;e<s;)r=Math.floor((e+s)/2),n[r]<t?e=r+1:s=r;return s}function YL(n,t){let e=0,s=n.length,r=0;for(;e<s;)r=Math.floor((e+s)/2),n[r]<=t?e=r+1:s=r;return s}function ZL(n,t,e,s,r,o){const a=Ie("int32",e*r);for(let i=0;i<e;++i){const l=n.slice(i*s,(i+1)*s),c=i*r;for(let u=0;u<r;++u)a[c+u]=o==="left"?XL(l,t[u+c]):YL(l,t[u+c])}return a}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JL(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:r,values:o}=t,{side:a}=s,i=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values,c=ZL(i,l,r.shape[0],r.shape[1],o.shape[1],a);return e.makeTensorInfo(o.shape,"int32",c)}const QL={kernelName:Dl,backendName:"cpu",kernelFunc:JL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tP(n){const{inputs:t,backend:e}=n,{condition:s,t:r,e:o}=t;mt([s,r,o],"select");const a=s.shape.length,i=e.data.get(s.dataId).values,l=e.data.get(r.dataId).values,c=e.data.get(o.dataId).values,u=xn(r.dtype,o.dtype),d=Ke(L(r.shape),u);let h=0;const p=a===0||a>1||r.shape.length===1?1:L(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<p;m++)i[f]===1?d[h++]=l[f]:d[h++]=c[f];return e.makeTensorInfo(r.shape,u,d)}const eP={kernelName:mu,backendName:"cpu",kernelFunc:tP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nP=kc,sP=Cc,rP=Jt(Ra,n=>n>=0?sP*n:nP*(Math.exp(n)-1)),oP={kernelName:Ra,backendName:"cpu",kernelFunc:rP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aP=Jt(Fa,n=>n<0?-1:n>0?1:0),iP={kernelName:Fa,backendName:"cpu",kernelFunc:aP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uP=Jt(Aa,n=>Math.sin(n)),lP={kernelName:Aa,backendName:"cpu",kernelFunc:uP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cP=Jt(Da,n=>Math.sinh(n)),dP={kernelName:Da,backendName:"cpu",kernelFunc:cP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X0=Math.log(11920928955078125e-23)+2,hP=Jt(Oa,n=>{const t=n>-X0,e=n<X0,s=Math.exp(n);let r;return e?r=s:t?r=n:r=Math.log(1+s),r}),pP={kernelName:Oa,backendName:"cpu",kernelFunc:hP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,paddings:a}=s;mt([r],"spaceToBatchND");const i=L(o),l=[[0,0]];l.push(...a);for(let C=1+o.length;C<r.shape.length;++C)l.push([0,0]);const c=K0.kernelFunc({inputs:{x:r},backend:e,attrs:{paddings:l,constantValue:0}}),u=Yr(c.shape,o,i,!1),d=Zr(u.length,o.length,!1),h=Jr(c.shape,o,i,!1),m=ce({inputs:{x:c},backend:e,attrs:{shape:u}}),x=fn({inputs:{x:m},backend:e,attrs:{perm:d}}),I=ce({inputs:{x},backend:e,attrs:{shape:h}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(x),I}const mP={kernelName:bu,backendName:"cpu",kernelFunc:fP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gP(n){const{inputs:t,backend:e}=n,{indices:s,values:r,denseShape:o,defaultValue:a}=t;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=e.data.get(s.dataId).values,l=e.data.get(r.dataId).values,c=e.data.get(o.dataId).values,u=e.data.get(a.dataId).values[0],[d,h,p,f,m]=$0(i,s.shape,s.dtype,l,r.dtype,c,u);return[e.makeTensorInfo(h,s.dtype,d),e.makeTensorInfo([h[0]],r.dtype,p),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),e.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const bP={kernelName:lh,backendName:"cpu",kernelFunc:gP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xP(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:r,newShape:o}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(e.data.get(r.dataId).values),i=e.data.get(s.dataId).values,l=Array.from(e.data.get(o.dataId).values),[c,u,d]=v0(i,s.shape,s.dtype,a,l);return[e.makeTensorInfo(u,s.dtype,c),e.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}const yP={kernelName:Fl,backendName:"cpu",kernelFunc:xP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wP(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:o}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=e.data.get(s.dataId).values,i=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values,[c,u]=Bf(a,s.shape,s.dtype,i,l,!0);return e.makeTensorInfo(u,s.dtype,c)}const IP={kernelName:ch,backendName:"cpu",kernelFunc:wP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kP(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:o}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=e.data.get(s.dataId).values,i=e.data.get(r.dataId).values,l=e.data.get(o.dataId).values,[c,u]=Bf(a,s.shape,s.dtype,i,l);return e.makeTensorInfo(u,s.dtype,c)}const CP={kernelName:dh,backendName:"cpu",kernelFunc:kP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $P(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:a}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:d,outputSize:h}=ws(o,r,i),p=!1,f=e.bufferSync(r);let m;switch(o.dtype){case"bool":{const g=e.bufferSync(o),b=!!e.data.get(a.dataId).values[0];m=io(f,g,i,h,u,c,l,d,b,p);break}case"float32":{const g=e.bufferSync(o),b=e.data.get(a.dataId).values[0];m=io(f,g,i,h,u,c,l,d,b,p);break}case"int32":{const g=e.bufferSync(o),b=e.data.get(a.dataId).values[0];m=io(f,g,i,h,u,c,l,d,b,p);break}case"string":{const g=e.bufferSync(o),b=tr(e.data.get(a.dataId).values[0]);m=io(f,g,i,h,u,c,l,d,b,p);break}default:throw new Error(`Unsupported type ${o.dtype}`)}return e.makeTensorInfo(i,m.dtype,m.values)}const vP={kernelName:Ml,backendName:"cpu",kernelFunc:$P};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{numOrSizeSplits:o,axis:a}=s,i=Et(a,r.shape)[0],l=$c(r,o,i),c=new Array(r.shape.length).fill(0),u=r.shape.slice();return l.map(d=>{const h=[...u];h[i]=d;const p=uo({inputs:{x:r},backend:e,attrs:{begin:c,size:h}});return c[i]+=d,p})}const NP={kernelName:xu,backendName:"cpu",kernelFunc:SP};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TP={kernelName:Ol,backendName:"cpu",kernelFunc:({inputs:n,backend:t})=>{const{x:e}=n,s=t;mt(e,"square");const r=s.data.get(e.dataId).values,o=new Float32Array(r.length);for(let i=0;i<r.length;++i){const l=r[i];o[i]=l*l}return{dataId:s.write(o,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _P=Jt(Er,(n,t)=>{const e=t;return isNaN(n)?NaN:n>0?1:e.alpha}),EP={kernelName:Er,backendName:"cpu",kernelFunc:_P};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,end:a,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:h}=s;mt(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:x,end:y,strides:w}=gc(r.shape,o,a,i,l,c,u,d,h);let I;if(m)I=ce({inputs:{x:r},backend:e,attrs:{shape:f}});else if(g||b){N(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const C=pc(x,y,w),S=uo({inputs:{x:r},backend:e,attrs:{begin:x,size:C}});I=ce({inputs:{x:S},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(S)}else{const C=e.bufferSync(r),S=T0(p,C,w,x);I=e.makeTensorInfo(f,S.dtype,S.values)}return I}const AP={kernelName:yu,backendName:"cpu",kernelFunc:RP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DP(n){const{inputs:t,backend:e,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:a,rightPad:i,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:d}=t,h=e.data.get(u.dataId).values,p=e.data.get(d.dataId).values,[f,m]=zf(h,p,r,o,a,i,l,c);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(d.shape,"int32",m)]}const FP={kernelName:ph,backendName:"cpu",kernelFunc:DP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MP(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:a}=t;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=e.data.get(o.dataId).values,l=e.data.get(a.dataId).values[0],[c,u,d]=Wf(i,l,r),h=u.length;return[e.makeTensorInfo([h,2],"int32",c),e.makeTensorInfo([h],"string",u),e.makeTensorInfo([2],"int32",new Int32Array(d))]}const OP={kernelName:fh,backendName:"cpu",kernelFunc:MP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LP(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:r}=s,{input:o}=t;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=e.data.get(o.dataId).values,i=Vf(a,r);return e.makeTensorInfo(o.shape,"int32",i)}const PP={kernelName:mh,backendName:"cpu",kernelFunc:LP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BP=Jt(Va,n=>Math.tan(n)),zP={kernelName:Va,backendName:"cpu",kernelFunc:BP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WP=Jt(Ua,n=>Math.tanh(n)),VP={kernelName:Ua,backendName:"cpu",kernelFunc:WP};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UP(n){const{inputs:t,backend:e}=n,{tensor:s,indices:r,updates:o}=t,{sliceRank:a,numUpdates:i,sliceSize:l,strides:c,outputSize:u}=ws(o,r,s.shape),d=!1,h=e.bufferSync(r),p=e.bufferSync(o),f=e.bufferSync(s),m=io(h,p,s.shape,u,l,i,a,c,f,d);return e.makeTensorInfo(s.shape,m.dtype,m.values)}const GP={kernelName:Al,backendName:"cpu",kernelFunc:UP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reps:o}=s;mt(r,"tile");const a=E0(e.bufferSync(r),o);return e.makeTensorInfo(a.shape,a.dtype,a.values)}const jP={kernelName:_r,backendName:"cpu",kernelFunc:HP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qP(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{k:o,sorted:a}=s;mt(r,"topk");const i=e.data.get(r.dataId).values,[l,c]=A0(i,r.shape,r.dtype,o,a);return[e.makeTensorInfo(l.shape,l.dtype,l.values),e.makeTensorInfo(c.shape,c.dtype,c.values)]}const KP={kernelName:wu,backendName:"cpu",kernelFunc:qP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XP(n){const{inputs:t,attrs:e,backend:s}=n,{image:r,transforms:o}=t,{interpolation:a,fillMode:i,fillValue:l,outputShape:c}=e,[u,d,h,p]=r.shape,[f,m]=c??[d,h],g=[u,f,m,p],b=pt(r.shape),x=b[0],y=b[1],w=b[2],I=pt(g),C=I[0],S=I[1],T=I[2],v=qe(r.dtype,L(g));v.fill(l);const $=s.data.get(r.dataId).values,k=s.data.get(o.dataId).values;for(let F=0;F<u;++F){const B=o.shape[0]===1?k:k.subarray(F*8,F*8+8);for(let M=0;M<f;++M)for(let z=0;z<m;++z)for(let j=0;j<p;++j){let V;const q=B[6]*z+B[7]*M+1;if(q===0)continue;const X=(B[0]*z+B[1]*M+B[2])/q,Z=(B[3]*z+B[4]*M+B[5])/q,Q=Y0(X,h,i),J=Y0(Z,d,i);switch(a){case"nearest":V=eB($,d,h,x,y,w,F,J,Q,j,l);break;case"bilinear":V=nB($,d,h,x,y,w,F,J,Q,j,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const ot=F*C+M*S+z*T+j;v[ot]=V}return s.makeTensorInfo(g,r.dtype,v)}return{dataId:s.write(v,g,r.dtype),shape:r.shape,dtype:r.dtype}}const YP={kernelName:Iu,backendName:"cpu",kernelFunc:XP};function Y0(n,t,e){switch(e){case"reflect":return ZP(n,t);case"wrap":return JP(n,t);case"nearest":return tB(n,t);case"constant":default:return QP(n)}}function ZP(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=2*t;e<s&&(e=s*Math.trunc(-e/s)+e),e=e<-t?e+s:-e-1}else if(e>t-1)if(t<=1)e=0;else{const s=2*t;e-=s*Math.trunc(e/s),e>=t&&(e=s-e-1)}return vr(0,e,t-1)}function JP(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=t-1;e+=t*(Math.trunc(-e/s)+1)}else if(e>t-1)if(t<=1)e=0;else{const s=t-1;e-=t*Math.trunc(e/s)}return vr(0,e,t-1)}function QP(n,t){return n}function tB(n,t){return vr(0,n,t-1)}function sl(n,t,e,s,r,o,a,i,l,c,u){const d=a*s+i*r+l*o+c;return 0<=i&&i<t&&0<=l&&l<e?n[d]:u}function eB(n,t,e,s,r,o,a,i,l,c,u){const d=Math.round(i),h=Math.round(l);return sl(n,t,e,s,r,o,a,d,h,c,u)}function nB(n,t,e,s,r,o,a,i,l,c,u){const d=Math.floor(i),h=Math.floor(l),p=d+1,f=h+1,m=(f-l)*sl(n,t,e,s,r,o,a,d,h,c,u)+(l-h)*sl(n,t,e,s,r,o,a,d,f,c,u),g=(f-l)*sl(n,t,e,s,r,o,a,p,h,c,u)+(l-h)*sl(n,t,e,s,r,o,a,p,f,c,u);return(p-i)*m+(i-d)*g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sB(n){const{inputs:t,attrs:e,backend:s}=n,{axis:r}=e,{x:o}=t;mt(o,"unique");const a=s.data.get(o.dataId).values,{outputValues:i,outputShape:l,indices:c}=Gf(a,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,i),s.makeTensorInfo([c.length],"int32",c)]}const rB={kernelName:Ll,backendName:"cpu",kernelFunc:sB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oB(n){const{inputs:t,backend:e,attrs:s}=n,{value:r}=t;let{axis:o}=s;o<0&&(o+=r.shape.length);const a=r.shape.length,i=r.shape[o],l=new Array(a-1);let c=0;for(let p=0;p<a;p++)p!==o&&(l[c++]=r.shape[p]);const u=new Array(a).fill(0),d=r.shape.slice();d[o]=1;const h=new Array(i);for(let p=0;p<h.length;p++){u[o]=p;const f=uo({inputs:{x:r},backend:e,attrs:{begin:u,size:d}});h[p]=ce({inputs:{x:f},backend:e,attrs:{shape:l}}),e.disposeIntermediateTensorInfo(f)}return h}const aB={kernelName:ku,backendName:"cpu",kernelFunc:oB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iB(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,segmentIds:o}=t,{numSegments:a}=s;mt(r,"unsortedSegmentSum");const i=r.shape.length,l=o.shape.length,c=[],u=[],d=i-l;let h=o;for(let f=0;f<d;++f){const m=sd({inputs:{input:h},backend:e,attrs:{dim:f+1}});h=m,u.push(m)}for(let f=0;f<a;++f){const m=Js(f,"int32"),g=e.makeTensorInfo([],"int32",m),b=Xw({inputs:{a:g,b:h},backend:e}),x=mr({inputs:{x:b},backend:e,attrs:{dtype:"float32"}}),y=Qc({inputs:{a:x,b:r},backend:e}),w=nl({inputs:{x:y},backend:e,attrs:{axis:0,keepDims:!1}});c.push(w),u.push(g),u.push(b),u.push(x),u.push(y),u.push(w)}const p=q0({inputs:c,backend:e,attrs:{axis:0}});return u.forEach(f=>e.disposeIntermediateTensorInfo(f)),p}const uB={kernelName:Pl,backendName:"cpu",kernelFunc:iB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lB=[oM,BD,iM,lM,HD,dM,pM,mM,bM,yM,IM,CM,vM,TM,EM,DM,MM,LM,BM,sM,WM,UM,HM,qD,qM,UD,XD,XM,zD,YM,JM,QM,eO,sO,oO,iO,lO,dO,pO,mO,bO,yO,IO,CO,$O,SO,TO,EO,RO,AO,DO,MO,PO,YF,zO,YD,KO,ZD,XO,QD,e3,n3,r3,eF,sF,a3,u3,c3,h3,oF,iF,WD,f3,ZM,g3,x3,w3,ZF,lF,dF,k3,pF,$3,N3,_3,A3,F3,O3,L3,mF,B3,W3,U3,H3,q3,X3,Z3,bF,Q3,nL,oL,yF,IF,uL,dL,fL,CF,gL,xL,yL,K0,CL,QF,SF,vL,NL,_L,RL,VD,qf,DL,tM,eM,nM,ML,LL,BL,WL,UL,GL,jL,FF,KL,QL,eP,oP,OF,iP,lP,dP,LF,sL,pP,mP,bP,yP,IP,CP,vP,NP,zF,TP,VF,GF,EP,AP,FP,OP,PP,KF,OO,zP,VP,GP,jP,KP,YP,$F,rB,aB,uB,bL];for(const n of lB)bh(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lo={},od={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function cB(n,t){lo[n]=t}function hs(n,t){if(!(n in lo)||t!=null){const s=hB(n,t);if(s!==null)lo[n]=s;else return console.log("Could not get context for WebGL version",n),null}const e=lo[n];return e==null||e.isContextLost()?(delete lo[n],hs(n)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),lo[n])}function dB(n){if(!H().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function hB(n,t){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=t??dB(n);return e.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete lo[n]},!1),H().getBool("SOFTWARE_WEBGL_ENABLED")&&(od.failIfMajorPerformanceCaveat=!1),n===1?e.getContext("webgl",od)||e.getContext("experimental-webgl",od):e.getContext("webgl2",od)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var rl;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(rl||(rl={}));var On;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(On||(On={}));var Ve;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Ve||(Ve={}));function ol(n,t){return[t,n]}function pB(n,t){return n*t}function ad(n){const t=L(n),e=Math.ceil(t/4);return Vd(e)}function pi(n,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(n/2))]}function fB(n,t){const[e,s]=pi(n,t);return e*s*4}function Yf(n,t){const e=n;let s,r,o,a,i,l,c,u,d,h;return H().getNumber("WEBGL_VERSION")===2?(s=e.R32F,r=e.R16F,o=e.RGBA16F,a=e.RGBA32F,i=e.RED,c=4,u=1,d=e.HALF_FLOAT,h=e.FLOAT,l=e.RGBA8):(s=n.RGBA,r=n.RGBA,o=n.RGBA,a=e.RGBA,i=n.RGBA,c=4,u=4,d=t!=null?t.HALF_FLOAT_OES:null,h=n.FLOAT,l=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:h}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ct(n,t){const e=t();return H().getBool("DEBUG")&&mB(n),e}function mB(n){const t=n.getError();if(t!==n.NO_ERROR)throw new Error("WebGL Error: "+yB(n,t))}const gB=596e-10,bB=65504;function xB(n){return!!(H().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||gB<Math.abs(n)&&Math.abs(n)<bB)}function yB(n,t){switch(t){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function id(n,t){return Gs(n,()=>n.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function wB(n,t){const e=Gs(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ct(n,()=>n.shaderSource(e,t)),ct(n,()=>n.compileShader(e)),n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function IB(n,t){const e=Gs(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ct(n,()=>n.shaderSource(e,t)),ct(n,()=>n.compileShader(e)),H().get("ENGINE_COMPILE_ONLY"))return e;if(n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw Z0(t,n.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}const kB=/ERROR: [0-9]+:([0-9]+):/g;function Z0(n,t){const e=kB.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(n);return}const s=+e[1],r=n.split(`
`),o=r.length.toString().length+2,a=r.map((d,h)=>$o((h+1).toString(),o)+d);let i=0;for(let d=0;d<a.length;d++)i=Math.max(a[d].length,i);const l=a.slice(0,s-1),c=a.slice(s-1,s),u=a.slice(s);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${$o(c[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function CB(n){return Gs(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function $B(n,t){if(ct(n,()=>n.linkProgram(t)),!H().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(t,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Zf(n,t){if(ct(n,()=>n.validateProgram(t)),n.getProgramParameter(t,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function vB(n,t){const e=Gs(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return ct(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),ct(n,()=>n.bufferData(n.ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function SB(n,t){const e=Gs(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return ct(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e)),ct(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function NB(n){return Gs(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function TB(n,t){const e=H().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||t<=0){const s=`[${n}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>e||t>e){const s=`[${n}x${t}]`,r=`[${e}x${e}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function _B(n){return Gs(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function J0(n,t,e,s,r,o,a){const i=n.getAttribLocation(t,e);return i===-1?!1:(ct(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),ct(n,()=>n.vertexAttribPointer(i,r,n.FLOAT,!1,o,a)),ct(n,()=>n.enableVertexAttribArray(i)),!0)}function EB(n,t,e){MB(n,e),ct(n,()=>n.activeTexture(n.TEXTURE0+e)),ct(n,()=>n.bindTexture(n.TEXTURE_2D,t))}function RB(n,t,e){return Gs(n,()=>n.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function AB(n,t,e){return n.getUniformLocation(t,e)}function DB(n,t,e,s){ct(n,()=>EB(n,t,s)),ct(n,()=>n.uniform1i(e,s))}function Jf(n,t,e){ct(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),ct(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0))}function Q0(n,t){ct(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),ct(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function ud(n){const t=n.checkFramebufferStatus(n.FRAMEBUFFER);if(t!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+FB(n,t))}function FB(n,t){switch(t){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Gs(n,t,e){const s=ct(n,()=>t());if(s==null)throw new Error(e);return s}function MB(n,t){const e=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+n.TEXTURE0;if(s<n.TEXTURE0||s>e){const r=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${r}.`)}}function fi(n,t=2){return L(n.slice(0,n.length-t))}function mi(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function ld(n){let t=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(t=[fi(n),...mi(n)]),t}function OB(n,t=!1){let e=H().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=H().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&H().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=e/2),t&&(e=e*2,s=s*2,n=n.map((i,l)=>l>=n.length-2?Wd(n[l]):n[l]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=Xs(n).newShape);let r=L(n),o=null;n.length<=1&&r<=e?o=[1,r]:n.length===2&&n[0]<=e&&n[1]<=e?o=n:n.length===3&&n[0]*n[1]<=e&&n[2]<=e?o=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=e&&n[1]*n[2]<=e?o=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=e&&n[3]<=e?o=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=e&&n[1]*n[2]*n[3]<=e&&(o=[n[0],n[1]*n[2]*n[3]]);const a=o!=null&&Math.max(...o)>s&&Math.min(...o)<=(t?2:1)&&Math.min(...o)>0;if(o==null||a)if(t){const i=fi(n);let l=2,c=2;n.length&&([l,c]=mi(n)),r=i*(l/2)*(c/2),o=Vd(r).map(u=>u*2)}else o=Vd(r);return o}function cd(n){return n%2===0}function dd(n,t){if(n=n.slice(-2),t=t.slice(-2),Kt(n,t)||!n.length||!t.length||n[0]===0||n[1]===0||t[0]===0||t[1]===0)return!0;if(n.length!==t.length){const e=n[n.length-1],s=t[t.length-1];if(e===s||cd(e)&&cd(s)&&(n[0]===1||t[0]===1))return!0}return n[1]===t[1]&&cd(n[0])&&cd(t[0])}let Qf,tm;function LB(n){if(Qf==null){const t=hs(n);Qf=t.getParameter(t.MAX_TEXTURE_SIZE)}return Qf}function PB(n){if(tm==null){const t=hs(n);tm=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,tm)}function BB(n){if(n===0)return 0;let t;const e=hs(n);return Xn(e,"EXT_disjoint_timer_query_webgl2")&&n===2?t=2:Xn(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function Xn(n,t){return n.getExtension(t)!=null}function t1(n){try{if(hs(n)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function zB(n){if(n===0)return!1;const t=hs(n);if(n===1){if(!Xn(t,"OES_texture_float"))return!1}else if(!Xn(t,"EXT_color_buffer_float"))return!1;return em(t)}function WB(n){if(n===0)return!1;const t=hs(n);if(n===1){if(!Xn(t,"OES_texture_float")||!Xn(t,"WEBGL_color_buffer_float"))return!1}else{if(Xn(t,"EXT_color_buffer_float"))return em(t);const s="EXT_color_buffer_half_float";if(Xn(t,s)){const r=t.getExtension(s);return VB(t,r)}return!1}return em(t)}function em(n){const t=Yf(n),e=n.createTexture();n.bindTexture(n.TEXTURE_2D,e),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(e),n.deleteFramebuffer(o),a}function VB(n,t){const e=Yf(n,t),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(a),i}function UB(n){return n!==2?!1:hs(n).fenceSync!=null}function al(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&N(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bt=H();bt.registerFlag("HAS_WEBGL",()=>bt.getNumber("WEBGL_VERSION")>0),bt.registerFlag("WEBGL_VERSION",()=>t1(2)?2:t1(1)?1:0),bt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),bt.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>bt.get("WEBGL_VERSION")===2),bt.registerFlag("WEBGL_CPU_FORWARD",()=>!0),bt.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),bt.registerFlag("WEBGL_PACK",()=>bt.getBool("HAS_WEBGL")),bt.registerFlag("WEBGL_PACK_NORMALIZATION",()=>bt.getBool("WEBGL_PACK")),bt.registerFlag("WEBGL_PACK_CLIP",()=>bt.getBool("WEBGL_PACK")),bt.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>bt.getBool("WEBGL_PACK")),bt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>bt.getBool("WEBGL_PACK")),bt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>bt.getBool("WEBGL_PACK")),bt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>bt.getBool("WEBGL_PACK")),bt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>bt.getBool("WEBGL_PACK")),bt.registerFlag("WEBGL_PACK_REDUCE",()=>bt.getBool("WEBGL_PACK")),bt.registerFlag("WEBGL_LAZILY_UNPACK",()=>bt.getBool("WEBGL_PACK")),bt.registerFlag("WEBGL_CONV_IM2COL",()=>bt.getBool("WEBGL_PACK")),bt.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>bt.getBool("WEBGL_PACK")),bt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>LB(bt.getNumber("WEBGL_VERSION"))),bt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>PB(bt.getNumber("WEBGL_VERSION"))),bt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=bt.getNumber("WEBGL_VERSION");return n===0?0:BB(n)}),bt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>bt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!cg()),bt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>zB(bt.getNumber("WEBGL_VERSION"))),bt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>bt.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:bt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),bt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>WB(bt.getNumber("WEBGL_VERSION"))),bt.registerFlag("WEBGL_FENCE_API_ENABLED",()=>UB(bt.getNumber("WEBGL_VERSION"))),bt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>bt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),bt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)}),bt.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>cg()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)}),bt.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),bt.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),bt.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),bt.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),bt.registerFlag("WEBGL_EXP_CONV",()=>!1),bt.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>bt.getBool("IS_TEST")),bt.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),bt.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),bt.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),bt.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rn(){let n,t,e,s,r,o,a,i,l,c;return H().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",t="in",e="out",s="in",r="texture",o="outputColor",a="out vec4 outputColor;",i=H().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",t="attribute",e="varying",s="varying",r="texture2D",o="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:t,varyingVs:e,varyingFs:s,texture2D:r,output:o,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:l,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function co(n,t,e="index"){const s=pt(t);return s.map((r,o)=>{const a=`int ${n[o]} = ${e} / ${r}`,i=o===s.length-1?`int ${n[o+1]} = ${e} - ${n[o]} * ${r}`:`index -= ${n[o]} * ${r}`;return`${a}; ${i};`}).join("")}function hd(n,t,e="index"){const s=pt(t);return s.map((r,o)=>{const a=`int ${n[o]} = ${e} / outShapeStrides[${o}]`,i=o===s.length-1?`int ${n[o+1]} = ${e} - ${n[o]} * outShapeStrides[${o}]`:`index -= ${n[o]} * outShapeStrides[${o}]`;return`${a}; ${i};`}).join("")}function GB(n,t){const e=n.length,s=n.map(o=>`${t}[${o}]`),r=new Array(e-1);r[e-2]=s[e-1];for(let o=e-3;o>=0;--o)r[o]=`(${r[o+1]} * ${s[o+1]})`;return r}function HB(n,t,e="index"){const s=n.map((o,a)=>a),r=GB(s,t);return r.map((o,a)=>{const i=`int ${n[a]} = ${e} / ${r[a]}`,l=a===r.length-1?`int ${n[a+1]} = ${e} - ${n[a]} * ${r[a]}`:`index -= ${n[a]} * ${r[a]}`;return`${i}; ${l};`}).join("")}function nm(n){const t=pt(n).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function sm(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const e1=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:n1}=O_;function jB(n,t,e){const s=[];if(n.forEach(p=>{const f=L(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),e.enableShapeUniforms){const{uniformShape:m}=rm(e.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const r=s.join(`
`),o=n.map(p=>qB(p,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),a=t.texShape,i=rn(),l=YB(i);let c,u,d=QB(i);return t.isPacked?(c=KB(t.logicalShape,a,e.enableShapeUniforms),u=JB(i)):(c=XB(t.logicalShape,a,e.enableShapeUniforms),u=ZB(i)),e.packedInputs&&(d+=sz),[d,l,u,r,c,o,e.userCode].join(`
`)}function gi(n,t=!1){const e=n.shapeInfo.logicalShape;switch(e.length){case 0:return mz(n,t);case 1:return bz(n,t);case 2:return yz(n,t);case 3:return Iz(n,t);case 4:return Cz(n,t);case 5:return $z(n);case 6:return vz(n);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function s1(n,t){switch(n.shapeInfo.logicalShape.length){case 0:return fz(n);case 1:return gz(n,t);case 2:return xz(n,t);case 3:return wz(n,t);default:return kz(n,t)}}function qB(n,t,e=!1,s){let r="";e?r+=s1(n,s):r+=gi(n,s);const o=n.shapeInfo.logicalShape,a=t.logicalShape;return o.length<=a.length&&(e?r+=Sz(n,t):r+=Nz(n,t)),r}function KB(n,t,e){switch(n.length){case 0:return r1();case 1:return rz(n,t,e);case 2:return hz(n,t,e);case 3:return az(n,t,e);default:return uz(n,t,e)}}function XB(n,t,e){switch(n.length){case 0:return r1();case 1:return oz(n,t,e);case 2:return pz(n,t,e);case 3:return iz(n,t,e);case 4:return lz(n,t,e);case 5:return cz(n,t);case 6:return dz(n,t);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function YB(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function ZB(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function JB(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function QB(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${tz}
    ${ez}
    ${nz}
  `}const tz=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,ez=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,nz=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,sz=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function r1(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function rz(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function oz(n,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function az(n,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(n[2]/2),o=r*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function iz(n,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${hd(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=co(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function uz(n,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(n[n.length-1]/2),o=r*Math.ceil(n[n.length-2]/2);let a=o,i="",l="b, r, c";for(let c=2;c<n.length-1;c++)a*=n[n.length-c-1],i=`
      int b${c} = index / ${a};
      index -= b${c} * ${a};
    `+i,l=`b${c}, `+l;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${i}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${n.length}(${l});
    }
  `}function lz(n,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${hd(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=co(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function cz(n,t){const e=co(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function dz(n,t){const e=co(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function hz(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Kt(n,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(n[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function pz(n,t,e){return Kt(n,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:n[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function ho(n){return`offset${n}`}function fz(n){const t=n.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),s=rn();return`
    vec4 ${e}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function mz(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${e};}`;const[r,o]=n.shapeInfo.texShape;if(r===1&&o===1)return`
      float ${s}() {
        return sampleTexture(${e}, halfCR);
      }
    `;const a=ho(e);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${a});
      return sampleTexture(${e}, uv);
    }
  `;const[i,l]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${i}, ${l}, ${a});
      return sampleTexture(${e}, uv);
    }
  `}function gz(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=n.shapeInfo.texShape,o=rn();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${e}, uv);
    }
  `;const a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${o.texture2D}(${e}, uv);
    }
  `}function bz(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${bi(n)}
      }
    `;const r=n.shapeInfo.texShape,o=r[0],a=r[1];if(a===1&&o===1)return`
      float ${s}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;const i=ho(e);return a===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${o}.0);
        return sampleTexture(${e}, uv);
      }
    `:o===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${i});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${o}, ${a}, index + ${i});
      return sampleTexture(${e}, uv);
    }
  `}function xz(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,a=o[0],i=o[1],l=rn();if(o!=null&&Kt(e,o))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const c=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=Math.ceil(e[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function yz(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape;if(o!=null&&Kt(e,o)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const h=o[0],p=o[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:a,keptDims:i}=Xs(e),l=a;if(l.length<e.length){const h=xi(n,l),p=["row","col"];return`
      ${gi(h,t)}
      float ${r}(int row, int col) {
        return ${r}(${yi(p,i)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${bi(n)}
      }
    `;const c=o[0],u=o[1],d=ho(s);return u===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `:c===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${d};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${s}, uv);
  }
`}function wz(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(e[0]===1){const h=e.slice(1),p=[1,2],f=xi(n,h),m=["b","row","col"];return`
        ${s1(f,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${yi(m,p)});
        }
      `}const i=rn();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `;const l=a[0],c=a[1],u=Math.ceil(e[2]/2),d=u*Math.ceil(e[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${d}, ${u}, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `}function Iz(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=e[1]*e[2],a=e[2],{newShape:i,keptDims:l}=Xs(e),c=i;if(c.length<e.length){const m=xi(n,c),g=["row","col","depth"];return`
        ${gi(m,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${yi(g,l)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${a}, 1)));
        ${bi(n)}
      }
    `;const u=n.shapeInfo.texShape,d=u[0],h=u[1],p=n.shapeInfo.flatOffset;if(h===o&&p==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${d}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(h===a&&p==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=ho(s);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${a} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${h}, index);
        return sampleTexture(${s}, uv);
      }
  `}function kz(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=rn();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${e}, uv);
    }
  `;const o=n.shapeInfo.logicalShape,a=o.length,i=n.shapeInfo.texShape,l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=l[0],u=l[1],d=Math.ceil(o[a-1]/2);let h=d*Math.ceil(o[a-2]/2),p="int b, int row, int col",f=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<a-1;m++)p=`int b${m}, `+p,h*=o[a-m-1],f=`b${m} * ${h} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${r.texture2D}(${e}, uv);
    }
  `}function Cz(n,t){const e=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=e[3],a=e[2]*o,i=e[1]*a,{newShape:l,keptDims:c}=Xs(e);if(l.length<e.length){const x=xi(n,l),y=["row","col","depth","depth2"];return`
      ${gi(x,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${yi(y,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${o}, 1)));
        ${bi(n)}
      }
    `;const u=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,h=d[0],p=d[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===i&&u==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===o&&u==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${s}, uv);
      }
    `;const b=ho(s);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${b});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${h}, ${p}, index + ${b});
      return sampleTexture(${s}, uv);
    }
  `}function $z(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t[4],o=t[3]*r,a=t[2]*o,i=t[1]*a,{newShape:l,keptDims:c}=Xs(t);if(l.length<t.length){const m=xi(n,l),g=["row","col","depth","depth2","depth3"];return`
      ${gi(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${yi(g,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${o}, ${r})) +
          depth3;
        ${bi(n)}
      }
    `;const u=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,h=d[0],p=d[1];if(p===i&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(p===r&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${e}, uv);
      }
    `;const f=ho(e);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${o} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${h}, ${p}, index);
      return sampleTexture(${e}, uv);
    }
  `}function vz(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:r,keptDims:o}=Xs(t);if(r.length<t.length){const g=xi(n,r),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${gi(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${yi(b,o)});
      }
    `}const a=t[5],i=t[4]*a,l=t[3]*i,c=t[2]*l,u=t[1]*c;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${bi(n)}
      }
    `;const d=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,p=h[0],f=h[1];if(f===u&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===a&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${e}, uv);
      }
    `;const m=ho(e);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function bi(n){const t=n.name,e=L(n.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function Sz(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),r="get"+s+"AtOutCoords",o=n.shapeInfo.logicalShape.length,a=t.logicalShape.length,i=n1(n.shapeInfo.logicalShape,t.logicalShape),l=ne(a),c=a-o;let u;const d=["x","y","z","w","u","v"];o===0?u="":a<2&&i.length>=1?u="coords = 0;":u=i.map(x=>`coords.${d[x+c]} = 0;`).join(`
`);let h="";a<2&&o>0?h="coords":h=n.shapeInfo.logicalShape.map((x,y)=>`coords.${d[y+c]}`).join(", ");let p="return outputValue;";const m=L(n.shapeInfo.logicalShape)===1,b=L(t.logicalShape)===1;if(o===1&&!m&&!b)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!b)a===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(i.length){const x=o-2,y=o-1;i.indexOf(x)>-1&&i.indexOf(y)>-1?p="return vec4(outputValue.x);":i.indexOf(x)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(y)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${s}(${h});
      ${p}
    }
  `}function Nz(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),r="get"+s+"AtOutCoords",o=t.texShape,a=n.shapeInfo.texShape,i=n.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!n.shapeInfo.isUniform&&i===l&&n.shapeInfo.flatOffset==null&&Kt(a,o))return`
      float ${r}() {
        return sampleTexture(${e}, resultUV);
      }
    `;const c=ne(l),u=n1(n.shapeInfo.logicalShape,t.logicalShape),d=l-i;let h;const p=["x","y","z","w","u","v"];i===0?h="":l<2&&u.length>=1?h="coords = 0;":h=u.map(m=>`coords.${p[m+d]} = 0;`).join(`
`);let f="";return l<2&&i>0?f="coords":f=n.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+d]}`).join(", "),`
    float ${r}() {
      ${c} coords = getOutputCoords();
      ${h}
      return get${s}(${f});
    }
  `}function ne(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function rm(n,t,e){const{newShape:s,keptDims:r}=Xs(t),o=t.length,a=n&&o===3&&t[0]===1,i=a?t.slice(1):s,l=!n&&o>1&&!Kt(t,e)&&s.length<o||a;return{useSqueezeShape:l,uniformShape:l?i:t,keptDims:r}}function xi(n,t){const e=JSON.parse(JSON.stringify(n));return e.shapeInfo.logicalShape=t,e}function yi(n,t){return t.map(e=>n[e]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tz(n,t,e,s){const r=e.map((u,d)=>{const h={logicalShape:u.shape,texShape:u.isUniform?null:u.texData.texShape,isUniform:u.isUniform,isPacked:u.isUniform?!1:u.texData.isPacked,flatOffset:null};return u.texData!=null&&u.texData.slice!=null&&u.texData.slice.flatOffset>0&&(h.flatOffset=u.texData.slice.flatOffset),{name:t.variableNames[d],shapeInfo:h}}),o=r.map(u=>u.shapeInfo),a={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},i=jB(r,a,t),l=IB(n.gl,i),c=n.createProgram(l);return H().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:i,webGLProgram:c,inShapeInfos:o,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(c),Object.assign({program:t,fragmentShader:l,source:i,webGLProgram:c,inShapeInfos:o,outShapeInfo:a},o1(n,t,c)))}function o1(n,t,e){const s=[],r=[];let o,a,i,l=null,c=null;c=n.getUniformLocation(e,"NAN",!1),H().getNumber("WEBGL_VERSION")===1&&(l=n.getUniformLocation(e,"INFINITY",!1));const u=!1;for(const d of t.variableNames){const h={name:d,uniform:n.getUniformLocation(e,d,u),offset:n.getUniformLocation(e,`offset${d}`,u)};t.enableShapeUniforms&&(h.shape=n.getUniformLocation(e,`${d}Shape`,u),h.texShape=n.getUniformLocation(e,`${d}TexShape`,u)),s.push(h)}if(t.enableShapeUniforms&&(o=n.getUniformLocation(e,"outShape",u),i=n.getUniformLocation(e,"outShapeStrides",u),a=n.getUniformLocation(e,"outTexShape",u)),t.customUniforms)for(const d of t.customUniforms)r.push(n.getUniformLocation(e,d.name,u));return{variablesLocations:s,customUniformLocations:r,infLoc:l,nanLoc:c,outShapeLocation:o,outShapeStridesLocation:i,outTexShapeLocation:a}}function a1(n,t){if(n.length!==t.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${t.length} inputs`);n.forEach((e,s)=>{const r=e.logicalShape,o=t[s],a=o.shape;if(!Kt(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&o.isUniform)return;const i=e.texShape,l=o.isUniform?null:o.texData.texShape;if(!Kt(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}function _z(n,t,e,s,r){t.program.enableShapeUniforms||(a1(t.inShapeInfos,e),a1([t.outShapeInfo],[s]));const o=s.texData.texture,a=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(o.texture,a[0],a[1]):n.setOutputMatrixTexture(o.texture,a[0],a[1]),n.setProgram(t.webGLProgram),n.bindVertexArray(t.webGLProgram.vao),H().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&n.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&n.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<e.length;++l){const c=e[l],{uniform:u,offset:d,shape:h,texShape:p}=t.variablesLocations[l];if(h){const{uniformShape:f}=rm(t.program.packedInputs,c.shape,c.texData.texShape);switch(f.length){case 1:n.gl.uniform1iv(h,new Int32Array(f));break;case 2:n.gl.uniform2iv(h,new Int32Array(f));break;case 3:n.gl.uniform3iv(h,new Int32Array(f));break;case 4:n.gl.uniform4iv(h,new Int32Array(f));break}}if(p&&n.gl.uniform2i(p,c.texData.texShape[0],c.texData.texShape[1]),u!=null){if(c.isUniform){if(L(c.shape)<2)n.gl.uniform1f(u,c.uniformValues[0]);else{let f=c.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),n.gl.uniform1fv(u,f)}continue}c.texData.slice!=null&&d!=null&&n.gl.uniform1i(d,c.texData.slice.flatOffset),n.setInputMatrixTexture(c.texData.texture.texture,u,l)}}const i=t.outShapeLocation;if(i)switch(s.shape.length){case 1:n.gl.uniform1iv(i,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(i,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(i,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(i,new Int32Array(s.shape));break}if(t.outShapeStridesLocation){const l=pt(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:n.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:n.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break}}if(t.outTexShapeLocation&&n.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r)for(let l=0;l<t.program.customUniforms.length;++l){const c=t.program.customUniforms[l],u=t.customUniformLocations[l],d=r[l];if(c.type==="float")n.gl.uniform1fv(u,d);else if(c.type==="vec2")n.gl.uniform2fv(u,d);else if(c.type==="vec3")n.gl.uniform3fv(u,d);else if(c.type==="vec4")n.gl.uniform4fv(u,d);else if(c.type==="int")n.gl.uniform1iv(u,d);else if(c.type==="ivec2")n.gl.uniform2iv(u,d);else if(c.type==="ivec3")n.gl.uniform3iv(u,d);else if(c.type==="ivec4")n.gl.uniform4iv(u,d);else throw Error(`uniform type ${c.type} is not supported yet.`)}n.executeProgram()}function Ez(n,t,e){let s="";t.concat(e).forEach(a=>{const i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!a.isUniform){const l=a.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:d}=rm(n.packedInputs,a.shape,l);let h="",p="",f="";if(u.length===1&&n.packedInputs){const I=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];h=`${I[0]>1}_${I[1]>1}`}else if(u.length===2&&!n.packedInputs)p=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!n.packedInputs){const I=pt(u);f=`${I[0]===l[1]}_${I[I.length-1]===l[1]}`}const m=a.shape.length,g=u.length===2&&Kt(a.shape,l),b=L(a.shape)===1,x=Qa(a.shape,e.shape),y=!n.packedInputs&&m===e.shape.length&&Kt(l,e.texData.texShape),w=n.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${m}_${y}_${c?d:""}_${u.length}_${b}_${x}_${g}_${h}_${p}_${f}_${w}_${i}`}else{const l=a.isUniform?"uniform":a.texData.texShape;s+=`${a.shape}_${l}_${i}`}});const r=n.userCode;let o=n.constructor.name;return o+="_"+s+"_"+r+`${H().getNumber("WEBGL_VERSION")}`,o}function Qe(n){return H().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rz{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=rl.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=rn();this.outputShape=t,this.enableShapeUniforms=Qe(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?hd(["r","c","d"],t):co(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Az{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=rl.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=rn();this.outputShape=t,this.enableShapeUniforms=Qe(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?hd(["r","c","d"],t):co(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dz{constructor(t){this.variableNames=["A"],this.outTexUsage=On.DOWNLOAD;const e=rn();this.outputShape=t,this.userCode=`
      ${e1}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fz{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=On.DOWNLOAD;const e=rn();this.outputShape=t,this.userCode=`
      ${e1}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mz={R:0,G:1,B:2,A:3};class i1{constructor(t,e=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=rn();this.outputShape=t,this.enableShapeUniforms=Qe(this.outputShape.length);let o="result";e&&(o="floor(result * 255. + 0.5)");let a="";for(let i=0;i<s.length;i++){const l=s[i];a+=`
          if(offset == ${i}) {
            result = values[${Mz[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?sm():nm(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${a}
        }
        ${r.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oz{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=rn();this.outputShape=t,this.enableShapeUniforms=Qe(this.outputShape.length);let r="",o="result";e&&(o="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){const l=a*2+i;r+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?sm():nm(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lz(n){const t=rn(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return wB(n,e)}function Pz(n){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return vB(n,t)}function Bz(n){const t=new Uint16Array([0,1,2,2,1,3]);return SB(n,t)}function il(n,t,e,s,r,o){TB(t,e);const a=NB(n),i=n.TEXTURE_2D;return ct(n,()=>n.bindTexture(i,a)),ct(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),ct(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),ct(n,()=>n.texParameteri(i,n.TEXTURE_MIN_FILTER,n.NEAREST)),ct(n,()=>n.texParameteri(i,n.TEXTURE_MAG_FILTER,n.NEAREST)),H().getNumber("WEBGL_VERSION")===1?ct(n,()=>n.texImage2D(i,0,s,t,e,0,r,o,null)):ct(n,()=>n.texStorage2D(i,1,s,t,e)),ct(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:a,texShape:[e,t]}}function u1(n){return n.internalFormatFloat}function zz(n,t,e,s){const[r,o]=ol(t,e);return il(n,r,o,u1(s),s.textureFormatFloat,n.FLOAT)}function l1(n){return n.internalFormatHalfFloat}function Wz(n,t,e,s){const[r,o]=ol(t,e);return il(n,r,o,l1(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function c1(n){return n.downloadTextureFormat}function Vz(n,t,e,s){const[r,o]=ol(t,e);return il(n,r,o,c1(s),n.RGBA,n.UNSIGNED_BYTE)}function d1(n){return n.internalFormatPackedFloat}function Uz(n,t,e,s){const[r,o]=pi(t,e);return il(n,r,o,d1(s),n.RGBA,n.FLOAT)}function h1(n){return n.internalFormatPackedHalfFloat}function Gz(n,t,e,s){const[r,o]=pi(t,e);return il(n,r,o,h1(s),n.RGBA,s.textureTypeHalfFloat)}function Hz(n,t,e){return ct(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),J0(n,t,"clipSpacePos",e,3,20,0)&&J0(n,t,"uv",e,2,20,12)}function jz(n,t,e,s,r,o){ct(n,()=>n.bindTexture(n.TEXTURE_2D,t));let a,i,l;r instanceof Uint8Array?(a=new Uint8Array(e*s*4),i=n.UNSIGNED_BYTE,l=n.RGBA):(a=new Float32Array(e*s*4),i=n.FLOAT,l=o.internalFormatPackedFloat),a.set(r),H().getNumber("WEBGL_VERSION")===2?ct(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e,s,n.RGBA,i,a)):ct(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,e,s,0,n.RGBA,i,a)),ct(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function qz(n,t,e){ct(n,()=>n.bindTexture(n.TEXTURE_2D,t)),e.data instanceof Uint8Array?H().getNumber("WEBGL_VERSION")===2?ct(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e.width,e.height,n.RGBA,n.UNSIGNED_BYTE,e.data)):ct(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,e.width,e.height,0,n.RGBA,n.UNSIGNED_BYTE,e.data)):H().getNumber("WEBGL_VERSION")===2?ct(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,e)):ct(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,e)),ct(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function Kz(n,t,e,s){const r=n.createBuffer();ct(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const i=4*4*t*e;return ct(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,i,n.STREAM_READ)),ct(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,0)),ct(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}function Xz(n,t,e){const s=n,r=new Float32Array(e);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function Yz(n,t,e,s){const[r,o]=ol(t,e),a=4,i=new Uint8Array(pB(t*e,a));return ct(n,()=>n.readPixels(0,0,r,o,s.downloadTextureFormat,n.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function Zz(n,t,e,s,r,o,a,i){const l=n,c=new Float32Array(fB(o,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function Jz(n,t,e){const s=new Float32Array(t*e*4);return ct(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class om{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const e=H().getNumber("WEBGL_VERSION");if(t!=null?(this.gl=t,cB(e,t)):this.gl=hs(e),t=this.gl,H().getNumber("WEBGL_VERSION")===2){const o=t;this.createVertexArray=()=>ct(o,()=>o.createVertexArray()),this.bindVertexArray=a=>ct(o,()=>o.bindVertexArray(a)),this.deleteVertexArray=a=>ct(o,()=>o.deleteVertexArray(a)),this.getVertexArray=()=>ct(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(t!=null){const o=t.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>ct(t,()=>o.createVertexArrayOES()),this.bindVertexArray=a=>ct(t,()=>o.bindVertexArrayOES(a)),this.deleteVertexArray=a=>ct(t,()=>o.deleteVertexArrayOES(a)),this.getVertexArray=()=>ct(t,()=>t.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),H().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=id(this.gl,o),Xn(this.gl,a))this.textureHalfFloatExtension=id(this.gl,a);else if(H().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),Xn(this.gl,r))this.colorBufferHalfFloatExtension=id(this.gl,r);else if(H().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",Xn(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(Xn(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=Pz(this.gl),this.indexBuffer=Bz(this.gl),this.framebuffer=_B(this.gl),this.textureConfig=Yf(this.gl,this.textureHalfFloatExtension)}get debug(){return H().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;ct(t,()=>t.finish()),ct(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),ct(t,()=>t.deleteFramebuffer(this.framebuffer)),ct(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),ct(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),ct(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),zz(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),Wz(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),Vz(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),qz(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,s,r){this.throwIfDisposed(),jz(this.gl,t,e,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),Gz(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),Uz(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Q0(this.gl,this.framebuffer),this.outputTexture=null),ct(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,s){return this.downloadMatrixDriver(t,()=>Yz(this.gl,e,s,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,s,r,o,a){return Zz(this.gl,t,e,s,r,o,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return Xz(this.gl,t,e)}createBufferFromTexture(t,e,s){this.bindTextureToFrameBuffer(t);const r=Kz(this.gl,e,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,s;if(H().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),s=()=>{const a=r.clientWaitSync(o,0,0);return a===r.ALREADY_SIGNALED||a===r.CONDITION_SATISFIED},e=o}else H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(e,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:e,isFencePassed:s}}downloadMatrixFromPackedTexture(t,e,s){return this.downloadMatrixDriver(t,()=>Jz(this.gl,e,s))}createProgram(t){this.throwIfDisposed();const e=this.gl;this.vertexShader==null&&(this.vertexShader=Lz(e));const s=CB(e);ct(e,()=>e.attachShader(s,this.vertexShader)),ct(e,()=>e.attachShader(s,t)),$B(e,s);const r=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&Zf(e,r),r}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);const e=this.gl;ct(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),Hz(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&(ct(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&Zf(this.gl,this.program),ct(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,s=!0){return this.throwIfDisposed(),s?RB(this.gl,t,e):AB(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),ct(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,s){this.throwIfDisposed(),this.throwIfNoProgram(),DB(this.gl,t,e,s)}setOutputMatrixTexture(t,e,s){this.setOutputMatrixTextureDriver(t,s,e)}setOutputPackedMatrixTexture(t,e,s){this.throwIfDisposed();const[r,o]=pi(e,s);this.setOutputMatrixTextureDriver(t,r,o)}setOutputMatrixWriteRegion(t,e,s,r){this.setOutputMatrixWriteRegionDriver(s,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Zf(this.gl,this.program),ud(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}ct(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ct(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=id(this.gl,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,o),o}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const e=this.gl,s=this.getQueryTimerExtensionWebGL2();e.endQuery(s.TIME_ELAPSED_EXT);return}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await Dm(()=>this.disposed||this.isQueryAvailable(t,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){const s=this.gl;return s.getQueryParameter(t,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(t,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.getQueryParameter(t,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(t,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=Qz(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:s}=this.itemsToPoll[e];s()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in H().platform&&(s=H().platform.setTimeoutCustom.bind(H().platform)),Dm(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Jf(this.gl,t,this.framebuffer),this.debug&&ud(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Jf(this.gl,this.outputTexture,this.framebuffer),this.debug&&ud(this.gl)):Q0(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const s=e();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(t,e,s){this.throwIfDisposed();const r=this.gl;Jf(r,t,this.framebuffer),this.debug&&ud(r),this.outputTexture=t,ct(r,()=>r.viewport(0,0,e,s)),ct(r,()=>r.scissor(0,0,e,s))}setOutputMatrixWriteRegionDriver(t,e,s,r){this.throwIfDisposed(),ct(this.gl,()=>this.gl.scissor(t,e,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function Qz(n){let t=0;for(;t<n.length&&n[t]();++t);return t-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:tW,bincountImpl:p1,bincountReduceImpl:eW,bitwiseAndImpl:nW,castImpl:sW,ceilImpl:rW,concatImpl:oW,equalImpl:aW,expImpl:iW,expm1Impl:uW,floorImpl:lW,gatherNdImpl:cW,gatherV2Impl:dW,greaterImpl:hW,greaterEqualImpl:pW,lessImpl:fW,lessEqualImpl:mW,linSpaceImpl:gW,logImpl:bW,maxImpl:xW,maximumImpl:yW,minimumImpl:wW,multiplyImpl:IW,negImpl:kW,notEqualImpl:CW,prodImpl:$W,raggedGatherImpl:vW,raggedRangeImpl:SW,raggedTensorToTensorImpl:NW,rangeImpl:TW,rsqrtImpl:_W,scatterImpl:EW,sigmoidImpl:RW,simpleAbsImpl:f1,sliceImpl:AW,sparseFillEmptyRowsImpl:DW,sparseReshapeImpl:FW,sparseSegmentReductionImpl:m1,sqrtImpl:MW,staticRegexReplaceImpl:OW,stridedSliceImpl:LW,stringNGramsImpl:PW,stringSplitImpl:BW,stringToHashBucketFastImpl:zW,subImpl:WW,tileImpl:VW,topKImpl:UW,transposeImpl:am,uniqueImpl:GW}=XF;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g1(n,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${n}.${e}`)}function on(n,t){return t===1?[n]:g1(n,t)}function HW(n,t){if(n===1)return"rc";let e="";for(let s=0;s<n;s++)e+=t[s],s<n-1&&(e+=",");return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jW{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=Qe(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const e=on("rc",this.rank),s=ne(this.rank),r=this.getOutOfBoundsCondition(e),o=this.getSetup(e),a=this.getOutput(e);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(t){const e=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let o=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)o=`${t[t.length-1-a]},`+o;e.push(o)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let s=this.rank-2;s<this.rank;s++)e+=`${t[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";const e=t.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(t){const e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class b1{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=Qe(this.outputShape.length);let s="";for(let r=0;r<4;r++){let o="thisRC = rc;";r%2===1&&(o+="thisRC.z += 1;"),r>1&&(o+="thisRC.y += 1;"),s+=`
        ${o}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${qW(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?sm():nm(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${s}

        setOutput(result);
      }
    `}}function qW(n,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?HB(["r","c","d"],"inputShape"):co(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KW{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,s){const r=y1(e,s),o=w1(t,r,s);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const a=x1(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const l=this.freeTextures[o].pop();return this.usedTextures[o].push(l),l}let i;return r===Ve.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===Ve.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===Ve.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===Ve.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===Ve.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[o].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(t,e,s,r){if(this.freeTextures==null)return;const o=y1(s,r),a=w1(e,o,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=x1(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=H().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const c=this.usedTextures[a],u=c&&c.indexOf(t);if(u==null||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[u]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function XW(n,t){const e=n;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===n.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function x1(n,t,e,s,r){const o=YW(t,s);let a;if(r){const[l,c]=pi(n[0],n[1]);a=l*c}else{const[l,c]=ol(n[0],n[1]);a=l*c}const i=XW(e,o);return a*i}function YW(n,t){switch(n){case Ve.PACKED_2X2_FLOAT32:return d1(t);case Ve.PACKED_2X2_FLOAT16:return h1(t);case Ve.UNPACKED_FLOAT32:return u1(t);case Ve.UNPACKED_FLOAT16:return l1(t);case Ve.PACKED_4X1_UNSIGNED_BYTE:return c1(t);default:throw new Error(`Unknown physical texture type ${n}`)}}function ZW(n){return H().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?Ve.PACKED_2X2_FLOAT32:Ve.UNPACKED_FLOAT32:n?Ve.PACKED_2X2_FLOAT16:Ve.UNPACKED_FLOAT16}function y1(n,t){if(n===On.UPLOAD)return Ve.PACKED_2X2_FLOAT32;if(n===On.RENDER||n==null)return ZW(t);if(n===On.DOWNLOAD||n===On.PIXELS)return Ve.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function w1(n,t,e){return`${n[0]}_${n[1]}_${t}_${e}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Es{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=Qe(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const Yn="if (isnan(x)) return x;",JW="return x;",I1="return abs(x);",QW="return (x >= 0.0) ? x : (exp(x) - 1.0);",tV=Yn+`
  return (x < 0.0) ? 0.0 : x;
`,eV=Yn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,br="return x;",nV="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sV="return x;",rV=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,oV=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,aV=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,iV="return 1.0 / (1.0 + exp(-1.0 * x));";class xr{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=Qe(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uV{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=Qe(this.outputShape.length);const e=t.length,s=on("rc",e),r=ne(e),o=HW(e,s),a=s.slice(-2),i=e<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lV=lb,cV=1e-7,dV=1e-4,pd={};function hV(n){return n in pd||(pd[n]={}),pd[n]}const pV=H().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),fV=600;function mV(){return H().global.screen==null?1024:H().global.screen.height*H().global.screen.width*window.devicePixelRatio*fV/1024/1024}class fd extends yl{nextDataId(){return fd.nextDataId++}constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!H().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(t!=null){if(t instanceof om)e=t;else{const s=hs(H().getNumber("WEBGL_VERSION"),t);e=new om(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=hs(H().getNumber("WEBGL_VERSION"));e=new om(s),this.binaryCache=hV(H().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new KW(this.gpgpu),this.numMBBeforeWarning=mV(),this.texData=new zd(this,es())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,s,r,o,a){const i=this.makeTensorInfo(e,s),l=this.texData.get(i.dataId);l.isPacked=!1,l.texture={texture:t,texShape:[r,o]},l.texShape=[r,o];const c=ld(e),u=new i1(c,!1,a),d=this.runWebGLProgram(u,[i],s,[[r,o]]);return d.shape=e,l.texture=null,this.disposeIntermediateTensorInfo(i),d.dataId}write(t,e,s){if((H().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||H().getBool("DEBUG"))&&this.checkNumericalProblems(t),s==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:e,dtype:s,values:t,usage:On.UPLOAD,refCount:1}),r}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){const e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--}}move(t,e,s,r,o){if(H().getBool("DEBUG")&&this.checkNumericalProblems(e),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:s,dtype:r,values:e,usage:On.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:s,dtype:r,complexTensorInfos:o,slice:a,shape:i,isPacked:l}=e;if(a!=null){let h;l?h=new xr(i,br):h=new Es(i,br);const p=this.runWebGLProgram(h,[{dataId:t,shape:i,dtype:r}],r),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(t);if(r==="string")return s;const c=this.activeTimers!=null;let u;c&&(u=Xe());let d;if(r==="complex64"){const h=this.readSync(o.real.dataId),p=this.readSync(o.imag.dataId);d=Ws(h,p)}else d=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=Xe()-u),this.convertAndCacheOnCPU(t,d)}async read(t){if(this.pendingRead.has(t)){const f=this.pendingRead.get(t);return new Promise(m=>f.push(m))}const e=this.texData.get(t),{values:s,shape:r,slice:o,dtype:a,complexTensorInfos:i,isPacked:l}=e;if(o!=null){let f;l?f=new xr(r,br):f=new Es(r,br);const m=this.runWebGLProgram(f,[{dataId:t,shape:r,dtype:a}],a),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(s!=null)return this.convertAndCacheOnCPU(t);if(H().getBool("DEBUG")&&!H().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&H().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,u;if(a!=="complex64"&&H().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const f=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(f.texture.texture,...ad(r))}this.pendingRead.set(t,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(a==="complex64"){const f=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),m=f[0],g=f[1];d=Ws(m,g)}else if(c==null)d=this.getValuesFromTexture(t);else{const f=L(r);d=this.gpgpu.downloadFloat32MatrixFromBuffer(c,f)}if(u!=null&&this.disposeIntermediateTensorInfo(u),c!=null){const f=this.gpgpu.gl;ct(f,()=>f.deleteBuffer(c))}const h=this.convertAndCacheOnCPU(t,d),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach(f=>f(h)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&es().removeDataId(t,this),this.pendingDeletes--),h}readToGPU(t,e={}){const s=this.texData.get(t),{values:r,shape:o,slice:a,dtype:i,isPacked:l,texture:c}=s;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let p;l?p=new xr(o,br):p=new Es(o,br);const f=this.runWebGLProgram(p,[{dataId:t,shape:o,dtype:i}],i),m=this.readToGPU(f,e);return this.disposeIntermediateTensorInfo(f),m}if(c==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(t,e.customTexShape),d=es().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const s=e.map(r=>tr(r));return Ot(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ot(t.shape,t.dtype,e)}checkNumericalProblems(t){if(t!=null)for(let e=0;e<t.length;e++){const s=t[e];if(!xB(s))throw H().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:e,dtype:s,isPacked:r}=this.texData.get(t),o=L(e);if(H().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const h=this.decode(t),p=this.texData.get(h.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...ad(e)).subarray(0,o);return this.disposeIntermediateTensorInfo(h),f}const a=H().getBool("WEBGL_PACK")&&r===!0,i=a?ld(e):e,l=a?new Fz(i):new Dz(i),c=this.runWebGLProgram(l,[{shape:i,dtype:s,dataId:t}],"float32"),u=this.texData.get(c.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(c),d}timerAvailable(){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,t();const o=Fr(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=Fr(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=e,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(o);i.kernelMs=gC(l),i.getExtraProfileInfo=()=>l.map((c,u)=>({name:a[u],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Xe(),endMs:null}}endTimer(t){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Xe(),t)}async getQueryTime(t){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:s}=this.texData.get(t);return s!=null&&(this.disposeData(s.real.dataId,e),this.disposeData(s.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:s,texShape:r,usage:o,isPacked:a,slice:i}=this.texData.get(t),l=i&&i.origDataId||t,c=this.dataRefCount.get(l);c>1?this.dataRefCount.set(l,c-1):(this.dataRefCount.delete(l),e!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(e,r,o,a)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=pV){return H().getBool("WEBGL_CPU_FORWARD")&&t.every(s=>this.texData.get(s.dataId).texture==null&&L(s.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){Nn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return lV(t.shape,e)}packedUnaryOp(t,e,s){const r=new xr(t.shape,e),o=this.compileAndRun(r,[t],s);return es().makeTensorFromTensorInfo(o)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){const r=f1(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,r)}if(H().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,I1,t.dtype);const e=new Es(t.shape,I1),s=this.compileAndRun(e,[t]);return es().makeTensorFromTensorInfo(s)}makeTensorInfo(t,e,s){let r;if(e==="string"&&s!=null&&s.length>0&&Ni(s[0])){const o=s.map(a=>Qs(a));r=this.write(o,t,e)}else r=this.write(s,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,s){return es().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,s),this)}unpackTensor(t){const e=new uV(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new jW(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const s=[fi(t.shape),...mi(t.shape)],r={dtype:t.dtype,shape:s,dataId:t.dataId},o=[fi(e),...mi(e)],a=new b1(o,s),i=!0,l=[s],c=this.runWebGLProgram(a,[r],t.dtype,l,i);return{dataId:c.dataId,shape:e,dtype:c.dtype}}decode(t,e){const s=this.texData.get(t),{isPacked:r,shape:o,dtype:a}=s;if(e!=null){const h=L(o),p=e[0]*e[1]*4;N(h<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const i=ld(o);let l;r?l=new Az(i):l=new Rz(i);const c=!0,u=[e??ad(i)],d=this.runWebGLProgram(l,[{shape:i,dtype:a,dataId:t}],a,u,c,e);return{dtype:a,shape:o,dataId:d.dataId}}runWebGLProgram(t,e,s,r,o=!1,a){const i=this.makeTensorInfo(t.outputShape,s),l=this.texData.get(i.dataId);if(t.packedOutput&&(l.isPacked=!0),t.outPackingScheme===rl.DENSE){const b=a??ad(t.outputShape);l.texShape=b.map(x=>x*2)}if(t.outTexUsage!=null&&(l.usage=t.outTexUsage),L(i.shape)===0)return l.values=qe(i.dtype,0),i;const c=[],u=e.map(b=>{if(b.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(b.dataId);if(x.texture==null){if(!t.packedInputs&&L(b.shape)<=H().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:b.shape,texData:null,isUniform:!0,uniformValues:x.values};t.packedInputs&&(x.isPacked=!0,x.shape=b.shape)}if(this.uploadToGPU(b.dataId),!!x.isPacked!=!!t.packedInputs)b=x.isPacked?this.unpackTensor(b):this.packTensor(b),c.push(b),x=this.texData.get(b.dataId);else if(x.isPacked&&!dd(x.shape,b.shape)){const y=b,w=b.shape;b.shape=x.shape,b=this.packedReshape(b,w),c.push(b),x=this.texData.get(b.dataId),y.shape=w}return{shape:b.shape,texData:x,isUniform:!1}});this.uploadToGPU(i.dataId);const d={shape:i.shape,texData:l,isUniform:!1},h=Ez(t,u,d),p=this.getAndSaveBinary(h,()=>Tz(this.gpgpu,t,u,d)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),H().get("ENGINE_COMPILE_ONLY")||_z(this.gpgpu,p,u,d,r),c.forEach(b=>this.disposeIntermediateTensorInfo(b)),f&&(m=this.endTimer(m),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(m)}));const g=H().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const b=Xe();b-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=b)}if(!H().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&o===!1){const b=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),b}return i}compileAndRun(t,e,s,r,o=!1){return s=s||e[0].dtype,this.runWebGLProgram(t,e,s,r,o)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(H().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=G(()=>{if(!H().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=H().getBool("DEBUG");H().set("DEBUG",!1);const e=this.abs(St(1e-8)).dataSync()[0];if(H().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?cV:dV}uploadToGPU(t){const e=this.texData.get(t),{shape:s,dtype:r,values:o,texture:a,usage:i,isPacked:l}=e;if(a!=null)return;const c=this.activeTimers!=null;let u;c&&(u=Xe());let d=e.texShape;if(d==null&&(d=OB(s,l),e.texShape=d),o!=null){const h=ld(s);let p,f=d[1],m=d[0];const g=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(l||!g)&&([f,m]=pi(d[0],d[1])),l?p=new Oz(h,g):p=new i1(h,g);const b=g?[m,f]:d,x=this.makeTensorInfo(b,r),y=this.texData.get(x.dataId);g?y.usage=On.PIXELS:y.usage=On.UPLOAD,y.texShape=b,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),f,m,o);const w=[[m,f]],C=this.runWebGLProgram(p,[x],r,w,!0),S=this.texData.get(C.dataId);e.texShape=S.texShape,e.isPacked=S.isPacked,e.usage=S.usage,H().get("ENGINE_COMPILE_ONLY")?this.disposeData(C.dataId):(e.texture=S.texture,e.values=null,this.texData.delete(C.dataId)),this.disposeIntermediateTensorInfo(x),c&&(this.uploadWaitMs+=Xe()-u)}else{const h=this.acquireTexture(d,i,r,l);e.texture=h}}convertAndCacheOnCPU(t,e){const s=this.texData.get(t),{dtype:r}=s;return e!=null&&(s.values=gV(e,r)),s.values}acquireTexture(t,e,s,r){if(this.numBytesInGPU+=this.computeBytes(t,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*vo(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}else{for(const[,e]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(e),r(!0)}catch(o){throw o}});t.push(s)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await Fb(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Z0(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const t of Object.values(this.binaryCache)){this.gpgpu.buildVao(t.webGLProgram);const{variablesLocations:e,customUniformLocations:s,infLoc:r,nanLoc:o,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:l}=o1(this.gpgpu,t.program,t.webGLProgram);t.variablesLocations=e,t.customUniformLocations=s,t.infLoc=r,t.nanLoc=o,t.outShapeLocation=a,t.outShapeStridesLocation=i,t.outTexShapeLocation=l}}createTensorFromGPUData(t,e,s){t.channels=t.channels||"RGBA";const{texture:r,height:o,width:a,channels:i}=t,l=es().backend;if(!l.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=l.writeTexture(r,e,s,o,a,i);return es().makeTensorFromDataId(c,e,s,l)}}fd.nextDataId=0;function gV(n,t){if(t==="float32"||t==="complex64")return n;if(t==="int32"||t==="bool"){const e=t==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<e.length;++s)e[s]=Math.round(n[s]);return e}else throw new Error(`Unknown dtype ${t}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dg()&&Th("webgl",()=>new fd,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const im=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class po{constructor(t,e,s){this.variableNames=["A","B"],this.outputShape=vt(e,s),this.enableShapeUniforms=Qe(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fo=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class wi{constructor(t,e,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=vt(e,s);const o=this.outputShape.length;this.enableShapeUniforms=Qe(o);let a="";if(r)if(o===0||L(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${ne(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=on("coords",o);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${l[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${l[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${l[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${l[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kn(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const bV={kernelName:ea,backendName:"webgl",kernelFunc:kn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yr(n){const{inputs:t,backend:e}=n,{real:s,imag:r}=t,o=e.makeTensorInfo(s.shape,"complex64"),a=e.texData.get(o.dataId),i=kn({inputs:{x:s},backend:e}),l=kn({inputs:{x:r},backend:e});return a.complexTensorInfos={real:i,imag:l},o}const xV={kernelName:Jd,backendName:"webgl",kernelFunc:yr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k1="return (a < 0.) ? b * a : a;",C1=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function yV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{alpha:o}=s,a=e.makeTensorInfo([],"float32",Js(o,"float32")),i=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wi(C1,r.shape,a.shape):new po(k1,r.shape,a.shape),l=e.runWebGLProgram(i,[r,a],"float32");return e.disposeIntermediateTensorInfo(a),l}const wV={kernelName:oa,backendName:"webgl",kernelFunc:yV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $1="return (a < 0.) ? b * a : a;",v1=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function IV(n){const{inputs:t,backend:e}=n,{x:s,alpha:r}=t,o=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wi(v1,s.shape,r.shape):new po($1,s.shape,r.shape);return e.runWebGLProgram(o,[s,r],"float32")}const kV={kernelName:Ia,backendName:"webgl",kernelFunc:IV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ii="if (isnan(x)) return x;";function Ut({opSnippet:n,packedOpSnippet:t,cpuKernelImpl:e,dtype:s}){return({inputs:r,backend:o})=>{const{x:a}=r,i=o,l=s||a.dtype;if(i.shouldExecuteOnCPU([a])&&e!=null){const d=i.texData.get(a.dataId),h=e(d.values,l);return i.makeTensorInfo(a.shape,l,h)}const c=H().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null;let u;return c?u=new xr(a.shape,t):u=new Es(a.shape,n),i.runWebGLProgram(u,[a],l)}}function Ue({opSnippet:n,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:o}){return({inputs:a,backend:i})=>{const{a:l,b:c}=a,u=i;if(s&&l.dtype==="complex64"){const f=u.texData.get(l.dataId),m=u.texData.get(c.dataId),[g,b]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(y=>{const[w,I]=y,C={dataId:w.dataId,dtype:w.dtype,shape:l.shape},S={dataId:I.dataId,dtype:I.dtype,shape:c.shape},T=new po(n,l.shape,c.shape);return u.runWebGLProgram(T,[C,S],xn(w.dtype,I.dtype))}),x=yr({inputs:{real:g,imag:b},backend:u});return u.disposeIntermediateTensorInfo(g),u.disposeIntermediateTensorInfo(b),x}const d=o||xn(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&r!=null){const f=u.texData.get(l.dataId).values,m=u.texData.get(c.dataId).values,g=l.dtype==="string"?Vs(f):f,b=l.dtype==="string"?Vs(m):m,[x,y]=r(l.shape,c.shape,g,b,d),w=u.makeTensorInfo(y,d),I=u.texData.get(w.dataId);return I.values=x,w}const h=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null;let p;return h?p=new wi(t,l.shape,c.shape,e):p=new po(n,l.shape,c.shape),u.runWebGLProgram(p,[l,c],d)}}function ul(n,t=!1){if(n==="linear")return t?sV:JW;if(n==="relu")return t?oV:tV;if(n==="elu")return t?rV:QW;if(n==="relu6")return t?aV:eV;if(n==="prelu")return t?v1:$1;if(n==="leakyrelu")return t?C1:k1;if(n==="sigmoid")return t?iV:nV;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S1{constructor(t,e,s,r=!1,o=!1,a=!1,i=null,l=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=Qe(this.outputShape.length);const u=r?t[1]:t[2],d=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=o?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",b="";i&&(l?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:c?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,b="result = activation(result);");const x=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let y="rc.x",w="rc.x";t[0]<e[0]?y=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(w=`imod(rc.x, ${e[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${y};
        int batchB = ${w};
        for (int i = 0; i < ${d}; i++) {
          vec4 a = getMatrixA(batchA, ${h});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${x}

        ${b}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N1={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class T1{constructor(t,e,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=vt(e,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _1="return a * b;";function um(n){const{inputs:t,backend:e}=n,{a:s,b:r}=t,o=xn(s.dtype,r.dtype);if(s.dtype==="complex64"){const i=e.texData.get(s.dataId),l=e.texData.get(r.dataId),c=new T1(N1.REAL,s.shape,r.shape),u=new T1(N1.IMAG,s.shape,r.shape),d=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],h=e.runWebGLProgram(c,d,"float32"),p=e.runWebGLProgram(u,d,"float32"),f=yr({inputs:{real:h,imag:p},backend:e});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),f}if(e.shouldExecuteOnCPU([s,r])){const i=e.texData.get(s.dataId),l=e.texData.get(r.dataId),[c,u]=IW(s.shape,r.shape,i.values,l.values,o),d=e.makeTensorInfo(u,o),h=e.texData.get(d.dataId);return h.values=c,d}let a;return H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new wi(_1,s.shape,r.shape):a=new po(_1,s.shape,r.shape),e.runWebGLProgram(a,[s,r],o)}const CV={kernelName:ba,backendName:"webgl",kernelFunc:um};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $V(n,t,e){const s=[fi(n.shape),...mi(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},o=[fi(t),...mi(t)],a=new b1(o,s),i=!0,l=[s],c=e.runWebGLProgram(a,[r],n.dtype,l,i);return{dataId:c.dataId,shape:t,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function at(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{shape:o}=s,a=e,i=L(r.shape),l=Ud(o,i),c=L(l);N(i===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);const u=a.texData.get(r.dataId);return u.isPacked&&!dd(r.shape,l)&&!(u.texture!==null&&dd(u.shape,l))?$V(r,l,a):(a.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}const vV={kernelName:hu,backendName:"webgl",kernelFunc:at};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class E1{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:a}=t;this.outputShape=[r,a];const i=Math.floor(s/4)*4,l=s%4;let c="sumValue += dot(values, ones);";if(e!=null){const d=1/e;c=`sumValue += dot(values * ${Co(d)?d.toPrecision(2):d}, ones);`}let u="";o%s>0&&(u=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${i};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SV{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:a}=t;this.outputShape=[r,a];let i="0.0",l="";e==="prod"?i="1.0":e==="min"?(i="1.0 / 1e-20",l="min"):e==="max"&&(i="-1.0 / 1e-20",l="max");let c=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?c="sumValue":e==="prod"?c="prodValue":e==="all"?c="allValue":e==="any"&&(c="anyValue");const u=Math.floor(s/4)*4,d=s%4;let h=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";e==="all"?(i="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):e==="any"&&(i="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${u};
        if (${d===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NV(n){const t=[];for(;t.length===0||t[t.length-1].outSize!==1;){const e=t.length?t[t.length-1].outSize:n[1],s=xc(e);t.push({inSize:e,windowSize:s,outSize:Math.ceil(e/s)})}return t}function mo(n,t,e,s){const r=NV(n.shape);let o=n;for(let a=0;a<r.length;a++){const{inSize:i,windowSize:l,outSize:c}=r[a];let u,d;e==="mean"?u=a===0?new E1({windowSize:l,inSize:i,batchSize:n.shape[0],outSize:c},i):new E1({windowSize:l,inSize:i,batchSize:n.shape[0],outSize:c}):u=new SV({windowSize:l,inSize:i,batchSize:n.shape[0],outSize:c},e),d=o,o=s.runWebGLProgram(u,[o],t),d.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(d)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TV{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let a=0;a<s.length;a++)s[a]=t[e[a]];this.outputShape=s,this.rank=s.length;const r=ne(this.rank),o=_V(e);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function _V(n){const t=n.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<n.length;r++)s[n[r]]=e[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EV{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(t.length);for(let u=0;u<s.length;u++)s[u]=t[e[u]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=ne(this.rank),o=g1("rc",this.rank),a=new Array(this.rank);for(let u=0;u<e.length;u++)a[e[u]]=o[u];const i=`vec2(${a.slice(-2).join()})`,l=`++${o[this.rank-1]} < ${s[this.rank-1]}`,c=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${l}) {
        result[1] = ${c};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${c};
        if(${l}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function md(n,t,e){const s=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new EV(n.shape,t):new TV(n.shape,t);return e.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RV(n,t,e,s){const r=t,o=n.shape.length,a=Et(r,n.shape);let i=a;const l=ue(i,o),c=l!=null;let u=n;c&&(u=md(n,l,s),i=se(i.length,o)),ie("sum",i,o);const[d,h]=he(u.shape,i);let p=d;e&&(p=ee(d,a));const f=L(h),g=L(n.shape)/f,b=at({inputs:{x:u},attrs:{shape:[g,f]},backend:s}),x=Sh(n.dtype),y=mo(b,x,"sum",s),w=at({inputs:{x:y},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(y),c&&s.disposeIntermediateTensorInfo(u),w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gd(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s;return RV(r,o,a,e)}const AV={kernelName:Pa,backendName:"webgl",kernelFunc:gd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function an(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{perm:o}=s,a=e,i=r.shape.length,l=new Array(i);for(let u=0;u<l.length;u++)l[u]=r.shape[o[u]];let c;if(a.shouldExecuteOnCPU([r])){const d=a.texData.get(r.dataId).values,h=am(d,r.shape,r.dtype,o,l);c=a.makeTensorInfo(l,r.dtype);const p=a.texData.get(c.dataId);p.values=h}else c=md(r,o,a);return c}const DV={kernelName:Ys,backendName:"webgl",kernelFunc:an};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R1=1e3;function bd({a:n,b:t,transposeA:e,transposeB:s,backend:r,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:l=null}){const c=n.shape.length,u=t.shape.length,d=e?n.shape[c-2]:n.shape[c-1],h=s?t.shape[u-1]:t.shape[u-2],p=e?n.shape[c-1]:n.shape[c-2],f=s?t.shape[u-2]:t.shape[u-1],m=n.shape.slice(0,-2),g=t.shape.slice(0,-2),b=L(m),x=L(g),w=vt(n.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);N(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${n.shape} and ${t.shape} and transposeA=${e} and transposeB=${s} must match.`);const I=e?[b,d,p]:[b,p,d],C=s?[x,f,h]:[x,h,f],S=at({inputs:{x:n},backend:r,attrs:{shape:I}}),T=at({inputs:{x:t},backend:r,attrs:{shape:C}}),v=[S,T],$=Math.max(b,x),k=e?S.shape[1]:S.shape[2],R=o!=null,F=a!=null,B=l==="leakyrelu",M=l!=null?ul(l,!0):null,z=R||F||B||M!=null;let j;if((p===1||f===1)&&k>R1&&z===!1){let q=S,X=T;e&&(q=an({inputs:{x:S},backend:r,attrs:{perm:[0,2,1]}}),v.push(q)),s&&(X=an({inputs:{x:T},backend:r,attrs:{perm:[0,2,1]}}),v.push(X));const Z=f!==1,Q=f===1;let J=q;Z&&(J=at({inputs:{x:q},backend:r,attrs:{shape:[$,k,1]}}),v.push(J));const ot=f===1?2:1;let nt=X;Q&&(nt=at({inputs:{x:X},backend:r,attrs:{shape:[$,1,k]}}),v.push(nt));const ut=um({inputs:{a:J,b:nt},backend:r});j=gd({inputs:{x:ut},backend:r,attrs:{axis:ot,keepDims:!0}}),v.push(ut)}else{const q=xn(n.dtype,t.dtype),X=new S1(I,C,[$,p,f],e,s,R,M,F,B),Z=[S,T];if(o!=null&&Z.push(o),F&&Z.push(a),B){const Q=r.makeTensorInfo([],"float32",Js(i,"float32"));Z.push(Q),v.push(Q)}j=r.runWebGLProgram(X,Z,q)}const V=at({inputs:{x:j},backend:r,attrs:{shape:w}});v.push(j);for(const q of v)r.disposeIntermediateTensorInfo(q);return V}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FV(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o,bias:a,preluActivationWeights:i}=t,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s;return bd({a:r,b:o,transposeA:l,transposeB:c,backend:e,bias:a,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}const MV={kernelName:Ga,backendName:"webgl",kernelFunc:FV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A1="return abs(x);";function OV(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const o=e.texData.get(s.dataId),a=f1(o.values);return e.makeTensorInfo(s.shape,s.dtype,a)}let r;return H().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new xr(s.shape,A1):r=new Es(s.shape,A1),e.runWebGLProgram(r,[s],s.dtype)}const LV={kernelName:Ti,backendName:"webgl",kernelFunc:OV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PV=Yn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,BV=Ut({opSnippet:PV}),zV={kernelName:No,backendName:"webgl",kernelFunc:BV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WV=Yn+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,VV=Ut({opSnippet:WV}),UV={kernelName:To,backendName:"webgl",kernelFunc:VV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D1="return a + b;",GV=Ue({opSnippet:D1,packedOpSnippet:D1,supportsComplex:!0,cpuKernelImpl:tW}),HV={kernelName:Nr,backendName:"webgl",kernelFunc:GV};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jV{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((o,a)=>`T${a}`);const s=[];this.variableNames.forEach(o=>{s.push(`float v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qV{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((o,a)=>`T${a}`);const s=[];this.variableNames.forEach(o=>{s.push(`vec4 v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xd(n){const{inputs:t,backend:e}=n,s=t;if(s.length===1)return kn({inputs:{x:s[0]},backend:e});if(s.length>H().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),c=xd({inputs:s.slice(0,l),backend:e}),u=xd({inputs:s.slice(l),backend:e});return xd({inputs:[c,u],backend:e})}const r=s.map(l=>l.dtype).reduce((l,c)=>xn(l,c)),o=s.map(l=>l.shape),i=H().getBool("WEBGL_PACK")?new qV(s[0].shape,o):new jV(s[0].shape,o);return e.runWebGLProgram(i,s,r)}const KV={kernelName:_i,backendName:"webgl",kernelFunc:xd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s,i=r.shape.length,l=Et(o,r.shape);let c=l;const u=ue(c,i);let d=r;u!=null&&(d=an({inputs:{x:r},backend:e,attrs:{perm:u}}),c=se(c.length,i)),ie("all",c,i);const[h,p]=he(d.shape,c),f=L(p),m=at({inputs:{x:d},backend:e,attrs:{shape:[-1,f]}}),g=mo(m,m.dtype,"all",e);let b;if(a){const x=ee(h,l);b=at({inputs:{x:g},backend:e,attrs:{shape:x}})}else b=at({inputs:{x:g},backend:e,attrs:{shape:h}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),u!=null&&e.disposeIntermediateTensorInfo(d),b}const YV={kernelName:Ei,backendName:"webgl",kernelFunc:XV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZV(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s,i=r.shape.length,l=Et(o,r.shape);let c=l;const u=ue(c,i);let d=r;u!=null&&(d=an({inputs:{x:r},backend:e,attrs:{perm:u}}),c=se(c.length,i)),ie("any",c,i);const[h,p]=he(d.shape,c),f=L(p),m=at({inputs:{x:d},backend:e,attrs:{shape:[-1,f]}}),g=mo(m,m.dtype,"any",e);let b;if(a){const x=ee(h,l);b=at({inputs:{x:g},backend:e,attrs:{shape:x}})}else b=at({inputs:{x:g},backend:e,attrs:{shape:h}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),u!=null&&e.disposeIntermediateTensorInfo(d),b}const JV={kernelName:Ri,backendName:"webgl",kernelFunc:ZV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QV{constructor(t,e,s){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:a}=t;s||this.variableNames.push("bestIndicesA"),this.outputShape=[o,a];const i=e==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tU{constructor(t,e,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,N(t.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const o=t[t.length-1],a=Math.ceil(o/e);this.outputShape=t.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,l=i.length,c=ne(l),u=on("coords",l);let d,h;if(a===1){h=l+1;const T=ne(h);d=`
        ${T} sourceLocR = ${T}(${u.join()}, 0);
        ++${u[l-1]};
        ${T} sourceLocG = ${T}(${u.join()}, 0);
        ++${u[l-2]};
        ${T} sourceLocA = ${T}(${u.join()}, 0);
        --${u[l-1]};
        ${T} sourceLocB = ${T}(${u.join()}, 0);
        --${u[l-2]};`}else h=l,d=`
        ${c} sourceLocR = coords;
        ++${u[l-1]};
        ${c} sourceLocG = coords;
        ++${u[l-2]};
        ${c} sourceLocA = coords;
        --${u[l-1]};
        ${c} sourceLocB = coords;
        --${u[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map(T=>"int "+T),g=on("sourceLocR",h-1).concat("inIdx.r"),b=on("sourceLocG",h-1).concat("inIdx.g"),x=on("sourceLocB",h-1).concat("inIdx.b"),y=on("sourceLocA",h-1).concat("inIdx.a"),w=s==="max"?"greaterThan":"lessThan",I=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${y.join()})));`,C=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${b.join()}) : 0.,
            hasNextRow ? getAChannel(${x.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,S=r?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${S}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${u[l-1]} < ${i[l-1]-1};
        bool hasNextRow = ${u[l-2]} < ${i[l-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${C};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${I}
          vec4 candidate = ${C};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F1(n,t,e,s=null){let r=t.shape[0],o=t.shape[1];s!=null&&(r=s.shape[0],o=s.shape[1]);const a=xc(o),i={windowSize:a,inSize:o,batchSize:r,outSize:Math.ceil(o/a)},l=new QV(i,e,s==null),c=[t];s!=null&&c.push(s);const u=n.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;const d=F1(n,t,e,u);return n.disposeIntermediateTensorInfo(u),d}function M1(n,t,e,s=null){const r=s!=null?s.shape:t.shape,o=r[r.length-1],a=xc(o),i=new tU(r,a,e,s==null),l=s==null?[t]:[t,s],c=n.runWebGLProgram(i,l,"int32");if(c.shape.length===t.shape.length){const u=M1(n,t,e,c);return n.disposeIntermediateTensorInfo(c),u}return c}function O1(n,t,e,s){const r=[e];if(ie("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!H().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const o=[],a=n.texData.get(t.dataId),i=a!==null&&a.isPacked;let l=t;i&&(l=n.unpackTensor(t),o.push(l));const[c,u]=he(l.shape,r),d=L(u),h=at({inputs:{x:l},backend:n,attrs:{shape:[-1,d]}});o.push(h);const p=F1(n,h,s);o.push(p);const f=at({inputs:{x:p},backend:n,attrs:{shape:c}});return o.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}return M1(n,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;let a=Et(o,r.shape);const i=ue(a,r.shape.length);let l=r;const c=[];i!=null&&(l=an({inputs:{x:r},backend:e,attrs:{perm:i}}),c.push(l),a=se(a.length,l.shape.length)),ie("argMax",[a[0]],l.shape.length);const u=O1(e,l,a[0],"max");return c.forEach(d=>e.disposeIntermediateTensorInfo(d)),u}const nU={kernelName:Ai,backendName:"webgl",kernelFunc:eU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o}=s;let a=Et(o,r.shape);const i=ue(a,r.shape.length);let l=r;const c=[];i!=null&&(l=an({inputs:{x:r},backend:e,attrs:{perm:i}}),c.push(l),a=se(a.length,l.shape.length)),ie("argMin",[a[0]],l.shape.length);const u=O1(e,l,a[0],"min");return c.forEach(d=>e.disposeIntermediateTensorInfo(d)),u}const rU={kernelName:Di,backendName:"webgl",kernelFunc:sU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oU=Yn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,aU=Ut({opSnippet:oU}),iU={kernelName:_o,backendName:"webgl",kernelFunc:aU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uU=Yn+"return log(x + sqrt(x * x + 1.0));",lU=Ut({opSnippet:uU}),cU={kernelName:Eo,backendName:"webgl",kernelFunc:lU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dU=Yn+`
  return atan(x);
`,hU=Ut({opSnippet:dU}),pU={kernelName:Ro,backendName:"webgl",kernelFunc:hU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fU=im+`
  return atan(a, b);
`,mU=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+fo+`
  return result;
`,gU=Ue({opSnippet:fU,packedOpSnippet:mU}),bU={kernelName:Do,backendName:"webgl",kernelFunc:gU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xU=Yn+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,yU=Ut({opSnippet:xU}),wU={kernelName:Ao,backendName:"webgl",kernelFunc:yU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ll{constructor(t,e,s,r=!1,o=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideHeight,l=t.strideWidth,c=t.dilationHeight,u=t.dilationWidth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;const m=e==="avg",g=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,b=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let x="0.0";if(m||(x="-1.0 / 1e-20"),s){const T=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${l});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${T} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?o?g:b:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const y="max";let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(w="avgValue / max(count, 1.0)");const I=Math.floor(a/4)*4,C=a%4,S=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${y}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${l});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${I}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${S}
          }

          int xC = xCCorner + ${I};
          if (${C===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${S}
          } else if (${C===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${S}
          } else if (${C===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${S}
          }
        }
        setOutput(${w});
      }
    `}}class lm{constructor(t,e,s,r=!1,o=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideDepth,l=t.strideHeight,c=t.strideWidth,u=t.dilationDepth,d=t.dilationHeight,h=t.dilationWidth,p=t.effectiveFilterDepth,f=t.effectiveFilterHeight,m=t.effectiveFilterWidth,g=t.padInfo.front,b=t.padInfo.top,x=t.padInfo.left;this.outputShape=t.outShape;const y=e==="avg";let w="0.0";if(y||(w="-1.0 / 1e-20"),s){const $=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${l}, ${c});
        const ivec3 pads = ivec3(${g}, ${b}, ${x});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${$} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?o?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const I="max";let C=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(C="avgValue / max(count, 1.0)");const S=Math.floor(a/4)*4,T=a%4,v=`
      if (${y}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${l}, ${c});
      const ivec3 pads = ivec3(${g}, ${b}, ${x});
      const float initializationValue = ${w};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${w});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${S}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${v}
            }

            int xC = xCCorner + ${S};
            if (${T===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${v}
            } else if (${T===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${v}
            } else if (${T===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${v}
            }
          }
        }
        setOutput(${C});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;al(r,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=s,c=1;N(We(a,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const u=Ye(r.shape,o,a,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&Kt(u.inShape,u.outShape))return kn({inputs:{x:r},backend:e});const d=new ll(u,"avg",!1);return e.runWebGLProgram(d,[r],"float32")}const kU={kernelName:Fo,backendName:"webgl",kernelFunc:IU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:l,dataFormat:c}=s,u=[1,1,1],d=Tn(r.shape,o,a,u,i,l,c),h=new lm(d,"avg",!1);return e.runWebGLProgram(h,[r],"float32")}const $U={kernelName:Fi,backendName:"webgl",kernelFunc:CU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vU{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,r=t.strideHeight,o=t.strideWidth,a=t.dilationHeight,i=t.dilationWidth,l=t.effectiveFilterHeight,c=t.effectiveFilterWidth,u=l-1-t.padInfo.top,d=c-1-t.padInfo.left,h=1/(e*s);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${d});
      const float avgMultiplier = float(${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class SU{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,r=t.filterWidth,o=t.strideDepth,a=t.strideHeight,i=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,d=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,f=d-1-t.padInfo.front,m=h-1-t.padInfo.top,g=p-1-t.padInfo.left,b=1/(e*s*r);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${g});
      const float avgMultiplier = float(${b});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NU(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,a=o,{filterSize:i,strides:l,pad:c,dimRoundingMode:u}=s,d=[1,1,1],h=Tn(a.shape,i,l,d,c,u),p=new SU(h);return e.runWebGLProgram(p,[r],a.dtype)}const TU={kernelName:Il,backendName:"webgl",kernelFunc:NU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _U(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,a=o;al([r,o],"avgPoolGrad");const{filterSize:i,strides:l,pad:c}=s,u=Ye(a.shape,i,l,1,c),d=new vU(u);return e.runWebGLProgram(d,[r],a.dtype)}const EU={kernelName:wl,backendName:"webgl",kernelFunc:_U};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RU(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o}=t,{transposeA:a,transposeB:i}=s;return bd({a:r,b:o,transposeA:a,transposeB:i,backend:e})}const AU={kernelName:Mo,backendName:"webgl",kernelFunc:RU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DU{constructor(t,e,s,r,o,a){this.outputShape=[],this.variableNames=["x","mean","variance"],vt(t,e),vt(t,s);let i="0.0";r!=null&&(vt(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="1.0";o!=null&&(vt(t,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FU{constructor(t,e,s,r,o,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],vt(t,e),vt(t,s);let i="vec4(0.0)";r!=null&&(vt(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="vec4(1.0)";o!=null&&(vt(t,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MU={kernelName:Qo,backendName:"webgl",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,mean:r,variance:o,offset:a,scale:i}=n;N(r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),N(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),N(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;l==null&&(l=.001);const c=[s,r,o];let u=null;a!=null&&(u=a.shape,c.push(a));let d=null;i!=null&&(d=i.shape,c.push(i));const h=H().getBool("WEBGL_PACK_NORMALIZATION")?new FU(s.shape,r.shape,o.shape,u,d,l):new DU(s.shape,r.shape,o.shape,u,d,l);return t.runWebGLProgram(h,c,c[0].dtype)}};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OU{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=ne(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=LU(this.rank);let r;const o=t.map((a,i)=>`sourceLoc.${cm[i]} = start[${i}] + coords.${cm[i]};`);r=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}}const cm=["x","y","z","w","u","v"];function LU(n){if(n===1)return"sourceLoc";if(n<=6)return cm.slice(0,n).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PU{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=ne(this.rank),s=on("coords",this.rank),r=on("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${o})`,i=`
      result.x = ${a};
      if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${a};
        --${r[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${t[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${a};
        if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${a};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((u,d)=>`start[${d}]`).join()});`:t.map((u,d)=>`${r[d]} = ${s[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${i}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BU(n,t,e,s){const r=s.texData.get(n.dataId),o=s.makeTensorInfo(e,n.dtype),a=s.texData.get(o.dataId);Object.assign(a,r),a.refCount=1,a.shape=e,a.dtype=n.dtype;let i=mc(t,pt(n.shape));r.slice&&(i+=r.slice.flatOffset),a.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||n.dataId};const l=s.dataRefCount.get(a.slice.origDataId)||1;return s.dataRefCount.set(a.slice.origDataId,l+1),o}function ki(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,size:a}=s,[i,l]=Pu(r,o,a);if(Ip(r,i,l),L(l)===0)return e.makeTensorInfo(l,r.dtype,[]);if(e.shouldExecuteOnCPU([r])||r.dtype==="string"){const d=e.texData.get(r.dataId),h=AW(d.values,i,l,r.shape,r.dtype);return e.makeTensorInfo(l,r.dtype,h)}const{isPacked:c}=e.texData.get(r.dataId),u=fc(r.shape,i,l);if(c||!u){const d=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new PU(l):new OU(l),h=[i];return e.runWebGLProgram(d,[r],r.dtype,h)}return e.uploadToGPU(r.dataId),BU(r,i,l,e)}const zU={kernelName:gu,backendName:"webgl",kernelFunc:ki};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WU={kernelName:Mi,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,crops:a}=s;N(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((x,y)=>x*y),l=Yr(r.shape,o,i),c=Zr(l.length,o.length),u=Jr(r.shape,o,i),d=wc(a,o.length),h=Ic(u,a,o.length),p=[],f=at({inputs:{x:r},backend:e,attrs:{shape:l}}),m=an({inputs:{x:f},backend:e,attrs:{perm:c}}),g=at({inputs:{x:m},backend:e,attrs:{shape:u}}),b=ki({inputs:{x:g},backend:e,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(g),p.forEach(x=>e.disposeIntermediateTensorInfo(x)),b}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VU(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:a}=s,i=e.readSync(r.dataId),l=e.readSync(o.dataId),c=p1(i,l,o.dtype,o.shape,a);return e.makeTensorInfo([a],o.dtype,c)}const UU={kernelName:Oi,backendName:"webgl",kernelFunc:VU};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GU=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,HU=`
  return float(int(a.r) & int(b.r));
`;function jU(n){const{inputs:t,backend:e}=n,{a:s,b:r}=t,o=H().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=H().getNumber("WEBGL_VERSION");if(e.shouldExecuteOnCPU([s,r])||a===1){const l=e.texData.get(s.dataId).values,c=e.texData.get(r.dataId).values,[u,d]=nW(s.shape,r.shape,l,c,s.dtype),h=e.makeTensorInfo(d,s.dtype),p=e.texData.get(h.dataId);return p.values=u,h}let i;return o?i=new wi(GU,s.shape,r.shape,!1):i=new po(HU,s.shape,r.shape),e.runWebGLProgram(i,[s,r],s.dtype)}const qU={kernelName:kl,backendName:"webgl",kernelFunc:jU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KU(n){const{inputs:t,backend:e}=n,{s0:s,s1:r}=t,o=e.readSync(s.dataId),a=e.readSync(r.dataId),i=vt(Array.from(o),Array.from(a));return e.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const XU={kernelName:Zd,backendName:"webgl",kernelFunc:KU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L1=Ue({opSnippet:"return float(a != b);",cpuKernelImpl:CW,dtype:"bool"}),YU={kernelName:au,backendName:"webgl",kernelFunc:L1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cl(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.texData.get(s.dataId);return kn({inputs:{x:r.complexTensorInfos.real},backend:e})}const ZU={kernelName:uh,backendName:"webgl",kernelFunc:cl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JU="return float(int(x));";function QU(n,t){const e=new Es(n.shape,JU),s=t.runWebGLProgram(e,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dm(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return kn({inputs:{x:r},backend:e});const a=Pe(r.shape),i=dm({inputs:{x:r},backend:e,attrs:{dtype:"float32"}}),l=yr({inputs:{real:i,imag:a},backend:e});return a.dispose(),e.disposeIntermediateTensorInfo(i),l}if(r.dtype==="complex64"){const a=cl({inputs:{input:r},backend:e}),i=dm({inputs:{x:a},backend:e,attrs:{dtype:o}});return e.disposeIntermediateTensorInfo(a),i}if(!Fm(r.dtype,o)){const a=kn({inputs:{x:r},backend:e});return{dataId:a.dataId,shape:a.shape,dtype:o}}if(e.shouldExecuteOnCPU([r])){const a=e.texData.get(r.dataId).values,[i,l,c]=sW(a,r.shape,r.dtype,o);return e.makeTensorInfo(i,l,c)}if(o==="int32")return QU(r,e);if(o==="bool"){const a=e.makeTensorInfo([],"bool",qe("bool",1)),l=L1({inputs:{a:r,b:a},backend:e});return e.disposeIntermediateTensorInfo(a),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const t4={kernelName:Oo,backendName:"webgl",kernelFunc:dm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P1="return ceil(x);",e4=Ut({opSnippet:P1,packedOpSnippet:P1,cpuKernelImpl:rW}),n4={kernelName:Lo,backendName:"webgl",kernelFunc:e4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class s4{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r4{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o4(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{clipValueMin:o,clipValueMax:a}=s;let i;H().getBool("WEBGL_PACK_CLIP")?i=new r4(r.shape):i=new s4(r.shape);const l=[[o],[a]];return e.runWebGLProgram(i,[r],r.dtype,l)}const a4={kernelName:Tr,backendName:"webgl",kernelFunc:o4};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i4{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B1(n,t){return{dataId:t.dataId,dtype:t.dtype,shape:n.shape}}function u4(n){const{inputs:t,backend:e}=n,{x:s}=t,r=e.texData.get(s.dataId),o=new i4(s.shape),a=[B1(s,r.complexTensorInfos.real),B1(s,r.complexTensorInfos.imag)];return e.runWebGLProgram(o,a,a[0].dtype)}const l4={kernelName:Cl,backendName:"webgl",kernelFunc:u4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c4{constructor(t){this.outputShape=[],this.outputShape=Fn(t,1),this.variableNames=t.map((a,i)=>`T${i}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let a=1;a<e.length;a++)e[a]=e[a-1]+t[a][1];const s=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<e.length;a++){const i=e[a-1];s.push(`else if (yC < ${e[a]}) setOutput(getT${a}(yR, yC-${i}));`)}const r=e.length,o=e[e.length-1];s.push(`else setOutput(getT${r}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d4{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Fn(t,e);const s=this.outputShape,r=s.length,o=ne(r),a=on("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((m,g)=>`T${g}`);const l=new Array(t.length-1);l[0]=t[0][e];for(let m=1;m<l.length;m++)l[m]=l[m-1]+t[m][e];const c=i[e],u=i.slice(-2),d=i.join();let h=`if (${c} < ${l[0]}) {
        return getChannel(
            getT0(${d}), vec2(${u.join()}));
        }`;for(let m=1;m<l.length;m++){const g=l[m-1];h+=`
        if (${c} < ${l[m]}  && ${c} >= ${l[m-1]}) {
          return getChannel(
            getT${m}(${yd(i,c,g)}),
            vec2(${yd(u,c,g)}));
        }`}const p=l.length,f=l[l.length-1];h+=`
        return getChannel(
          getT${p}(${yd(i,c,f)}),
          vec2(${yd(u,c,f)}));`,this.userCode=`
      float getValue(${i.map(m=>"int "+m)}) {
        ${h}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[r-1]} = ${a[r-1]} + 1;
        if (${a[r-1]} < ${s[r-1]}) {
          result.g = getValue(${a});
        }

        ${a[r-2]} = ${a[r-2]} + 1;
        if (${a[r-2]} < ${s[r-2]}) {
          result.a = getValue(${a});
        }

        ${a[r-1]} = ${a[r-1]} - 1;
        if (${a[r-2]} < ${s[r-2]} &&
            ${a[r-1]} < ${s[r-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function yd(n,t,e){const s=n.indexOf(t);return n.map((o,a)=>a===s?`${o} - ${e}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wd(n){const{inputs:t,backend:e}=n,{input:s}=t,r=e.texData.get(s.dataId);return kn({inputs:{x:r.complexTensorInfos.imag},backend:e})}const h4={kernelName:ah,backendName:"webgl",kernelFunc:wd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dl(n,t,e){const s=n[0].dtype;if(s==="complex64"){const p=n.map(x=>cl({inputs:{input:x},backend:e})),f=n.map(x=>wd({inputs:{input:x},backend:e})),m=dl(p,t,e),g=dl(f,t,e),b=yr({inputs:{real:m,imag:g},backend:e});return p.forEach(x=>e.disposeIntermediateTensorInfo(x)),f.forEach(x=>e.disposeIntermediateTensorInfo(x)),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),b}let r=e.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const p=n.map(w=>{const C=[-1,L(w.shape.slice(t))];return at({inputs:{x:w},backend:e,attrs:{shape:C}})}),f=p.map(w=>({vals:e.readSync(w.dataId),shape:w.shape})),m=Fn(p.map(w=>w.shape),1),g=p[0].shape[0]===1,b=oW(f,m,s,g),x=Fn(n.map(w=>w.shape),t),y=e.makeTensorInfo(x,s,b);return p.forEach(w=>e.disposeIntermediateTensorInfo(w)),y}const o=n.filter(p=>L(p.shape)>0),a=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const p=a?new Es(n[0].shape,br):new xr(n[0].shape,br);return e.runWebGLProgram(p,n,s)}const i=H().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>i){const p=[];for(let m=0;m<o.length;m+=i){const g=o.slice(m,m+i);p.push(dl(g,t,e))}const f=dl(p,t,e);for(const m of p)e.disposeIntermediateTensorInfo(m);return f}if(a){const p=new d4(o.map(f=>f.shape),t);return e.runWebGLProgram(p,o,s)}const{tensors2D:l,outShape:c}=p4(o,t,e),u=new c4(l.map(p=>p.shape)),d=e.runWebGLProgram(u,l,s);l.forEach(p=>e.disposeIntermediateTensorInfo(p));const h=at({inputs:{x:d},attrs:{shape:c},backend:e});return e.disposeIntermediateTensorInfo(d),h}function p4(n,t,e){const s=Fn(n.map(o=>o.shape),t);return{tensors2D:n.map(o=>at({inputs:{x:o},attrs:{shape:[-1,L(o.shape.slice(t))]},backend:e})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z1(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s,o=Et(r,t[0].shape)[0],a=t.map(c=>c.shape);bc(a,o);const i=Fn(t.map(c=>c.shape),o);if(L(i)===0)return e.makeTensorInfo(i,t[0].dtype,[]);const l=t.filter(c=>L(c.shape)>0);return l.length===1?kn({inputs:{x:l[0]},backend:e}):dl(l,o,e)}const f4={kernelName:Li,backendName:"webgl",kernelFunc:z1};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W1{constructor(t,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const a=t.padInfo.top,i=t.padInfo.left,l=t.strideHeight,c=t.strideWidth,u=t.dilationHeight,d=t.dilationWidth,h=t.filterHeight,p=t.filterWidth,f=Math.floor(t.inChannels/4)*4,m=t.inChannels%4,g=t.dataFormat==="channelsLast",b=g?1:2,x=g?2:3,y=g?3:1;let w="",I="";s&&(r?w=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?w=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:w=`
          float activation(float x) {
            ${s}
          }
        `,I="result = activation(result);");const C=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${w}

      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${y}];

        ivec2 xRCCorner =
            ivec2(coords[${b}], coords[${x}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${C}
        ${I}
        setOutput(result);
      }
    `}}class m4{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,s=t.padInfo.top,r=t.padInfo.left,o=t.strideDepth,a=t.strideHeight,i=t.strideWidth,l=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,d=t.filterDepth,h=t.filterHeight,p=t.filterWidth,f=Math.floor(t.inChannels/4)*4,m=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${a}, ${i});
      const ivec3 pads = ivec3(${e}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class V1{constructor(t,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Qe(this.outputShape.length);const a=t.padInfo.left,i=t.strideWidth,l=t.dilationWidth,c=t.filterHeight,u=t.filterWidth,d=u;let h=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<u;g++)h+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;h+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let g=0;g<u;g++)h+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;h+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(d+1)/2;g++){const b=g*2;if(h+=`
           xC = xCCorner + ${b*l};
           `,i===1){if(b<u&&(a%2===1?(h+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }
               `,l===1&&b>0?h+=`
                 xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                 `:h+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                   } else {
                     xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                   }
                   `):h+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xC${b} = xTexelC${b};
                 `,b+1<u)){const x=a%2===0?Wd(l):l;l%2===0&&a%2===1||l%2!==0&&a%2!==1?(h+=`
                   xCOffset = xC + imod(pads[1], 2) + ${x};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                     xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${b+1}.zw = vec2(0.0);
                     }
                     xTexelC${b+1}Ready = 1;
                   }
                   `,l>1?h+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                     } else {
                      xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                     }
                     `:h+=`
                     xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                     `):x===1?h+=`
                     xC${b+1} = xTexelC${b};
                     `:h+=`
                     xCOffset = xC + ${x};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                       xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${b+1}.zw = vec2(0.0);
                       }
                       xTexelC${b+1}Ready = 1;
                     }

                     xC${b+1} = xTexelC${b+1};
                     `}}else b<u&&(a%2===1?(h+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.0);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
               `,b+1<u&&(h+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                 `)):(h+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(
                   xTexelC${b}.xy, xTexelC${b+1}.xy);
               `,b+1<u&&(h+=`
                   xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                 `)));b<u&&(h+=`
             wTexel = getW(r, ${b}, d1, d2);
             dotProd += xC${b}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${b}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,b+1<u&&(h+=`
               wTexel = getW(r, ${b+1}, d1, d2);
               dotProd += xC${b+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${b+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}h+=`
     }
   `,h+=`
     }
   `,h+=`
     }
   `;let p="",f="";s&&(r?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:o?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${h}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g4{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=Qe(this.outputShape.length);const{dataFormat:s}=e,r=rn(),o=s==="channelsLast",a=o?1:2,i=o?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let c="";for(let u=0;u<=1;u++)for(let d=0;d<=1;d++)c+=`
          blockIndex = rc.z + ${d};
          pos = rc.y + ${u};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+d}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+d}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${r.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Id(n,t){const e=n.length;return e>=3?t?[...n.slice(0,-3),n[e-3]*n[e-2],n[e-1]]:[...n.slice(0,-3),n[e-3],n[e-2]*n[e-1]]:!t&&e===1&&n[0]>1?[n[0],1]:null}function U1({x:n,filter:t,convInfo:e,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const l=n.shape,c=s.texData.get(n.dataId),u=e.inChannels,d=l[0]*l[1]*l[2],h=e.outChannels,p=e.dataFormat==="channelsLast",f=!1,m=!1;let g;const b=[];if(o!=null){const w=Id(o.shape,p);w!=null&&(o=at({inputs:{x:o},backend:s,attrs:{shape:w}}),b.push(o))}if(r!=null){const w=Id(r.shape,p);w!=null&&(r=at({inputs:{x:r},backend:s,attrs:{shape:w}}),b.push(r))}if(!((d===1||h===1)&&u>R1)&&c.isPacked&&p&&c.texture!=null&&l[2]%2!==0&&Kt(c.shape.slice(-3),l.slice(-3))){const w=l[0]*l[1]*(l[2]+1),I={dataId:n.dataId,shape:[1,w,e.inChannels],dtype:n.dtype},C=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,N(dd(c.shape,I.shape),()=>`packed reshape ${c.shape} to ${I.shape} isn't free`);const S=at({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}});b.push(S);const T=bd({a:I,b:S,backend:s,transposeA:f,transposeB:m,bias:r,activation:i,preluActivationWeights:o,leakyreluAlpha:a}),v=s.texData.get(T.dataId);N(v.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=C,v.shape=e.outShape,g=kn({inputs:{x:T},backend:s}),g.shape=e.outShape,b.push(T)}else{const w=e.outHeight*e.outWidth,I=at({inputs:{x:n},backend:s,attrs:{shape:p?[e.batchSize,w,e.inChannels]:[e.batchSize,e.inChannels,w]}}),C=at({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}}),S=bd({a:p?I:C,b:p?C:I,transposeA:!p,transposeB:m,backend:s,bias:r,activation:i,preluActivationWeights:o,leakyreluAlpha:a});g=at({inputs:{x:S},backend:s,attrs:{shape:e.outShape}}),b.push(I),b.push(C),b.push(S)}for(const w of b)s.disposeIntermediateTensorInfo(w);return g}function G1({x:n,filter:t,convInfo:e,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const{filterWidth:l,filterHeight:c,inChannels:u,outWidth:d,outHeight:h,dataFormat:p}=e,f=p==="channelsLast",m=l*c*u,g=h*d,b=[e.batchSize,m,g],x=!0,y=!1,w=[];if(o!=null){const V=Id(o.shape,f);V!=null&&(o=at({inputs:{x:o},backend:s,attrs:{shape:V}}),w.push(o))}if(r!=null){const V=Id(r.shape,f);V!=null&&(r=at({inputs:{x:r},backend:s,attrs:{shape:V}}),w.push(r))}const I=at({inputs:{x:t},backend:s,attrs:{shape:[1,m,L(t.shape)/m]}});w.push(I);const C=new g4(b,e),S=[n.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],T=s.runWebGLProgram(C,[n],"float32",S),v=at({inputs:{x:T},backend:s,attrs:{shape:b}});w.push(T),w.push(v);const $=r!=null,k=o!=null,R=i==="leakyrelu",F=i?ul(i,!0):null,B=new S1(f?v.shape:I.shape,f?I.shape:v.shape,f?[e.batchSize,g,e.outChannels]:[e.batchSize,e.outChannels,g],x,y,$,F,k,R),M=f?[v,I]:[I,v];if(r&&M.push(r),k&&M.push(o),R){const V=s.makeTensorInfo([],"float32",Js(a,"float32"));M.push(V),w.push(V)}const z=s.runWebGLProgram(B,M,"float32"),j=at({inputs:{x:z},backend:s,attrs:{shape:e.outShape}});w.push(z);for(const V of w)s.disposeIntermediateTensorInfo(V);return j}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b4(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dataFormat:l,dilations:c,dimRoundingMode:u}=s,d=ss(l),h=we(r.shape,o.shape,a,c,i,u,!1,d);let p;if(h.filterHeight===1&&h.filterWidth===1&&h.dilationHeight===1&&h.dilationWidth===1&&h.strideHeight===1&&h.strideWidth===1&&(h.padInfo.type==="SAME"||h.padInfo.type==="VALID"))p=U1({x:r,filter:o,convInfo:h,backend:e});else if(h.strideWidth<=2&&d==="channelsLast"&&H().getBool("WEBGL_EXP_CONV")){const m=new V1(h),g=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];p=e.runWebGLProgram(m,[r,o],"float32",g)}else if(H().getBool("WEBGL_CONV_IM2COL"))p=G1({x:r,filter:o,convInfo:h,backend:e});else{const m=new W1(h);p=e.runWebGLProgram(m,[r,o],"float32")}const f=at({inputs:{x:p},backend:e,attrs:{shape:h.outShape}});return e.disposeIntermediateTensorInfo(p),f}const x4={kernelName:Po,backendName:"webgl",kernelFunc:b4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y4{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,r=t.padInfo.top,o=t.padInfo.left,a=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${r};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              ${a?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class w4{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,r=t.strideHeight,o=t.strideWidth,a=t.dataFormat==="channelsLast",i=e-1-t.padInfo.top,l=s-1-t.padInfo.left,c=a?1:2,u=a?2:3,d=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class I4{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,s=t.strideHeight,r=t.strideWidth,o=t.padInfo.front,a=t.padInfo.top,i=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${o};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${a};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${i};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class k4{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,r=t.filterWidth,o=t.strideDepth,a=t.strideHeight,i=t.strideWidth,l=e-1-t.padInfo.front,c=s-1-t.padInfo.top,u=r-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${c}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C4(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,pad:i,dataFormat:l,dimRoundingMode:c,filterShape:u}=s,d=ss(l),h=we(r.shape,u,a,1,i,c,!1,d),p=new y4(h);return e.runWebGLProgram(p,[r,o],"float32")}const $4={kernelName:Qd,backendName:"webgl",kernelFunc:C4};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class v4{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=Qe(this.outputShape.length);const e=t.filterHeight,s=t.filterWidth,r=e-1-t.padInfo.top,o=s-1-t.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${t.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${t.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S4(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{inputShape:a,strides:i,pad:l,dataFormat:c,dimRoundingMode:u}=s,d=ss(c),h=we(a,o.shape,i,1,l,u,!1,d);if(H().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&d==="channelsLast"){const p=[[h.strideHeight,h.strideWidth]],f=new v4(h);return e.runWebGLProgram(f,[r,o],"float32",p)}else{const p=new w4(h);return e.runWebGLProgram(p,[r,o],"float32")}}const N4={kernelName:Bo,backendName:"webgl",kernelFunc:S4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T4(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:l}=s,c=ns(r.shape,o.shape,a,l,i),u=new m4(c);return e.runWebGLProgram(u,[r,o],"float32")}const _4={kernelName:zo,backendName:"webgl",kernelFunc:T4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E4(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,pad:i,filterShape:l}=s,c=ns(r.shape,l,a,1,i),u=new I4(c);return e.runWebGLProgram(u,[r,o],"float32")}const R4={kernelName:Pi,backendName:"webgl",kernelFunc:E4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A4(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{pad:a,strides:i,inputShape:l}=s,c=ns(l,o.shape,i,1,a),u=new k4(c);return e.runWebGLProgram(u,[r,o],"float32")}const D4={kernelName:Bi,backendName:"webgl",kernelFunc:A4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F4=Ii+`
  return cos(x);
`,M4=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${fo}
  return result;
`,O4=Ut({opSnippet:F4,packedOpSnippet:M4}),L4={kernelName:Wo,backendName:"webgl",kernelFunc:O4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P4=Ut({opSnippet:`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`}),B4={kernelName:Vo,backendName:"webgl",kernelFunc:P4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z4{constructor(t,e,s,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,l,c]=t,[u]=e,[d,h]=s;this.outputShape=[u,d,h,c];const p=r==="bilinear"?1:0,[f,m]=[`${i-1}.0`,`${l-1}.0`],[g,b,x]=d>1?[`${(i-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[y,w,I]=h>1?[`${(l-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${y});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${b};
        float width_scale = ${w};

        float in_y = ${x};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${I};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W4={kernelName:Wi,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{image:r,boxes:o,boxInd:a}=t,{cropSize:i,method:l,extrapolationValue:c}=s,u=new z4(r.shape,o.shape,i,l,c);return e.runWebGLProgram(u,[r,o,a],"float32")}};var hl;(function(n){n.Prod="*",n.Sum="+"})(hl||(hl={}));class H1{constructor(t,e,s,r){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,a=this.op===hl.Prod?"1.0":"0.0",i=s?a:`getX(${j1(o,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let c="",u="";s?(c=r?`end != ${l-1}`:"end != 0",u=r?"end + 1":"end - 1"):(c=r?`end + pow2 < ${l}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${ne(o)} coords = getOutputCoords();
        int end = ${q1(o,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${u};
          ${q1(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${j1(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function j1(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.x, ${t}.y`;if(n===3)return`${t}.x, ${t}.y, ${t}.z`;if(n===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function q1(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.y`;if(n===3)return`${t}.z`;if(n===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K1(n,t,e,s,r,o){const a=t.shape.length,i=ue([s],a);let l=t;i!=null&&(l=an({inputs:{x:t},backend:e,attrs:{perm:i}}));const c=se(1,a)[0];if(c!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const u=l.shape[c];let d=kn({inputs:{x:l},backend:e});for(let h=0;h<=Math.ceil(Math.log2(u))-1;h++){const p=new H1(n,l.shape,!1,o),f=[[h]],m=d;d=e.runWebGLProgram(p,[d],d.dtype,f),e.disposeIntermediateTensorInfo(m)}if(r){const h=new H1(n,l.shape,r,o),p=d;d=e.runWebGLProgram(h,[d],d.dtype),e.disposeIntermediateTensorInfo(p)}if(i!=null){const h=xs(i),p=an({inputs:{x:d},backend:e,attrs:{perm:h}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(l),p}return d}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V4(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:a,reverse:i}=s;return K1(hl.Prod,r,e,o,a,i)}const U4={kernelName:zi,backendName:"webgl",kernelFunc:V4};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G4(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:a,reverse:i}=s;return K1(hl.Sum,r,e,o,a,i)}const H4={kernelName:Uo,backendName:"webgl",kernelFunc:G4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j4(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,weights:o}=t,{size:a,binaryOutput:i}=s;if(r.shape.length===1){const l=e.readSync(r.dataId),c=e.readSync(o.dataId),u=p1(l,c,o.dtype,o.shape,a);return e.makeTensorInfo([a],o.dtype,u)}else if(r.shape.length===2){const l=e.bufferSync(r),c=e.bufferSync(o),u=eW(l,c,a,i);return e.makeTensorInfo(u.shape,o.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const q4={kernelName:$l,backendName:"webgl",kernelFunc:j4};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class K4{constructor(t,e,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X4(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockSize:o,dataFormat:a}=s,i=r.shape[0],l=a==="NHWC"?r.shape[1]:r.shape[2],c=a==="NHWC"?r.shape[2]:r.shape[3],u=a==="NHWC"?r.shape[3]:r.shape[1],d=l*o,h=c*o,p=u/(o*o),f=a==="NHWC"?[i,d,h,p]:[i,p,d,h],m=new K4(f,o,a);return e.runWebGLProgram(m,[r],r.dtype)}const Y4={kernelName:Vi,backendName:"webgl",kernelFunc:X4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X1{constructor(t,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Qe(this.outputShape.length);const a=t.filterHeight,i=t.filterWidth,l=t.outChannels/t.inChannels;let c="",u="";s&&(r?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:c=`
          float activation(float x) {
            ${s}
          }
        `,u="result = activation(result);");const d=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Y1{constructor(t,e=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Qe(this.outputShape.length);const a=t.outChannels/t.inChannels,i=t.padInfo.left,l=t.strideWidth,c=t.dilationWidth,u=t.filterHeight,d=t.filterWidth,h=d;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let b=0;b<d;b++)p+=`
          vec4 xTexelC${b*2};
          int xTexelC${b*2}Ready;
          vec4 xTexelC${b*2+1};
          int xTexelC${b*2+1}Ready;
          vec4 xC${b};`;p+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let b=0;b<d;b++)p+=`
          xTexelC${b*2} = vec4(0.0);
          xTexelC${b*2}Ready = 0;
          xTexelC${b*2+1} = vec4(0.0);
          xTexelC${b*2+1}Ready = 0;
          xC${b} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let b=0;b<(h+1)/2;b++){const x=b*2;if(p+=`
          xC = xCCorner + ${x*c};
          `,l===1){if(x<d&&(i%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }
              `,c===1&&x>0?p+=`
                xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                  } else {
                    xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xC${x} = xTexelC${x};
                `,x+1<d)){const y=i%2===0?Wd(c):c;c%2===0&&i%2===1||c%2!==0&&i%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${y};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                    xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${x+1}.zw = vec2(0.0);
                    }
                    xTexelC${x+1}Ready = 1;
                  }
                  `,c>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                    } else {
                     xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                    }
                    `:p+=`
                    xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                    `):y===1?p+=`
                    xC${x+1} = xTexelC${x};
                    `:p+=`
                    xCOffset = xC + ${y};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                      xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${x+1}.zw = vec2(0.0);
                      }
                      xTexelC${x+1}Ready = 1;
                    }

                    xC${x+1} = xTexelC${x+1};
                    `}}else x<d&&(i%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.0);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
              `,x+1<d&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(
                  xTexelC${x}.xy, xTexelC${x+1}.xy);
              `,x+1<d&&(p+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                `)));x<d&&(p+=`
            wTexel = getW(r, ${x}, d1, q);
            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);
          `,x+1<d&&(p+=`
              wTexel = getW(r, ${x+1}, d1, q);
              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",m="";s&&(r?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z4(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:l,dimRoundingMode:c}=s;let u=l;u==null&&(u=[1,1]),N(We(a,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const d=we(r.shape,o.shape,a,u,i,c,!0);let h;H().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?h=new Y1(d):h=new X1(d);const p=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return e.runWebGLProgram(h,[r,o],"float32",p)}const J4={kernelName:Go,backendName:"webgl",kernelFunc:Z4};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q4{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,r=t.padInfo.top,o=t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${r};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class tG{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,r=t.strideHeight,o=t.strideWidth,a=e-1-t.padInfo.top,i=s-1-t.padInfo.left,l=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eG(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,dilations:i,pad:l,dimRoundingMode:c,filterShape:u}=s,d=we(r.shape,u,a,i,l,c,!0),h=new Q4(d);return e.runWebGLProgram(h,[r,o],"float32")}const nG={kernelName:th,backendName:"webgl",kernelFunc:eG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sG(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{strides:a,dilations:i,pad:l,dimRoundingMode:c,inputShape:u}=s,d=we(u,o.shape,a,i,l,c,!0),h=new tG(d);return e.runWebGLProgram(h,[r,o],"float32")}const rG={kernelName:eh,backendName:"webgl",kernelFunc:sG};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oG{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aG(n){const{inputs:t,backend:e}=n,{x:s}=t,r=[...s.shape,...s.shape],o=L(s.shape),a=at({inputs:{x:s},backend:e,attrs:{shape:[o]}}),i=new oG(o),l=e.runWebGLProgram(i,[a],a.dtype),c=at({inputs:{x:l},backend:e,attrs:{shape:r}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),c}const iG={kernelName:nh,backendName:"webgl",kernelFunc:aG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uG{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:s,padInfo:r,strideHeight:o,strideWidth:a,filterHeight:i,filterWidth:l,dilationHeight:c,dilationWidth:u}=t,{top:d,left:h}=r;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${a});
      const ivec2 pads = ivec2(${d}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lG(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:l}=s,c=sr(r.shape,o.shape,a,i,"NHWC",l);let u;const d=new uG(c);u=e.runWebGLProgram(d,[r,o],"float32");const h=at({inputs:{x:u},backend:e,attrs:{shape:c.outShape}});return e.disposeIntermediateTensorInfo(u),h}const cG={kernelName:Ho,backendName:"webgl",kernelFunc:lG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dG(n){const{inputs:t,backend:e,attrs:s}=n,{equation:r}=s,o=t,{allDims:a,summedDims:i,idDims:l}=Rp(r,o.length);Dp(a.length,l,o);const{path:c,steps:u}=Fp(i,l),d=u.length;let h=null,p=a.length;const f=[];for(let m=0;m<d;++m){for(const g of u[m]){const{permutationIndices:b,expandDims:x}=Ap(p,l[g]);let y;Mp(b)?y=o[g]:(y=an({inputs:{x:o[g]},backend:e,attrs:{perm:b}}),f.push(y));const w=y.shape.slice();for(let I=0;I<x.length;++I)w.splice(x[I],0,1);Kt(y.shape,w)||(y=at({inputs:{x:y},backend:e,attrs:{shape:w}}),f.push(y)),h===null?h=y:(h=um({inputs:{a:y,b:h},backend:e}),f.push(h))}m<d-1&&(c[m]>=0&&(h=gd({inputs:{x:h},backend:e,attrs:{axis:c[m]-(a.length-p),keepDims:!1}}),f.push(h)),p--)}for(const m of f)m!==h&&e.disposeIntermediateTensorInfo(m);return h}const hG={kernelName:sh,backendName:"webgl",kernelFunc:dG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pG=Ut({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`}),fG={kernelName:qo,backendName:"webgl",kernelFunc:pG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mG="return (b >= 0.0) ? a : a * (b + 1.0);",gG=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,bG={kernelName:Hi,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e}=n,{dy:s,y:r}=t,o=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new wi(gG,s.shape,r.shape):new po(mG,s.shape,r.shape);return e.runWebGLProgram(o,[s,r],s.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xG=Ue({opSnippet:"return float(a == b);",packedOpSnippet:`
  return vec4(equal(a, b));
`,dtype:"bool",cpuKernelImpl:aW}),yG={kernelName:ji,backendName:"webgl",kernelFunc:xG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wG=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Cp};
  float a1 = ${$p};
  float a2 = ${vp};
  float a3 = ${Sp};
  float a4 = ${Np};
  float a5 = ${Tp};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,IG=Ut({opSnippet:wG}),kG={kernelName:Ko,backendName:"webgl",kernelFunc:IG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CG=Ii+`
  return exp(x);
`,Z1=Ut({opSnippet:CG,packedOpSnippet:`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:iW,dtype:"float32"}),$G={kernelName:Xo,backendName:"webgl",kernelFunc:Z1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hm(n){const{inputs:t,attrs:e,backend:s}=n,{dim:r}=e,{input:o}=t,a=o.shape.length,i=o.shape.slice();let l=r;return r<0&&(N(-(a+1)<=r,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+r+1),i.splice(l,0,1),at({inputs:{x:o},backend:s,attrs:{shape:i}})}const vG={kernelName:qi,backendName:"webgl",kernelFunc:hm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J1="return exp(x) - 1.0;",SG=Ut({opSnippet:J1,packedOpSnippet:J1,cpuKernelImpl:uW}),NG={kernelName:Yo,backendName:"webgl",kernelFunc:SG};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q1{constructor(t,e,s){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const o=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=s?`${r}.0`:"1.0";let i;if(t==="real")i="return real * expR - imag * expI;";else if(t==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tI(n,t,e){const s=e.texData.get(n.dataId),r=L(n.shape),o=n.shape[n.shape.length-1],a=r/o,i=at({inputs:{x:n},backend:e,attrs:{shape:[a,o]}}),l=i.shape,c=new Q1("real",l,t),u=new Q1("imag",l,t),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],h=e.runWebGLProgram(c,d,"float32"),p=e.runWebGLProgram(u,d,"float32"),f=yr({inputs:{real:h,imag:p},backend:e});e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p);const m=at({inputs:{x:f},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TG(n){const{inputs:t,backend:e}=n,{input:s}=t;return tI(s,!1,e)}const _G={kernelName:rh,backendName:"webgl",kernelFunc:TG};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EG{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pl(n){const{backend:t,attrs:e}=n,{shape:s,value:r}=e;let{dtype:o}=e;if(o=o||Sr(r),o==="string"){const a=Ie(o,L(s));return a.fill(r),t.makeTensorInfo(s,o,a)}else{const a=new EG(s,r),i=[[r]];return t.runWebGLProgram(a,[],o,i)}}const RG={kernelName:vl,backendName:"webgl",kernelFunc:pl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AG{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DG={kernelName:Ki,backendName:"webgl",kernelFunc:({inputs:n,backend:t})=>{const{image:e}=n,s=t,r=new AG(e.shape);return s.runWebGLProgram(r,[e],e.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eI="return floor(x);",FG=Ut({opSnippet:eI,packedOpSnippet:eI,cpuKernelImpl:lW}),MG={kernelName:Zo,backendName:"webgl",kernelFunc:FG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OG=Ue({opSnippet:`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,packedOpSnippet:`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,dtype:"int32"}),LG={kernelName:Jo,backendName:"webgl",kernelFunc:OG};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PG{constructor(t){this.variableNames=["A"];const e=rn(),[s,r]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BG{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=rn(),[s,r]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zG={kernelName:AC,backendName:"webgl",kernelFunc:WG};let Ci,pm=H().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function WG(n){const{inputs:t,backend:e,attrs:s}=n;let{pixels:r}=t;const{numChannels:o}=s,a=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[l,c]=a?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[c,l],d=[c,l,o];if(i||a){const m=H().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Ci==null||m!==pm)&&(pm=m,Ci=document.createElement("canvas").getContext("2d",{willReadFrequently:pm})),Ci.canvas.width=l,Ci.canvas.height=c,Ci.drawImage(r,0,0,l,c),r=Ci.canvas}const h=e.makeTensorInfo(u,"int32");e.texData.get(h.dataId).usage=On.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(h.dataId),r);const p=H().getBool("WEBGL_PACK")?new BG(d):new PG(d),f=e.runWebGLProgram(p,[h],"int32");return e.disposeData(h.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VG(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=t,{strides:l,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s,m=ss(u),g=we(r.shape,o.shape,l,d,c,h,!1,m);let b;const x=[],y=a!=null,w=i!=null,I=p==="leakyrelu",C=()=>{const T=[r,o],v=($,k)=>{if(k==="NCHW"&&$.shape.length===1&&$.shape[0]!==1){const R=at({inputs:{x:$},backend:e,attrs:{shape:[$.shape[0],1,1]}});return x.push(R),R}return $};if(y&&T.push(v(a,u)),w&&T.push(v(i,u)),I){const $=e.makeTensorInfo([],"float32",Js(f,"float32"));T.push($),x.push($)}return T};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))b=U1({x:r,filter:o,convInfo:g,backend:e,bias:a,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&H().getBool("WEBGL_EXP_CONV")){const T=p?ul(p,!0):null,v=new V1(g,y,T,w,I),$=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],k=C();b=e.runWebGLProgram(v,k,"float32",$)}else if(H().getBool("WEBGL_CONV_IM2COL"))b=G1({x:r,filter:o,convInfo:g,backend:e,bias:a,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const T=p?ul(p,!1):null,v=new W1(g,y,T,w,I),$=C();b=e.runWebGLProgram(v,$,"float32")}const S=at({inputs:{x:b},backend:e,attrs:{shape:g.outShape}});return x.push(b),x.forEach(T=>e.disposeIntermediateTensorInfo(T)),S}const UG={kernelName:Ha,backendName:"webgl",kernelFunc:VG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GG(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=s,f=[];let m=u;m==null&&(m=[1,1]),N(We(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);const g=we(r.shape,o.shape,l,m,c,d,!0),b=H().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,x=h?ul(h,b):null,y=[r,o],w=a!=null,I=i!=null,C=h==="leakyrelu";if(w&&y.push(a),I&&y.push(i),C){const $=e.makeTensorInfo([],"float32",Js(p,"float32"));y.push($),f.push($)}let S;b?S=new Y1(g,w,x,I,C):S=new X1(g,w,x,I,C);const T=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],v=e.runWebGLProgram(S,y,"float32",T);return f.forEach($=>e.disposeIntermediateTensorInfo($)),v}const HG={kernelName:Bl,backendName:"webgl",kernelFunc:GG};class jG{constructor(t,e,s,r){this.sliceDim=t,this.strides=e,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const o=ne(s.length);let a=`
    int index;`;for(let i=0;i<this.sliceDim;i++)a+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qG(n){const{inputs:t,backend:e}=n,{params:s,indices:r}=t,o=r.shape,a=o[o.length-1],i=L(s.shape),[l,c,u,d]=hc(s,r),h=at({inputs:{x:r},backend:e,attrs:{shape:[c,a]}}),p=at({inputs:{x:s},backend:e,attrs:{shape:[L(s.shape)/u,u]}});if(e.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const b=e.readSync(r.dataId),x=e.bufferSync(s),y=cW(b,x,s.dtype,c,a,u,d,s.shape,i);return e.makeTensorInfo(l,s.dtype,y.values)}const f=new jG(a,d,[c,u],s.shape),m=e.runWebGLProgram(f,[p,h],p.dtype),g=at({inputs:{x:m},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),g}const KG={kernelName:Sl,backendName:"webgl",kernelFunc:qG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XG{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const s=ne(this.rank),r=YG(t);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}}function YG(n,t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)r===2?s.push("index"):s.push(`${e[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nI(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,indices:o}=t,{axis:a,batchDims:i}=s,l=Et(a,r.shape)[0];if(H().get("DEBUG")){const x=e.readSync(o.dataId),y=r.shape[l];for(let w=0;w<x.length;++w){const I=x[w];N(I<=y-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${y-1}]`)}}const c=vc(r,o,l,i),u=L(o.shape),d=[],h=at({inputs:{x:r},backend:e,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=at({inputs:{x:o},backend:e,attrs:{shape:[c.batchSize,u/c.batchSize]}});d.push(h),d.push(p);const f=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(e.shouldExecuteOnCPU([r,o])||r.dtype==="string"){const x=e.bufferSync(p),y=e.bufferSync(h),w=dW(y,x,f);return d.forEach(I=>e.disposeIntermediateTensorInfo(I)),e.makeTensorInfo(c.outputShape,w.dtype,w.values)}const m=new XG(h.shape,f),g=e.runWebGLProgram(m,[h,p],h.dtype);d.push(g);const b=at({inputs:{x:g},backend:e,attrs:{shape:c.outputShape}});return d.forEach(x=>e.disposeIntermediateTensorInfo(x)),b}const ZG={kernelName:Xi,backendName:"webgl",kernelFunc:nI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JG=Ue({opSnippet:"return float(a > b);",packedOpSnippet:`
  return vec4(greaterThan(a, b));
`,cpuKernelImpl:hW,dtype:"bool"}),QG={kernelName:Yi,backendName:"webgl",kernelFunc:JG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tH=Ue({opSnippet:"return float(a >= b);",packedOpSnippet:`
  return vec4(greaterThanEqual(a, b));
`,dtype:"bool",cpuKernelImpl:pW}),eH={kernelName:ta,backendName:"webgl",kernelFunc:tH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nH(n){const{inputs:t,backend:e}=n,{input:s}=t;return tI(s,!0,e)}const sH={kernelName:oh,backendName:"webgl",kernelFunc:nH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rH=Ut({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),oH={kernelName:na,backendName:"webgl",kernelFunc:rH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aH=Ut({opSnippet:"return float(isinf(x));",dtype:"bool"}),iH={kernelName:sa,backendName:"webgl",kernelFunc:aH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uH=Ut({opSnippet:"return float(isnan(x));",dtype:"bool"}),lH={kernelName:ra,backendName:"webgl",kernelFunc:uH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cH=Ue({opSnippet:"return float(a < b);",packedOpSnippet:`
  return vec4(lessThan(a, b));
`,cpuKernelImpl:fW,dtype:"bool"}),dH={kernelName:Zi,backendName:"webgl",kernelFunc:cH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hH=Ue({opSnippet:"return float(a <= b);",packedOpSnippet:`
  return vec4(lessThanEqual(a, b));
`,cpuKernelImpl:mW,dtype:"bool"}),pH={kernelName:Ji,backendName:"webgl",kernelFunc:hH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fH(n){const{backend:t,attrs:e}=n,{start:s,stop:r,num:o}=e,a=gW(s,r,o);return t.makeTensorInfo([a.length],"float32",a)}const mH={kernelName:Qi,backendName:"webgl",kernelFunc:fH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gH=Ii+`
  return x < 0.0 ? 0./0. : log(x);
`,bH=Ut({opSnippet:gH,packedOpSnippet:`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,cpuKernelImpl:bW}),xH={kernelName:aa,backendName:"webgl",kernelFunc:bH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yH=Ii+`
  return log(1.0 + x);
`,wH=Ut({opSnippet:yH}),IH={kernelName:ia,backendName:"webgl",kernelFunc:wH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kH=Ue({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,dtype:"bool"}),CH={kernelName:tu,backendName:"webgl",kernelFunc:kH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $H=Ut({opSnippet:"return float(!(x >= 1.0));"}),vH={kernelName:eu,backendName:"webgl",kernelFunc:$H};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SH=Ue({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,dtype:"bool"}),NH={kernelName:nu,backendName:"webgl",kernelFunc:SH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TH{constructor(t,e,s,r,o){this.variableNames=["x"],this.outputShape=[];const a=e,i=t[3]-1;this.outputShape=t;let l;const c=`float(${s}) + float(${r}) * sum`;o===.5?l=`inversesqrt(${c})`:o===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _H{constructor(t,e,s,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=e,i=t[3]-1;this.outputShape=t;let l;const c=`float(${s}) + float(${r}) * sum`;o===.5?l=`inversesqrt(${c})`:o===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EH={kernelName:ua,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{depthRadius:o,bias:a,alpha:i,beta:l}=s,c=H().getBool("WEBGL_PACK_NORMALIZATION")?new _H(r.shape,o,a,i,l):new TH(r.shape,o,a,i,l);return e.runWebGLProgram(c,[r],r.dtype)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RH{constructor(t,e,s,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=s,this.alpha=r,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AH={kernelName:su,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r,y:o,dy:a}=t,{depthRadius:i,bias:l,alpha:c,beta:u}=s,d=new RH(r.shape,i,l,c,u);return e.runWebGLProgram(d,[r,o,a],r.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DH(n,t,e,s){const r=L(t),a=L(n.shape)/r,i=at({inputs:{x:n},attrs:{shape:[a,r]},backend:s}),l=mo(i,n.dtype,"max",s),c=at({inputs:{x:l},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sI(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reductionIndices:o,keepDims:a}=s,i=r.shape.length,l=Et(o,r.shape);let c=l;const u=ue(c,i),d=u!=null,h=e.shouldExecuteOnCPU([r]);let p=r;if(d){if(h){const y=e.texData.get(p.dataId).values,w=new Array(i);for(let S=0;S<w.length;S++)w[S]=r.shape[u[S]];const I=am(y,r.shape,r.dtype,u,w);p=e.makeTensorInfo(w,r.dtype);const C=e.texData.get(p.dataId);C.values=I}else p=md(r,u,e);c=se(c.length,i)}ie("max",c,i);const[f,m]=he(p.shape,c);let g=f;a&&(g=ee(f,l));let b;if(h){const y=e.texData.get(p.dataId).values,w=xW(y,L(m),g,r.dtype);b=e.makeTensorInfo(g,r.dtype);const I=e.texData.get(b.dataId);I.values=w}else b=DH(p,m,g,e);return d&&e.disposeIntermediateTensorInfo(p),b}const FH={kernelName:la,backendName:"webgl",kernelFunc:sI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MH=im+`
  return max(a, b);
`,OH=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+fo+`
  return result;
`,LH=Ue({opSnippet:MH,packedOpSnippet:OH,cpuKernelImpl:yW}),PH={kernelName:ca,backendName:"webgl",kernelFunc:LH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;al(r,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:l}=s,c=1;N(We(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const u=Ye(r.shape,o,a,c,i,l);if(u.filterWidth===1&&u.filterHeight===1&&Kt(u.inShape,u.outShape))return kn({inputs:{x:r},backend:e});const d=new ll(u,"max",!1);return e.runWebGLProgram(d,[r],r.dtype)}const zH={kernelName:da,backendName:"webgl",kernelFunc:BH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:a,pad:i,dataFormat:l,dimRoundingMode:c}=s,u=[1,1,1],d=Tn(r.shape,o,a,u,i,c,l),h=new lm(d,"max",!1);return e.runWebGLProgram(h,[r],r.dtype)}const VH={kernelName:ru,backendName:"webgl",kernelFunc:WH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UH{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,s=t.strideWidth,r=t.dilationHeight,o=t.effectiveFilterHeight,a=t.effectiveFilterWidth,i=o-1-t.padInfo.top,l=a-1-t.padInfo.left,c=o*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class GH{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,s=t.strideHeight,r=t.strideWidth,o=t.dilationDepth,a=t.dilationHeight,i=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,u=t.effectiveFilterWidth,d=l-1-t.padInfo.front,h=c-1-t.padInfo.top,p=u-1-t.padInfo.left,f=l*c*u-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HH(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,a=o,{filterSize:i,strides:l,pad:c,dimRoundingMode:u}=s,d=[1,1,1],h=Tn(a.shape,i,l,d,c,u),p=new lm(h,"max",!0),f=e.runWebGLProgram(p,[a],a.dtype),m=new GH(h),g=e.runWebGLProgram(m,[r,f],a.dtype);return e.disposeIntermediateTensorInfo(f),g}const jH={kernelName:Tl,backendName:"webgl",kernelFunc:HH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qH(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o,output:a}=t,i=o;al([o,a],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:d}=s,h=Ye(i.shape,l,c,1,u,d),p=!0,f=new ll(h,"max",p),m=e.runWebGLProgram(f,[i],i.dtype),g=new UH(h),b=e.runWebGLProgram(g,[r,m],i.dtype);return e.disposeIntermediateTensorInfo(m),b}const KH={kernelName:Nl,backendName:"webgl",kernelFunc:qH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XH(n,t,e,s){let r=new ll(e,"max",!1);const o=s.runWebGLProgram(r,[n],"float32");r=new ll(e,"max",!0,!0,t);const a=s.runWebGLProgram(r,[n],"float32");return[o,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YH={kernelName:ih,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:r,strides:o,pad:a,includeBatchInIndex:i}=t,l=e;N(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const c=[1,1];N(We(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=Ye(s.shape,r,o,c,a),[d,h]=XH(s,i,u,l);return[d,h]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZH(n,t,e,s){const r=L(t),a=L(n.shape)/r,i=at({inputs:{x:n},attrs:{shape:[a,r]},backend:s}),l=mo(i,"float32","mean",s),c=at({inputs:{x:l},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JH={kernelName:ha,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{keepDims:r,axis:o}=t,a=e,i=s.shape.length,l=Et(o,s.shape);let c=l;const u=ue(c,i),d=u!=null,h=a.shouldExecuteOnCPU([s]),p=[];let f=s;if(d){if(h){const w=a.texData.get(f.dataId).values,I=new Array(i);for(let T=0;T<I.length;T++)I[T]=s.shape[u[T]];const C=am(w,s.shape,s.dtype,u,I);f=a.makeTensorInfo(I,s.dtype);const S=a.texData.get(f.dataId);S.values=C}else f=md(s,u,a);p.push(f),c=se(c.length,i)}ie("sum",c,i);const[m,g]=he(f.shape,c);let b=m;r&&(b=ee(m,l));const x=ZH(f,g,b,a);for(const y of p)a.disposeIntermediateTensorInfo(y);return x}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QH(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s,i=r.shape.length,l=Et(o,r.shape);let c=l;const u=ue(c,i);let d=r;u!=null&&(d=an({inputs:{x:r},backend:e,attrs:{perm:u}}),c=se(c.length,r.shape.length)),ie("min",c,i);const[h,p]=he(d.shape,c),f=L(p),m=at({inputs:{x:d},backend:e,attrs:{shape:[-1,f]}}),g=mo(m,m.dtype,"min",e);let b;if(a){const x=ee(h,l);b=at({inputs:{x:g},backend:e,attrs:{shape:x}})}else b=at({inputs:{x:g},backend:e,attrs:{shape:h}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(g),u!=null&&e.disposeIntermediateTensorInfo(d),b}const tj={kernelName:pa,backendName:"webgl",kernelFunc:QH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ej=im+`
  return min(a, b);
`,nj=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+fo+`
  return result;
`,sj=Ue({opSnippet:ej,packedOpSnippet:nj,cpuKernelImpl:wW}),rj={kernelName:fa,backendName:"webgl",kernelFunc:sj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oj{constructor(t,e,s){this.variableNames=["x"],this.outputShape=e.map((u,d)=>u[0]+t[d]+u[1]);const r=t.length,o=ne(r),a=e.map(u=>u[0]).join(","),i=e.map((u,d)=>u[0]+t[d]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),c=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aj{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((f,m)=>f[0]+t[m]+f[1]);const r=t.length,o=ne(r),a=e.map(f=>f[0]).join(","),i=e.map((f,m)=>f[0]+t[m]).join(","),l=on("rc",r),c=on("source",r),u=`${l[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${c.slice(-2).join()})`,h=s==="reflect"?0:1;let p="";if(r===1){const f=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${d});
        ${l[r-1]} += 1;
        if(${u}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${d});
        }
      `}else{const f=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${d});
        ${l[r-1]} += 1;
        if(${u}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${d});
        }
        rc = outputLoc;
        ${l[r-2]} += 1;
        if(${l[r-2]} < ${this.outputShape[r-2]}) {
          ${f}
          result[2] = getChannel(getX(${c.join()}), ${d});
          ${l[r-1]} += 1;
          if(${u}) {
            ${f}
            result[3] = getChannel(getX(${c.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ij={kernelName:ma,backendName:"webgl",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s}=n,{paddings:r,mode:o}=e,a=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new aj(s.shape,r,o):new oj(s.shape,r,o);return t.runWebGLProgram(a,[s],s.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uj=`if (b == 0.0) return NAN;
  return mod(a, b);`,lj=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+fo+`
  return result;
`,cj=Ue({opSnippet:uj,packedOpSnippet:lj}),dj={kernelName:ga,backendName:"webgl",kernelFunc:cj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hj{constructor(t,e,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rI=Ue({opSnippet:`
if (a == b) {
  return 1.0;
};
return a / b;`,packedOpSnippet:`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,checkOutOfBounds:!0}),pj={kernelName:jo,backendName:"webgl",kernelFunc:rI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oI="return a - b;",aI=Ue({opSnippet:oI,packedOpSnippet:oI,supportsComplex:!0,cpuKernelImpl:WW}),fj={kernelName:Wa,backendName:"webgl",kernelFunc:aI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iI(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{dim:o}=s,a=Et([o],r.shape),i=sI({inputs:{x:r},backend:e,attrs:{reductionIndices:a,keepDims:!1}}),l=ee(i.shape,a),c=at({inputs:{x:i},backend:e,attrs:{shape:l}}),u=aI({inputs:{a:r,b:c},backend:e}),d=Z1({inputs:{x:u},backend:e}),h=gd({inputs:{x:d},backend:e,attrs:{axis:a,keepDims:!1}}),p=at({inputs:{x:h},backend:e,attrs:{shape:l}}),f=rI({inputs:{a:d,b:p},backend:e});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),f}const mj={kernelName:Ba,backendName:"webgl",kernelFunc:iI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gj(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{numSamples:o,seed:a,normalized:i}=s,l=i?r:iI({inputs:{logits:r},backend:e,attrs:{dim:r.shape.length-1}}),c=l.shape[0],u=l.shape[1],d=new hj(c,u,o),h=[[a]],p=e.runWebGLProgram(d,[l],"int32",h);return i||e.disposeIntermediateTensorInfo(l),p}const bj={kernelName:_l,backendName:"webgl",kernelFunc:gj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xj=Yn+`
  return -x;
`,yj=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function wj(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])){const o=e.texData.get(s.dataId),[a,i]=kW(o.values,s.shape,s.dtype);return e.makeTensorInfo(i,s.dtype,a)}let r;return H().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new xr(s.shape,yj):r=new Es(s.shape,xj),e.runWebGLProgram(r,[s],s.dtype)}const Ij={kernelName:ou,backendName:"webgl",kernelFunc:wj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kj=fp;function Cj(n){Nn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=s,c=e.readSync(r.dataId),u=e.readSync(o.dataId),{selectedIndices:d}=kj(c,u,a,i,l);return e.makeTensorInfo([d.length],"int32",new Int32Array(d))}const $j={kernelName:iu,backendName:"webgl",kernelFunc:Cj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vj=mp;function Sj(n){Nn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:c}=s,u=e.readSync(r.dataId),d=e.readSync(o.dataId),{selectedIndices:h,validOutputs:p}=vj(u,d,a,i,l,c);return[e.makeTensorInfo([h.length],"int32",new Int32Array(h)),e.makeTensorInfo([],"int32",new Int32Array([p]))]}const Nj={kernelName:uu,backendName:"webgl",kernelFunc:Sj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tj=gp;function _j(n){Nn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:r,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=s,u=e.readSync(r.dataId),d=e.readSync(o.dataId),h=a,p=i,f=l,m=c,{selectedIndices:g,selectedScores:b}=Tj(u,d,h,p,f,m);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const Ej={kernelName:lu,backendName:"webgl",kernelFunc:_j};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rj{constructor(t,e,s,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aj={kernelName:xa,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{indices:r}=t,{dtype:o,depth:a,onValue:i,offValue:l}=s,c=L(r.shape),u=new Rj(c,a,i,l),d=at({inputs:{x:r},backend:e,attrs:{shape:[c]}}),h=e.runWebGLProgram(u,[d],o);e.disposeIntermediateTensorInfo(d);const p=[...r.shape,a],f=at({inputs:{x:h},backend:e,attrs:{shape:p}});return e.disposeIntermediateTensorInfo(h),f}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kd(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="complex64"){const r=cl({inputs:{input:s},backend:e}),o=kd({inputs:{x:r},backend:e}),a=wd({inputs:{input:s},backend:e}),i=kd({inputs:{x:a},backend:e}),l=yr({inputs:{real:o,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),l}else return pl({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:e})}const Dj={kernelName:Cu,backendName:"webgl",kernelFunc:kd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uI(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=cl({inputs:{input:s},backend:e}),o=uI({inputs:{x:r},backend:e}),a=wd({inputs:{input:s},backend:e}),i=kd({inputs:{x:a},backend:e}),l=yr({inputs:{real:o,imag:i},backend:e});return e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),l}else return pl({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:e})}const Fj={kernelName:cu,backendName:"webgl",kernelFunc:uI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mj(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s;if(t.length===1)return hm({inputs:{input:t[0]},backend:e,attrs:{dim:r}});const o=t[0].shape,a=t[0].dtype;t.forEach(u=>{Sn(o,u.shape,"All tensors passed to stack must have matching shapes"),N(a===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],l=t.map(u=>{const d=hm({inputs:{input:u},backend:e,attrs:{dim:r}});return i.push(d),d}),c=z1({inputs:l,backend:e,attrs:{axis:r}});return i.forEach(u=>e.disposeIntermediateTensorInfo(u)),c}const Oj={kernelName:du,backendName:"webgl",kernelFunc:Mj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lj{constructor(t,e,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((c,u)=>c[0]+t[u]+c[1]);const r=t.length,o=ne(r),a=e.map(c=>c[0]).join(","),i=e.map((c,u)=>c[0]+t[u]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pj{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((m,g)=>m[0]+t[g]+m[1]);const r=t.length,o=ne(r),a=e.map(m=>m[0]).join(","),i=e.map((m,g)=>m[0]+t[g]).join(","),l=on("rc",r),c=on("source",r),u=`${l[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${c.slice(-2).join()})`,h=[`${o} rc = outputLoc;`,`${l[r-1]} += 1;
       if(${u}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${l[r-2]} += 1;
       if(${l[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${l[r-1]} += 1;
         if(${u}) {`],p=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,g=r===1?2:4;m<g;m++)f+=`
        ${h[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${m}] = getChannel(getX(${c.join()}), ${d});
        }
      `;f+=r===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lI=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{paddings:o,constantValue:a}=s;if(L(r.shape)===0){const c=o.map((u,d)=>u[0]+r.shape[d]+u[1]);return pl({backend:e,attrs:{shape:c,value:a,dtype:r.dtype}})}const i=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Pj(r.shape,o,a):new Lj(r.shape,o,a),l=[[a]];return e.runWebGLProgram(i,[r],r.dtype,l)},Bj={kernelName:ya,backendName:"webgl",kernelFunc:lI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zj=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Wj=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+fo+`
  return result;
`,Vj=Ue({opSnippet:zj,packedOpSnippet:Wj}),Uj={kernelName:wa,backendName:"webgl",kernelFunc:Vj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gj(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,keepDims:a}=s,i=r.shape.length,l=[],c=Et(o,r.shape);let u=c;const d=ue(u,i);let h=r;d!=null&&(h=an({inputs:{x:r},backend:e,attrs:{perm:d}}),u=se(u.length,i),l.push(h)),ie("prod",u,i);let p;if(e.shouldExecuteOnCPU([h])){const f=e.texData.get(h.dataId).values,{outVals:m,outShape:g,outDtype:b}=$W(h.shape,h.dtype,f,u);p=e.makeTensorInfo(g,b,m)}else{const[f,m]=he(h.shape,u),g=L(m),b=at({inputs:{x:h},backend:e,attrs:{shape:[-1,g]}}),x=Sh(r.dtype),y=mo(b,x,"prod",e);p=at({inputs:{x:y},backend:e,attrs:{shape:f}}),l.push(b),l.push(y)}if(a){l.push(p);const f=ee(p.shape,c);p=at({inputs:{x:p},backend:e,attrs:{shape:f}})}return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),p}const Hj={kernelName:ka,backendName:"webgl",kernelFunc:Gj};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jj(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:a}=t,{outputRaggedRank:i}=s,l=r.map(b=>e.readSync(b.dataId)),c=r.map(b=>b.shape),u=e.readSync(o.dataId),d=e.readSync(a.dataId),[h,p,f]=vW(l,c,u,o.shape,o.dtype,d,a.shape,i),m=h.map(b=>e.makeTensorInfo([b.length],"int32",b)),g=e.makeTensorInfo(f,o.dtype,p);return m.concat([g])}const qj={kernelName:zm,backendName:"webgl",kernelFunc:jj};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kj(n){const{inputs:t,backend:e}=n,{starts:s,limits:r,deltas:o}=t,a=e.readSync(s.dataId),i=e.readSync(r.dataId),l=e.readSync(o.dataId),[c,u]=SW(a,s.shape,s.dtype,i,r.shape,l,o.shape),d=e.makeTensorInfo([c.length],"int32",c),h=e.makeTensorInfo([u.length],s.dtype,u);return[d,h]}const Xj={kernelName:Wm,backendName:"webgl",kernelFunc:Kj};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yj(n){const{inputs:t,backend:e,attrs:s}=n,{shape:r,values:o,defaultValue:a,rowPartitionTensors:i}=t,{rowPartitionTypes:l}=s,c=e.readSync(r.dataId),u=e.readSync(o.dataId),d=e.readSync(a.dataId),h=i.map(g=>e.readSync(g.dataId)),p=i.map(g=>g.shape),[f,m]=NW(c,r.shape,u,o.shape,o.dtype,d,a.shape,h,p,l);return e.makeTensorInfo(f,o.dtype,m)}const Zj={kernelName:Vm,backendName:"webgl",kernelFunc:Yj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cI=n=>{const{backend:t,attrs:e}=n,{start:s,stop:r,step:o,dtype:a}=e,i=TW(s,r,o,a);return t.makeTensorInfo([i.length],a,i)},Jj={kernelName:El,backendName:"webgl",kernelFunc:cI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qj=Ut({opSnippet:"return 1.0 / x;"}),tq={kernelName:Ca,backendName:"webgl",kernelFunc:Qj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eq=Yn+`
  return (x < 0.0) ? 0.0 : x;
`,nq=Ut({opSnippet:eq,packedOpSnippet:`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),sq={kernelName:$a,backendName:"webgl",kernelFunc:nq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rq=Yn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,oq=Ut({opSnippet:rq,packedOpSnippet:`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),aq={kernelName:Na,backendName:"webgl",kernelFunc:oq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iq{constructor(t,e,s,r,o){this.variableNames=["A"],this.outputShape=[];const[a,i,l,c]=t;this.outputShape=[a,e,s,c];const u=[r&&e>1?i-1:i,r&&s>1?l-1:l],d=[r&&e>1?e-1:e,r&&s>1?s-1:s];let h;o?h="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/d[0]},
          ${u[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uq{constructor(t,e,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,l,c]=t;this.outputShape=[a,e,s,c];const u=[r&&e>1?i-1:i,r&&s>1?l-1:l],d=[r&&e>1?e-1:e,r&&s>1?s-1:s];let h;o?h="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/d[0]},
          ${u[1]/d[1]},
          ${u[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lq(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:a,size:i}=s,[l,c]=i,u=H().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new uq(r.shape,l,c,o,a):new iq(r.shape,l,c,o,a);return e.runWebGLProgram(u,[r],"float32")}const cq={kernelName:Sa,backendName:"webgl",kernelFunc:lq};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dq{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,o]=e,[,a,i]=t,l=[s&&a>1?r-1:r,s&&i>1?o-1:o],c=[s&&a>1?a-1:a,s&&i>1?i-1:i],u=l[0]/c[0],d=l[1]/c[1],h=1/u,p=1/d,f=Math.ceil(h)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hq(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:a}=s,i=new dq(o.shape,r.shape,a);return e.runWebGLProgram(i,[o],o.dtype)}const pq={kernelName:fu,backendName:"webgl",kernelFunc:hq};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fq{constructor(t,e,s,r,o){this.variableNames=["A"],this.outputShape=[];const[a,i,l,c]=t;this.outputShape=[a,e,s,c];const u=[r&&e>1?i-1:i,r&&s>1?l-1:l],d=[r&&e>1?e-1:e,r&&s>1?s-1:s],h=r?"0.5":"0.0";let p;o?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/d[0]},
          ${u[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mq{constructor(t,e,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,l,c]=t;this.outputShape=[a,e,s,c];const u=[r&&e>1?i-1:i,r&&s>1?l-1:l],d=[r&&e>1?e-1:e,r&&s>1?s-1:s],h=r?"0.5":"0.0";let p;o?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/d[0]},
          ${u[1]/d[1]},
          ${u[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gq(n){const{inputs:t,backend:e,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:a,size:i}=s,[l,c]=i,u=H().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new mq(r.shape,l,c,o,a):new fq(r.shape,l,c,o,a);return e.runWebGLProgram(u,[r],r.dtype)}const bq={kernelName:va,backendName:"webgl",kernelFunc:gq};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xq{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,o]=e,[,a,i]=t,l=[s&&a>1?r-1:r,s&&i>1?o-1:o],c=[s&&a>1?a-1:a,s&&i>1?i-1:i],u=l[0]/c[0],d=l[1]/c[1],h=1/u,p=1/d,f=Math.ceil(h)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yq(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:a}=s,i=new xq(o.shape,r.shape,a);return e.runWebGLProgram(i,[o],o.dtype)}const wq={kernelName:pu,backendName:"webgl",kernelFunc:yq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Iq{constructor(t,e){this.variableNames=["x"];const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=t,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}const r=i=>e.indexOf(i)!==-1&&t[i]!==1?`${t[i]} - coords[${i}] - 1`:`coords[${i}]`,o=t.map((i,l)=>r(l)).join(","),a=ne(s);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kq{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=t;const r=on("rc",s),o=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,a=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,i=ne(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(r.slice())};
          if(${o}){
            result.g = ${c(r.slice())};
          }
          if(${a}) {
            result.b = ${u(r.slice())};
            if(${o}) {
              result.a = ${d(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(f){return h(f)}function c(f){return f[s-1]="("+f[s-1]+" + 1)",h(f)}function u(f){return f[s-2]="("+f[s-2]+" + 1)",h(f)}function d(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",h(f)}function h(f){const m=t.map((x,y)=>p(y,f)),g=m.join(","),b=m.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${b}))`}function p(f,m){return e.indexOf(f)!==-1&&t[f]!==1?`${t[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cq(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dims:o}=s,a=r.shape.length,i=Et(o,r.shape);if(a===0)return kn({inputs:{x:r},backend:e});const l=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kq(r.shape,i):new Iq(r.shape,i);return e.runWebGLProgram(l,[r],r.dtype)}const $q={kernelName:Ta,backendName:"webgl",kernelFunc:Cq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vq{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=t[1],r=t[2];this.outputShape=t;let o="";typeof e=="number"?o=`float outputValue = ${e.toFixed(2)};`:o=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sq={kernelName:$u,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:r,fillValue:o,center:a}=t,i=e,l=new vq(s.shape,o),[c,u]=yc(a,s.shape[1],s.shape[2]),d=[[c,u,Math.sin(r),Math.cos(r)]];return i.runWebGLProgram(l,[s],s.dtype,d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nq=Ut({opSnippet:`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`}),Tq={kernelName:_a,backendName:"webgl",kernelFunc:Nq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _q=Ut({opSnippet:"return inversesqrt(x);",cpuKernelImpl:_W}),Eq={kernelName:Ea,backendName:"webgl",kernelFunc:_q};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fm{constructor(t,e,s,r,o,a,i=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const c=ne(o.length),u=ne(a.length);let d="";s===1?d="i":s===2&&(d="i, j");const h=`getIndices(${d})`;let p="";r===1?p="i":r===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";l&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,b=e>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${o});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${b};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${g}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rq{constructor(t,e,s,r,o,a,i=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const c=ne(o.length),u=ne(a.length);let d="";s===1?d="i":s===2&&(d="i, j");const h=`getIndices(${d})`;let p="";r===1?p="i":r===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";l&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,b=e>1?"strides[j]":"strides",x=e>1?"strides[j + 1]":"strides";this.userCode=`
        ${c} strides = ${c}(${o});

        void main() {
          ${u} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${t}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${e}; j+=2) {
              ivec4 index = round(${h});
              flattenedIndex += index.xz * ${b};
              if (j + 1 < ${e}) {
                flattenedIndex += index.yw * ${x};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${g}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aq(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r,updates:o}=t,{shape:a}=s,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=ws(o,r,a),h=[d/c,c];if(d===0)return e.makeTensorInfo(a,r.dtype);const p=at({inputs:{x:r},backend:e,attrs:{shape:[l,i]}}),f=at({inputs:{x:o},backend:e,attrs:{shape:[l,c]}}),m=e.makeTensorInfo([],"float32",new Float32Array([0]));let g;H().getBool("WEBGL_PACK")?g=new Rq(l,i,p.shape.length,f.shape.length,u,h):g=new fm(l,i,p.shape.length,f.shape.length,u,h);const b=e.runWebGLProgram(g,[f,p,m],f.dtype),x=at({inputs:{x:b},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(m),x}const Dq={kernelName:Rl,backendName:"webgl",kernelFunc:Aq};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fq{constructor(t,e,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,s];const o="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,i=H().getNumber("WEBGL_VERSION")===2?o:a,l=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mq(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:r,values:o}=t,{side:a}=s,i=new Fq(r.shape[0],r.shape[1],o.shape[1],a),l=[[r.shape[1]]];return e.runWebGLProgram(i,[r,o],"int32",l)}const Oq={kernelName:Dl,backendName:"webgl",kernelFunc:Mq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lq{constructor(t,e,s){this.variableNames=["c","a","b"],this.outputShape=e;let r,o;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)o="resRC",r="resRC";else{const i=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let u=0;u<e.length;u++)c.push(`${i[u]}`),u<t&&l.push(`${i[u]}`);r=l.join(),o=c.join()}const a=ne(s);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pq(n){const{inputs:t,backend:e}=n,{condition:s,t:r,e:o}=t,a=new Lq(s.shape.length,r.shape,r.shape.length);return e.runWebGLProgram(a,[s,r,o],xn(r.dtype,o.dtype))}const Bq={kernelName:mu,backendName:"webgl",kernelFunc:Pq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zq=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${kc};
  float scale = ${Cc};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Wq=Ut({opSnippet:zq}),Vq={kernelName:Ra,backendName:"webgl",kernelFunc:Wq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uq=Ii+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Gq=Ut({opSnippet:Uq,packedOpSnippet:`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:RW}),Hq={kernelName:Ma,backendName:"webgl",kernelFunc:Gq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jq=Ut({opSnippet:`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`}),qq={kernelName:Fa,backendName:"webgl",kernelFunc:jq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kq=Ii+`
  return sin(x);
`,Xq=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${fo}
  return result;
`,Yq=Ut({opSnippet:Kq,packedOpSnippet:Xq}),Zq={kernelName:Aa,backendName:"webgl",kernelFunc:Yq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jq=Ut({opSnippet:`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`}),Qq={kernelName:Da,backendName:"webgl",kernelFunc:Jq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t6=Ut({opSnippet:`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`}),e6={kernelName:Oa,backendName:"webgl",kernelFunc:t6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n6={kernelName:bu,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,paddings:a}=s;N(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((b,x)=>b*x),l=[[0,0]];l.push(...a);for(let b=1+o.length;b<r.shape.length;++b)l.push([0,0]);const c=[],u=lI({inputs:{x:r},backend:e,attrs:{paddings:l,constantValue:0}}),d=Yr(u.shape,o,i,!1),h=Zr(d.length,o.length,!1),p=Jr(u.shape,o,i,!1),f=at({inputs:{x:u},backend:e,attrs:{shape:d}}),m=an({inputs:{x:f},backend:e,attrs:{perm:h}}),g=at({inputs:{x:m},backend:e,attrs:{shape:p}});return c.push(u),c.push(f),c.push(m),c.forEach(b=>e.disposeIntermediateTensorInfo(b)),g}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s6(n){const{inputs:t,backend:e}=n,{indices:s,values:r,denseShape:o,defaultValue:a}=t;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=e.readSync(s.dataId),l=e.readSync(r.dataId),c=e.readSync(o.dataId),u=e.readSync(a.dataId)[0],[d,h,p,f,m]=DW(i,s.shape,s.dtype,l,r.dtype,c,u);return[e.makeTensorInfo(h,s.dtype,d),e.makeTensorInfo([h[0]],r.dtype,p),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),e.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const r6={kernelName:lh,backendName:"webgl",kernelFunc:s6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o6(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:r,newShape:o}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(e.readSync(r.dataId)),i=e.readSync(s.dataId),l=Array.from(e.readSync(o.dataId)),[c,u,d]=FW(i,s.shape,s.dtype,a,l);return[e.makeTensorInfo(u,s.dtype,c),e.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}const a6={kernelName:Fl,backendName:"webgl",kernelFunc:o6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i6(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:o}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const a=e.readSync(s.dataId),i=e.readSync(r.dataId),l=e.readSync(o.dataId),[c,u]=m1(a,s.shape,s.dtype,i,l,!0);return e.makeTensorInfo(u,s.dtype,c)}const u6={kernelName:ch,backendName:"webgl",kernelFunc:i6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l6(n){const{inputs:t,backend:e}=n,{data:s,indices:r,segmentIds:o}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const a=e.readSync(s.dataId),i=e.readSync(r.dataId),l=e.readSync(o.dataId),[c,u]=m1(a,s.shape,s.dtype,i,l);return e.makeTensorInfo(u,s.dtype,c)}const c6={kernelName:dh,backendName:"webgl",kernelFunc:l6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d6(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:a}=t,{outputShape:i}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:d,outputSize:h}=ws(o,r,i),p=!1;if(o.dtype==="string"){const b=e.bufferSync(r),x=e.bufferSync(o),y=tr(e.readSync(a.dataId)[0]),w=EW(b,x,i,h,u,c,l,d,y,p);return e.makeTensorInfo(i,w.dtype,w.values)}const f=new fm(c,l,r.shape.length,o.shape.length,d,[h,1],p),m=e.runWebGLProgram(f,[o,r,a],o.dtype),g=at({inputs:{x:m},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(m),g}const h6={kernelName:Ml,backendName:"webgl",kernelFunc:d6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p6(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{numOrSizeSplits:o,axis:a}=s,i=Et(a,r.shape)[0],l=$c(r,o,i),c=r.shape.length,u=new Array(c).fill(0),d=r.shape.slice();return l.map(h=>{const p=[...d];p[i]=h;const f=ki({inputs:{x:r},backend:e,attrs:{begin:u,size:p}});return u[i]+=h,f})}const f6={kernelName:xu,backendName:"webgl",kernelFunc:p6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dI="return sqrt(x);",m6=Ut({opSnippet:dI,packedOpSnippet:dI,cpuKernelImpl:MW}),g6={kernelName:La,backendName:"webgl",kernelFunc:m6};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b6=Ut({opSnippet:"return x * x;"}),x6={kernelName:Ol,backendName:"webgl",kernelFunc:b6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hI="return (a - b) * (a - b);",y6=Ue({opSnippet:hI,packedOpSnippet:hI}),w6={kernelName:za,backendName:"webgl",kernelFunc:y6};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I6(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");const o=e.readSync(r.dataId),a=Vs(o),i=OW(a,"string",s);return e.makeTensorInfo(r.shape,"string",i)}const k6={kernelName:hh,backendName:"webgl",kernelFunc:I6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C6({inputs:n,attrs:t,backend:e}){const{x:s}=n,r=Yn+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,o=new Es(s.shape,r);return e.runWebGLProgram(o,[s],s.dtype)}const $6={kernelName:Er,backendName:"webgl",kernelFunc:C6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class v6{constructor(t,e,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,o=ne(s.length),a=ne(s.length);let i="";if(r===1)i="coords * strides + begin";else{let l=0;i=s.map((c,u)=>(l++,s.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${l-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${t});
      ${o} strides = ${o}(${e});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S6(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{begin:o,end:a,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:x,end:y,strides:w}=gc(r.shape,o,a,i,l,c,u,d,h);let I;if(m)I=at({inputs:{x:r},backend:e,attrs:{shape:f}});else if(g||b){N(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const S=pc(x,y,w),T=ki({inputs:{x:r},backend:e,attrs:{begin:x,size:S}});I=at({inputs:{x:T},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(T)}else if(e.shouldExecuteOnCPU([r])){const T=e.readSync(r.dataId),v=Ot(r.shape,r.dtype,T),$=LW(p,v,w,x);I=e.makeTensorInfo(f,r.dtype,$.values)}else{const T=new v6(x,w,p);I=e.runWebGLProgram(T,[r],r.dtype)}const C=at({inputs:{x:I},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(I),C}const N6={kernelName:yu,backendName:"webgl",kernelFunc:S6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T6(n){const{inputs:t,backend:e,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:a,rightPad:i,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:d}=t,h=e.readSync(u.dataId),p=e.readSync(d.dataId),[f,m]=PW(h,p,r,o,a,i,l,c);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(d.shape,"int32",m)]}const _6={kernelName:ph,backendName:"webgl",kernelFunc:T6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E6(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:a}=t;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=e.readSync(o.dataId),l=e.readSync(a.dataId)[0],[c,u,d]=BW(i,l,r),h=u.length;return[e.makeTensorInfo([h,2],"int32",c),e.makeTensorInfo([h],"string",u),e.makeTensorInfo([2],"int32",new Int32Array(d))]}const R6={kernelName:fh,backendName:"webgl",kernelFunc:E6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A6(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:r}=s,{input:o}=t;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=e.readSync(o.dataId),i=zW(a,r);return e.makeTensorInfo(o.shape,"int32",i)}const D6={kernelName:mh,backendName:"webgl",kernelFunc:A6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F6=Ut({opSnippet:"return tan(x);"}),M6={kernelName:Va,backendName:"webgl",kernelFunc:F6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O6=Ut({opSnippet:`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`}),L6={kernelName:Ua,backendName:"webgl",kernelFunc:O6};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P6(n){const{inputs:t,backend:e,attrs:s}=n,{tensor:r,indices:o,updates:a}=t,{sliceRank:i,numUpdates:l,sliceSize:c,strides:u,outputSize:d}=ws(a,o,r.shape),h=[d/c,c];if(d===0)return e.makeTensorInfo(r.shape,o.dtype);const p=at({inputs:{x:o},backend:e,attrs:{shape:[l,i]}}),f=at({inputs:{x:a},backend:e,attrs:{shape:[l,c]}}),m=at({inputs:{x:r},backend:e,attrs:{shape:h}}),g=new fm(l,i,p.shape.length,f.shape.length,u,h,!1,!0),b=e.runWebGLProgram(g,[f,p,m],m.dtype),x=at({inputs:{x:b},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(b),x}const B6={kernelName:Al,backendName:"webgl",kernelFunc:P6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z6{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let a=0;a<s.length;a++)s[a]=t[a]*e[a];this.outputShape=s,this.rank=s.length;const r=ne(this.rank),o=W6(t);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function W6(n){const t=n.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${n[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${e[r]}, ${n[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pI(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{reps:o}=s;if(r.dtype==="string"||r.shape.length>5){const l=e.readSync(r.dataId),c=r.dtype==="string"?l.map(h=>tr(h)):l,u=Ot(r.shape,r.dtype,c),d=VW(u,o);return e.makeTensorInfo(d.shape,d.dtype,d.values)}const a=new z6(r.shape,o);return e.runWebGLProgram(a,[r],r.dtype)}const V6={kernelName:_r,backendName:"webgl",kernelFunc:pI};class U6{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class G6{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function go(n,t){t!==null&&n.disposeIntermediateTensorInfo(t)}function fI(n){let t=1;for(;t<n;)t*=2;return t}function H6(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{k:o,sorted:a}=s,i=H().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=H().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=r.shape,u=c[c.length-1];if(e.shouldExecuteOnCPU([r])||u<i||o>l){const $=e.readSync(r.dataId),[k,R]=UW($,c,r.dtype,o,a);return[e.makeTensorInfo(k.shape,k.dtype,k.values),e.makeTensorInfo(R.shape,R.dtype,R.values)]}if(o===0)return c[c.length-1]=0,[e.makeTensorInfo(c,r.dtype,[]),e.makeTensorInfo(c,"int32",[])];if(u===1)return[r,pl({attrs:{shape:c,dtype:"int32",value:0},backend:e})];const d=e.texData.get(r.dataId),h=d!==null&&d.isPacked,p=h?e.unpackTensor(r):r,m=L(c)/u,g=at({inputs:{x:p},attrs:{shape:[m,u]},backend:e});h&&go(e,p);const b=fI(o),x=fI(u);let y=null;const w=()=>y===null?[g,g]:[g,y],I=($,k,R)=>{const F=w(),B=new U6(R),z=[[u],[y===null?1:0],[Number.NEGATIVE_INFINITY],[$],[k]],j=y;y=e.runWebGLProgram(B,F,"int32",z),go(e,j)};for(let $=1;$<b;$*=2){const k=$*2;for(let R=$;R>=1;R/=2)I(k,R,[m,x])}for(let $=x;$>b;$/=2){const k=w(),R=new G6([m,$/2]),B=[[u],[y===null?1:0],[b]],M=y;y=e.runWebGLProgram(R,k,"int32",B),go(e,M);const z=b/2,j=z*2;for(let V=z;V>=1;V/=2)I(j,V,y.shape)}let C=y;y=ki({inputs:{x:y},backend:e,attrs:{begin:0,size:[m,o]}}),go(e,C);let S=nI({inputs:{x:g,indices:y},backend:e,attrs:{axis:1,batchDims:1}});go(e,g);const T=c.slice(0,-1);T.push(o),C=y,y=at({inputs:{x:y},attrs:{shape:T},backend:e}),go(e,C);const v=S;return S=at({inputs:{x:S},attrs:{shape:T},backend:e}),go(e,v),[S,y]}const j6={kernelName:wu,backendName:"webgl",kernelFunc:H6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q6{constructor(t,e,s,r,o,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i=s==="nearest"?1:2;let l;switch(r){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K6(n){const{inputs:t,backend:e,attrs:s}=n,{image:r,transforms:o}=t,{interpolation:a,fillMode:i,fillValue:l,outputShape:c}=s,[u,d,h,p]=r.shape,[f,m]=c??[d,h],g=[u,f,m,p],b=new q6(d,h,a,i,l,g);return e.runWebGLProgram(b,[r,o],"float32")}const X6={kernelName:Iu,backendName:"webgl",kernelFunc:K6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y6(n){const{inputs:t,attrs:e,backend:s}=n,{axis:r}=e,{x:o}=t;al(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=s.readSync(o.dataId),{outputValues:i,outputShape:l,indices:c}=GW(a,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,i),s.makeTensorInfo([c.length],"int32",c)]}const Z6={kernelName:Ll,backendName:"webgl",kernelFunc:Y6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J6(n){const{inputs:t,backend:e,attrs:s}=n,{value:r}=t;let{axis:o}=s;o<0&&(o+=r.shape.length);const a=r,i=a.shape.length,l=r.shape[o],c=new Array(i-1);let u=0;for(let m=0;m<i;m++)m!==o&&(c[u++]=a.shape[m]);const d=[],h=new Array(i).fill(0),p=a.shape.slice();p[o]=1;const f=new Array(l);for(let m=0;m<f.length;m++){h[o]=m;const g=ki({inputs:{x:a},backend:e,attrs:{begin:h,size:p}}),b=at({inputs:{x:g},backend:e,attrs:{shape:c}});f[m]=b,d.push(g)}return d.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}const Q6={kernelName:ku,backendName:"webgl",kernelFunc:J6};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tK{constructor(t,e){this.variableNames=["x","segmentIds"];const s=t.windowSize,r=t.batchSize,o=t.inSize,a=t.numSegments,i=a*Math.ceil(o/s);this.outputShape=[r,i];const l="0.0",c="sumValue",u=Math.floor(s/4)*4,d=s%4,h=`
        sumValue += dot(values, segFilter);
    `;let p="";o%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${h}
        }

        int inIdx = inOffset + ${u};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${h}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${h}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${h}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eK(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,segmentIds:o}=t,{numSegments:a}=s,i=r.shape.length,l=[];let c=0;const u=ue([c],i);let d=r;u!=null&&(d=an({inputs:{x:r},backend:e,attrs:{perm:u}}),l.push(d),c=se(1,i)[0]);const h=Kb(d.shape,c,a),p=L([d.shape[c]]),f=at({inputs:{x:d},backend:e,attrs:{shape:[-1,p]}});l.push(f);const m=Sh(r.dtype),g=(w,I,C,S,T)=>{const v=w.shape[0],$=w.shape[1],k=qb($,T),R={windowSize:k,inSize:$,batchSize:v,numSegments:T},F=new tK(R,I),B=e.compileAndRun(F,[w,C],S);if(l.push(B),B.shape[1]===T)return B;const M=cI({backend:e,attrs:{start:0,stop:T,step:1,dtype:"float32"}}),z=pI({inputs:{x:M},backend:e,attrs:{reps:[$/k]}});return l.push(M),l.push(z),g(B,I,z,S,T)},b=g(f,"unsortedSegmentSum",o,m,a),x=at({inputs:{x:b},backend:e,attrs:{shape:h}});let y=x;if(u!=null){l.push(x);const w=xs(u);y=an({inputs:{x:y},backend:e,attrs:{perm:w}})}return l.forEach(w=>e.disposeIntermediateTensorInfo(w)),y}const nK={kernelName:Pl,backendName:"webgl",kernelFunc:eK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sK=[MV,LV,zV,UV,HV,KV,YV,JV,nU,rU,iU,cU,pU,bU,wU,kU,$U,TU,EU,AU,MU,WU,UU,qU,XU,t4,n4,a4,xV,l4,f4,x4,$4,N4,_4,R4,D4,L4,B4,W4,U4,H4,q4,Y4,J4,nG,rG,iG,cG,hG,fG,bG,yG,kG,$G,vG,NG,_G,RG,DG,MG,LG,zG,UG,HG,KG,ZG,QG,eH,bV,sH,h4,oH,iH,lH,wV,dH,pH,mH,xH,IH,CH,vH,NH,EH,AH,FH,PH,zH,VH,jH,KH,YH,JH,tj,rj,ij,dj,bj,CV,Ij,$j,Nj,Ej,YU,Aj,Fj,Oj,Bj,Uj,kV,Hj,qj,Xj,Zj,Jj,ZU,pj,tq,sq,aq,vV,cq,pq,bq,wq,$q,Sq,Tq,Eq,Dq,Oq,Bq,Vq,Hq,qq,Zq,Qq,zU,mj,e6,n6,r6,a6,u6,c6,h6,f6,g6,x6,w6,k6,$6,N6,_6,R6,D6,fj,AV,M6,L6,B6,V6,j6,X6,DV,Z6,Q6,nK,Dj];for(const n of sK)bh(n);class mm{constructor(t=2,e=64){Rm(this,"model");Rm(this,"dim");if(new.target===mm)throw new Error("Cannot instantiate abstract class Model directly.");this.dim=t,this.model=wD(),this.model.add(Yc({inputShape:[t+1],units:e,activation:"elu"})),this.model.add(Yc({units:e,activation:"elu"})),this.model.add(Yc({units:e,activation:"elu"})),this.model.add(Yc({units:t}))}setModel(t){this.model=t}async download(){await this.model.save("downloads://model")}train(t,e=1e4,s=32){throw new Error("Method 'train()' not implemented.")}forward(t,e){throw new Error("Method 'forward()' not implemented.")}step(t,e,s){throw new Error("Method 'step()' not implemented.")}sample(t,e=100){throw new Error("Method 'sample()' not implemented.")}}class rK extends mm{constructor(t=2,e=64){super(t,e)}async train(t,e=1e4,s=32){const r=(a,i)=>m_.meanSquaredError(i,a),o=Xr.adam(.01);for(let a=0;a<e;a++)G(()=>{const i=jr([s],0,t.shape[0],"int32"),l=ec(t,i),c=jr([s,1]),u=sp([s,this.dim]),d=u.mul(ft(1,c)).add(l.mul(c)),h=l.sub(u);o.minimize(()=>{const p=this.forward(d,c);return r(p,h)})})}forward(t,e){return G(()=>{const s=e.reshape([t.shape[0],1]),r=nn([t,s],1);return this.model.predict(r)})}step(t,e,s){return G(()=>{const r=e.reshape([t.shape[0],1]),a=s.reshape([t.shape[0],1]).sub(r),i=this.forward(t,r).mul(a).div(2),l=t.add(i),c=r.add(a.div(2)),u=this.forward(l,c).mul(a);return t.add(u)})}sample(t,e=100){return G(()=>{const s=sp([t,this.dim]),r=t2(0,1,e+1);let o=[],a=s;for(let i=0;i<e;i++){const l=r.slice([i],[1]),c=Rn(l,[t]),u=r.slice([i+1],[1]),d=Rn(u,[t]);a=this.step(a,c,d),o.push(a)}return ys(o)})}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var jt;(function(n){n[n.float32=0]="float32",n[n.int32=1]="int32",n[n.bool=2]="bool",n[n.string=3]="string",n[n.complex64=4]="complex64"})(jt||(jt={}));var fl;(function(n){n[n.linear=0]="linear",n[n.relu=1]="relu",n[n.relu6=2]="relu6",n[n.prelu=3]="prelu",n[n.leakyrelu=4]="leakyrelu",n[n.sigmoid=5]="sigmoid",n[n.elu=6]="elu"})(fl||(fl={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let mI;function oK(n){mI=n.wasm.cwrap(Ga,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function aK(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o,bias:a,preluActivationWeights:i}=t;if(r.dtype!=="float32"||o.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:d}=s,h=e.dataIdMap.get(r.dataId).id,p=e.dataIdMap.get(o.dataId).id;let f=0;if(a!=null){const T=e.dataIdMap.get(a.dataId);if(T.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${T.shape.length}.`);f=T.id}const m=i==null?0:e.dataIdMap.get(i.dataId).id,g=fl[u];if(g==null)throw new Error(`${u} activation not yet supported for FusedConv2D in the wasm backend.`);const b=l?r.shape[2]:r.shape[1],x=c?o.shape[1]:o.shape[2],y=vt(r.shape.slice(0,-2),o.shape.slice(0,-2)),w=e.makeOutput([...y,b,x],r.dtype),I=e.dataIdMap.get(w.dataId).id,C=new Uint8Array(new Int32Array(r.shape).buffer),S=new Uint8Array(new Int32Array(o.shape).buffer);return mI(h,C,r.shape.length,p,S,o.shape.length,l,c,g,f,m,d||0,I),w}const iK={kernelName:Ga,backendName:"wasm",setupFunc:oK,kernelFunc:aK};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zt(n,t){let e;function s(o){e=o.wasm.cwrap(n,null,["number","number","number"])}function r(o){const{backend:a,inputs:{x:i}}=o,l=a.dataIdMap.get(i.dataId).id,c=a.makeOutput(i.shape,t||i.dtype),u=a.dataIdMap.get(c.dataId).id;return L(c.shape)===0||e(l,jt[i.dtype],u),c}return{kernelName:n,backendName:"wasm",setupFunc:s,kernelFunc:r}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uK=zt(Ti);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lK=zt(No);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cK=zt(To);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Se(n,t,e){let s;function r(a){s=a.wasm.cwrap(n,null,["number","array","number","number","array","number","number","number"])}function o(a){const{backend:i,inputs:l}=a,{a:c,b:u}=l,d=i.dataIdMap.get(c.dataId).id,h=i.dataIdMap.get(u.dataId).id,p=e??c.dtype,f=vt(c.shape,u.shape),m=i.makeOutput(f,p);if(L(f)===0)return m;const g=new Uint8Array(new Int32Array(c.shape).buffer),b=new Uint8Array(new Int32Array(u.shape).buffer),x=i.dataIdMap.get(m.dataId).id;return s(d,g,c.shape.length,h,b,u.shape.length,jt[c.dtype],x),m}return{kernelName:n,backendName:"wasm",setupFunc:r,kernelFunc:o}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dK=Se(Nr);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let gI;function hK(n){gI=n.wasm.cwrap(_i,null,["array","number","number","number"])}function pK(n){const{inputs:t,backend:e}=n,s=e.makeOutput(t[0].shape,t[0].dtype);if(L(s.shape)===0)return s;const r=t.map(i=>e.dataIdMap.get(i.dataId).id),o=new Uint8Array(new Int32Array(r).buffer),a=e.dataIdMap.get(s.dataId).id;return gI(o,r.length,jt[s.dtype],a),s}const fK={kernelName:_i,backendName:"wasm",setupFunc:hK,kernelFunc:pK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cd(n){const{inputs:{x:t},backend:e}=n;if(t.dtype==="string")return Ka(e.readSync(t.dataId),t.shape,t.dtype);const s=e.makeOutput(t.shape,t.dtype),r=e.typedArrayFromHeap(t);return e.typedArrayFromHeap(s).set(r),s}const mK={kernelName:ea,backendName:"wasm",kernelFunc:Cd};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bI;function gK(n){bI=n.wasm.cwrap(Ys,null,["number","array","number","number","number","array","number"])}function wr(n){const{inputs:t,backend:e,attrs:s}=n,[r,o]=xK(t.x.shape,s.perm);let a=!0;for(let f=0;f<o.length;f++)o[f]!==f&&(a=!1);const i=bK(t.x.shape,s.perm),l={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(a){const f=Cd({inputs:t,backend:e});return f.shape=i,f}const c=e.makeOutput(i,l.dtype),u=e.dataIdMap.get(l.dataId).id,d=e.dataIdMap.get(c.dataId).id,h=new Uint8Array(new Int32Array(o).buffer),p=new Uint8Array(new Int32Array(l.shape).buffer);return bI(u,p,l.shape.length,jt[l.dtype],d,h,o.length),c}function bK(n,t){const e=new Array(n.length);for(let s=0;s<e.length;s++)e[s]=n[t[s]];return e}function xK(n,t){const e=[],s=[];for(let r=0;r<n.length;++r)n[r]!==1&&e.push(n[r]),n[t[r]]!==1&&s.push(t[r]);for(let r=0;r<s.length;++r){let o=-1;for(let a=0;a<s.length;++a)s[a]>=r&&(o===-1||s[o]>s[a])&&(o=a);s[o]=r}return[e,s]}const yK={kernelName:Ys,backendName:"wasm",kernelFunc:wr,setupFunc:gK};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ir(n,t,e){const s=n.shape,r=n.shape.length,o=Et(t,s);let a=o;const i=ue(a,r);let l=null,c=!1;if(i!=null){const u=new Array(r);for(let p=0;p<u.length;p++)u[p]=s[i[p]];a=se(a.length,r),l=wr({inputs:{x:n},attrs:{perm:i},backend:e});const d=e.dataIdMap.get(n.dataId).id;e.dataIdMap.get(l.dataId).id!==d&&(c=!0)}return{transposed:l,originalAxes:o,axes:a,inputWasTransposed:c}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let xI;function wK(n){xI=n.wasm.cwrap(Ei,null,["number, number, number"])}function IK(n){const{backend:t,inputs:e,attrs:s}=n,{axis:r,keepDims:o}=s,{x:a}=e;let l=t.dataIdMap.get(a.dataId).id,c=a;const{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=Ir(a,r,t);if(p){const y=t.dataIdMap.get(u.dataId).id;c=u,l=y}const f=c.shape.length;ie("all",d,f);const[m,g]=he(c.shape,d),b=L(g),x=t.makeOutput(m,a.dtype);if(L(c.shape)!==0){const y=t.dataIdMap.get(x.dataId).id;xI(l,b,y)}if(p&&t.disposeData(u.dataId),o){const y=ee(x.shape,h);x.shape=y}return x}const kK={kernelName:Ei,backendName:"wasm",setupFunc:wK,kernelFunc:IK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let yI;function CK(n){yI=n.wasm.cwrap(Ri,null,["number, number, number"])}function $K(n){const{backend:t,inputs:e,attrs:s}=n,{axis:r,keepDims:o}=s,{x:a}=e;let l=t.dataIdMap.get(a.dataId).id,c=a;const{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=Ir(a,r,t);if(p){const y=t.dataIdMap.get(u.dataId).id;c=u,l=y}const f=c.shape.length;ie("any",d,f);const[m,g]=he(c.shape,d),b=L(g),x=t.makeOutput(m,a.dtype);if(L(c.shape)!==0){const y=t.dataIdMap.get(x.dataId).id;yI(l,b,y)}if(p&&t.disposeData(u.dataId),o){const y=ee(x.shape,h);x.shape=y}return x}const vK={kernelName:Ri,backendName:"wasm",setupFunc:CK,kernelFunc:$K};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wI(n){let t;function e(r){t=r.wasm.cwrap(n,null,["number","number","number","number","number"])}function s(r){const{backend:o,inputs:a,attrs:i}=r,{axis:l}=i,{x:c}=a,u=o.dataIdMap.get(c.dataId).id;let d=u,h=c;const{transposed:p,axes:f,inputWasTransposed:m}=Ir(c,l,o);if(m){const I=o.dataIdMap.get(p.dataId).id;I!==u&&(h=p,d=I)}const g=h.shape.slice(0,-1),b=o.makeOutput(g,"int32"),x=o.dataIdMap.get(b.dataId).id,y=L(b.shape),w=h.shape[f[0]];return t(d,jt[h.dtype],y,w,x),m&&o.disposeData(p.dataId),b}return{kernelName:n,backendName:"wasm",setupFunc:e,kernelFunc:s}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SK=wI(Ai);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NK=wI(Di);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TK=zt(_o);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _K=zt(Eo);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EK=zt(Ro);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RK=Se(Do);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AK=zt(Ao);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let II;function DK(n){II=n.wasm.cwrap(Fo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function FK(n){const{inputs:t,attrs:e,backend:s}=n,r=t.x,o=s.dataIdMap.get(r.dataId).id,{filterSize:a,strides:i,pad:l,dimRoundingMode:c}=e,u=Ye(r.shape,a,i,1,l,c),d=u.filterHeight,h=u.filterWidth,p=u.padInfo.top,f=u.padInfo.right,m=u.padInfo.bottom,g=u.padInfo.left,b=u.strideHeight,x=u.strideWidth,y=u.inChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);if(u.dilationWidth!==1||u.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${u.dilationHeight}, ${u.dilationWidth}].`);const w=s.makeOutput(u.outShape,"float32"),I=s.dataIdMap.get(w.dataId).id;return II(o,r.shape[0],r.shape[1],r.shape[2],d,h,p,f,m,g,b,x,y,I),w}const MK={kernelName:Fo,backendName:"wasm",setupFunc:DK,kernelFunc:FK};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let kI;function OK(n){kI=n.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function LK(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:l,dataFormat:c}=s,u=Tn(r.shape,o,a,1,i,l,c),d=e.makeOutput(u.outShape,r.dtype);return kI(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(d.dataId).id,u.batchSize,u.inChannels,u.inDepth,u.inHeight,u.inWidth,u.outDepth,u.outHeight,u.outWidth,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.effectiveFilterDepth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}const PK={kernelName:Fi,backendName:"wasm",setupFunc:OK,kernelFunc:LK};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let CI;function BK(n){CI=n.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function zK(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,{filterSize:a,strides:i,pad:l,dimRoundingMode:c}=s,u=Tn(o.shape,a,i,1,l,c),d=e.makeOutput(o.shape,o.dtype);return CI(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(d.dataId).id,u.batchSize,u.inChannels,u.inDepth,u.inHeight,u.inWidth,u.outDepth,u.outHeight,u.outWidth,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.effectiveFilterDepth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left,u.filterDepth,u.filterHeight,u.filterWidth),d}const WK={kernelName:Il,backendName:"wasm",setupFunc:BK,kernelFunc:zK};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let $I;function VK(n){$I=n.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function UK(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,{filterSize:a,strides:i,pad:l}=s,c=Ye(o.shape,a,i,1,l),u=e.makeOutput(o.shape,o.dtype);return $I(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(u.dataId).id,c.batchSize,c.inChannels,c.inHeight,c.inWidth,c.outHeight,c.outWidth,c.strideHeight,c.strideWidth,c.dilationHeight,c.dilationWidth,c.effectiveFilterHeight,c.effectiveFilterWidth,c.padInfo.top,c.padInfo.left,c.filterHeight,c.filterWidth),u}const GK={kernelName:wl,backendName:"wasm",setupFunc:VK,kernelFunc:UK};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mn(n){const{inputs:t,attrs:e}=n,{x:s}=t,{shape:r}=e,o=L(s.shape),a=Ud(r,o);return N(o===L(a),()=>`new shape: ${a}, old shape: ${s.shape}. New shape and old shape must have the same number of elements.`),n.backend.incRef(s.dataId),{dataId:s.dataId,shape:a,dtype:s.dtype}}const HK={kernelName:hu,backendName:"wasm",kernelFunc:mn};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let vI;function jK(n){vI=n.wasm.cwrap(Mo,null,["number","array","number","number","array","number","number","number","number"])}function qK(n){const{inputs:t,backend:e,attrs:s}=n,{a:r,b:o}=t,{transposeA:a,transposeB:i}=s;if(r.dtype!=="float32"||o.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const l=r.shape.length,c=o.shape.length,u=a?r.shape[l-2]:r.shape[l-1],d=i?o.shape[c-1]:o.shape[c-2],h=a?r.shape[l-1]:r.shape[l-2],p=i?o.shape[c-2]:o.shape[c-1],f=r.shape.slice(0,-2),m=o.shape.slice(0,-2),g=L(f),b=L(m),y=vt(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([h,p]);N(u===d,()=>`Error in matMul: inner shapes (${u}) and (${d}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${a} and transposeB=${i} must match.`);const w=a?[g,u,h]:[g,h,u],I=i?[b,p,d]:[b,d,p],C=mn({inputs:{x:r},backend:e,attrs:{shape:w}}),S=mn({inputs:{x:o},backend:e,attrs:{shape:I}}),T=e.dataIdMap.get(C.dataId).id,v=e.dataIdMap.get(S.dataId).id,$=a?C.shape[2]:C.shape[1],k=i?S.shape[1]:S.shape[2],R=Math.max(g,b),F=e.makeOutput([R,$,k],C.dtype),B=e.dataIdMap.get(F.dataId).id,M=new Uint8Array(new Int32Array(C.shape).buffer),z=new Uint8Array(new Int32Array(S.shape).buffer);return vI(T,M,C.shape.length,v,z,S.shape.length,a,i,B),e.disposeData(C.dataId),e.disposeData(S.dataId),F.shape=y,F}const KK={kernelName:Mo,backendName:"wasm",setupFunc:jK,kernelFunc:qK};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bo(n){const{inputs:{x:t},attrs:{begin:e,size:s},backend:r}=n,[o,a]=Pu(t,e,s),i=fc(t.shape,o,a),l=r.readSync(t.dataId),c=r.makeOutput(a,t.dtype),u=pt(t.shape),d=r.dataIdMap.get(c.dataId);if(i){const f=mc(o,u);return t.dtype==="string"?d.stringBytes=l.slice(f,f+L(a)):r.typedArrayFromHeap(c).set(l.subarray(f,f+L(a))),c}if(t.dtype==="string"){const f=ed(l,o,a,t.shape,t.dtype);return d.stringBytes=f,c}const h=r.typedArrayFromHeap(c),p=t.shape.length;if(p===2)XK(l,u[0],h,o,a);else if(p===3)YK(l,u[0],u[1],h,o,a);else if(p===4)ZK(l,u[0],u[1],u[2],h,o,a);else{const f=ed(l,o,a,t.shape,t.dtype);h.set(f)}return c}function XK(n,t,e,s,r){let o=0;const a=s[0],i=s[1],l=a+r[0];for(let c=a;c<l;c++){const u=c*t+i;e.set(n.subarray(u,u+r[1]),o),o+=r[1]}}function YK(n,t,e,s,r,o){let a=0;const i=r[0],l=r[1],c=r[2],u=i+o[0],d=l+o[1];for(let h=i;h<u;h++)for(let p=l;p<d;p++){const f=h*t+p*e+c;s.set(n.subarray(f,f+o[2]),a),a+=o[2]}}function ZK(n,t,e,s,r,o,a){let i=0;const l=o[0],c=o[1],u=o[2],d=l+a[0],h=c+a[1],p=u+a[2],f=o[3];for(let m=l;m<d;m++)for(let g=c;g<h;g++)for(let b=u;b<p;b++){const x=m*t+g*e+b*s+f;r.set(n.subarray(x,x+a[3]),i),i+=a[3]}}const JK={kernelName:gu,backendName:"wasm",kernelFunc:bo};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QK(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,crops:a}=s,i=o.reduce((b,x)=>b*x),l=Yr(r.shape,o,i),c=Zr(l.length,o.length),u=Jr(r.shape,o,i),d=wc(a,o.length),h=Ic(u,a,o.length),p=mn({inputs:{x:r},backend:e,attrs:{shape:l}}),f=wr({inputs:{x:p},backend:e,attrs:{perm:c}}),m=mn({inputs:{x:f},backend:e,attrs:{shape:u}}),g=bo({inputs:{x:m},backend:e,attrs:{begin:d,size:h}});return e.disposeData(p.dataId),e.disposeData(f.dataId),e.disposeData(m.dataId),g}const tX={kernelName:Mi,backendName:"wasm",kernelFunc:QK};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let SI;function eX(n){SI=n.wasm.cwrap(Oi,null,["number","number","boolean","number","number","number"])}function nX(n){const{backend:t,inputs:e,attrs:s}=n,{x:r,weights:o}=e,{size:a}=s,i=o.shape.reduce((d,h)=>d*h,1)!==0,l=r.shape.length===1?[a]:[r.shape[0],a],c=t.makeOutput(l,o.dtype);function u(d){return t.dataIdMap.get(d.dataId).id}return SI(u(r),a,i,u(o),jt[o.dtype],u(c)),c}const sX={kernelName:Oi,backendName:"wasm",setupFunc:eX,kernelFunc:nX};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rX=Se(kl);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oX(n){const{inputs:t,backend:e}=n,{s0:s,s1:r}=t,o=e.typedArrayFromHeap(s),a=e.typedArrayFromHeap(r),i=vt(Array.from(o),Array.from(a));return e.makeOutput([i.length],"int32",void 0,new Int32Array(i))}const aX={kernelName:Zd,backendName:"wasm",kernelFunc:oX};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kr(n){const{inputs:{x:t},attrs:{dtype:e},backend:s}=n,r=s.makeOutput(t.shape,e),o=s.typedArrayFromHeap(t);return s.typedArrayFromHeap(r).set(o),r}const iX={kernelName:Oo,backendName:"wasm",kernelFunc:kr};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uX=zt(Lo);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let NI;function lX(n){NI=n.wasm.cwrap(Tr,null,["number","number","number","number"])}function cX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{clipValueMin:o,clipValueMax:a}=s,i=e.dataIdMap.get(r.dataId).id,l=e.makeOutput(r.shape,r.dtype),c=e.dataIdMap.get(l.dataId).id;return NI(i,o,a,c),l}const dX={kernelName:Tr,backendName:"wasm",setupFunc:lX,kernelFunc:cX};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TI(n){const{inputs:t,backend:e}=n,s=Et(n.attrs.axis,t[0].shape)[0],r=t.map(p=>p.shape);bc(r,s);let o=Fn(t.map(p=>p.shape),s);const a=t.filter(p=>L(p.shape)>0);if(a.length===1)return Cd({inputs:{x:a[0]},backend:e});const i=e.makeOutput(o,t[0].dtype);if(L(o)===0)return i;if(a[0].dtype==="string"){const p=a.map(y=>{const I=[-1,L(y.shape.slice(s))];return mn({inputs:{x:y},backend:e,attrs:{shape:I}})}),f=p.map(y=>({vals:e.readSync(y.dataId),shape:y.shape}));o=Fn(p.map(y=>y.shape),1);const m=p[0].shape[0]===1,g=Mf(f,o,t[0].dtype,m),b=Fn(a.map(y=>y.shape),s);i.shape=b;const x=e.dataIdMap.get(i.dataId);return x.stringBytes=qp(g),p.forEach(y=>e.disposeData(y.dataId)),i}const l=L(a[0].shape.slice(0,s));let c=0;const u=a.map(p=>{const f=L(p.shape.slice(s));return c+=f,f}),d=a.map(p=>e.typedArrayFromHeap(p)),h=e.typedArrayFromHeap(i);for(let p=0;p<l;p++){let f=p*c;for(let m=0;m<d.length;m++){const g=u[m],b=p*g,x=d[m].subarray(b,b+g);h.set(x,f),f+=g}}return i}const hX={kernelName:Li,backendName:"wasm",kernelFunc:TI};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let _I;function pX(n){_I=n.wasm.cwrap(Po,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function fX(n){const{inputs:t,attrs:e,backend:s}=n,{x:r,filter:o}=t,a=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(o.dataId).id,{strides:l,dilations:c,pad:u,dimRoundingMode:d,dataFormat:h}=e,p=ss(h),f=we(r.shape,o.shape,l,c,u,d,!1,p),m=f.filterHeight,g=f.filterWidth,b=f.padInfo.top,x=f.padInfo.right,y=f.padInfo.bottom,w=f.padInfo.left,I=f.dilationHeight,C=f.dilationWidth,S=f.strideHeight,T=f.strideWidth,v=f.inChannels,$=f.outChannels,k=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const R=s.makeOutput(f.outShape,"float32"),F=s.dataIdMap.get(R.dataId).id;return _I(a,r.shape[0],r.shape[1],r.shape[2],i,m,g,b,x,y,w,k,I,C,S,T,v,$,F),R}const mX={kernelName:Po,backendName:"wasm",setupFunc:pX,kernelFunc:fX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let EI;function gX(n){EI=n.wasm.cwrap(Bo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function bX(n){const{backend:t,inputs:e,attrs:s}=n,{dy:r,filter:o}=e,{strides:a,pad:i,dataFormat:l,dimRoundingMode:c,inputShape:u}=s,d=1,h=ss(l),p=we(u,o.shape,a,d,i,c,!1,h),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:b,inHeight:x,inWidth:y,outChannels:w,outHeight:I,outWidth:C,strideHeight:S,strideWidth:T}=p,v=m-1-p.padInfo.top,$=g-1-p.padInfo.left,k=p.dataFormat==="channelsLast",R=pt(p.inShape),F=pt(r.shape),[B,M,z]=pt(o.shape),j=R[0],V=k?R[1]:R[2],q=k?R[2]:1,X=k?1:R[1],Z=F[0],Q=k?F[1]:F[2],J=k?F[2]:1,ot=k?1:F[1],nt=t.makeOutput(p.inShape,"float32"),ut=t.dataIdMap.get(nt.dataId).id,xt=t.dataIdMap.get(r.dataId).id,dt=t.dataIdMap.get(o.dataId).id;return EI(xt,dt,f,m,g,x,y,b,I,C,w,S,T,v,$,B,M,z,j,V,q,X,Z,Q,J,ot,ut),nt}const xX={kernelName:Bo,backendName:"wasm",setupFunc:gX,kernelFunc:bX};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let RI;function yX(n){RI=n.wasm.cwrap(zo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function wX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:l}=s;if(r.dtype!=="float32")throw new Error(`Tensor x must have dtype float32, got ${r.dtype}`);if(o.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${o.dtype}`);const c=ns(r.shape,o.shape,a,l,i),u=e.makeOutput(c.outShape,r.dtype);return RI(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(u.dataId).id,c.batchSize,c.inDepth,c.inHeight,c.inWidth,c.inChannels,c.outDepth,c.outHeight,c.outWidth,c.outChannels,c.strideDepth,c.strideHeight,c.strideWidth,c.dilationDepth,c.dilationHeight,c.dilationWidth,c.filterDepth,c.filterHeight,c.filterWidth,c.padInfo.front,c.padInfo.top,c.padInfo.left),u}const IX={kernelName:zo,backendName:"wasm",setupFunc:yX,kernelFunc:wX};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let AI;function kX(n){AI=n.wasm.cwrap(Pi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function CX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,dy:o}=t,{strides:a,pad:i,filterShape:l}=s;if(r.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${r.dtype}`);if(o.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${o.dtype}`);const c=ns(r.shape,l,a,1,i),u=e.makeOutput(c.filterShape,o.dtype);return AI(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(u.dataId).id,c.batchSize,c.inDepth,c.inHeight,c.inWidth,c.inChannels,c.outDepth,c.outHeight,c.outWidth,c.outChannels,c.strideDepth,c.strideHeight,c.strideWidth,c.dilationDepth,c.dilationHeight,c.dilationWidth,c.filterDepth,c.filterHeight,c.filterWidth,c.padInfo.front,c.padInfo.top,c.padInfo.left),u}const $X={kernelName:Pi,backendName:"wasm",setupFunc:kX,kernelFunc:CX};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let DI;function vX(n){DI=n.wasm.cwrap(Bi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function SX(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,filter:o}=t,{pad:a,strides:i,inputShape:l}=s;if(r.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${r.dtype}`);if(o.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${o.dtype}`);const c=ns(l,o.shape,i,1,a),u=e.makeOutput(c.inShape,r.dtype);return DI(e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(u.dataId).id,c.batchSize,c.inDepth,c.inHeight,c.inWidth,c.inChannels,c.outDepth,c.outHeight,c.outWidth,c.outChannels,c.strideDepth,c.strideHeight,c.strideWidth,c.dilationDepth,c.dilationHeight,c.dilationWidth,c.filterDepth,c.filterHeight,c.filterWidth,c.padInfo.front,c.padInfo.top,c.padInfo.left),u}const NX={kernelName:Bi,backendName:"wasm",setupFunc:vX,kernelFunc:SX};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TX=zt(Wo);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _X=zt(Vo);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var gm;(function(n){n[n.bilinear=0]="bilinear",n[n.nearest=1]="nearest"})(gm||(gm={}));let FI;function EX(n){FI=n.wasm.cwrap(Wi,null,["number","number","number","number","array","number","number","number","number","number"])}function RX(n){const{backend:t,inputs:e,attrs:s}=n,{method:r,extrapolationValue:o,cropSize:a}=s,{image:i,boxes:l,boxInd:c}=e,u=l.shape[0],[d,h]=a,p=[u,d,h,i.shape[3]];let f=t.dataIdMap.get(i.dataId),m;i.dtype!=="float32"&&(m=kr({backend:t,inputs:{x:i},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));const g=f.id,b=t.dataIdMap.get(l.dataId).id,x=t.dataIdMap.get(c.dataId).id,y=t.makeOutput(p,"float32"),w=t.dataIdMap.get(y.dataId).id,I=new Uint8Array(new Int32Array(i.shape).buffer);return FI(g,b,x,u,I,d,h,gm[r],o,w),m!=null&&t.disposeData(m.dataId),y}const AX={kernelName:Wi,backendName:"wasm",setupFunc:EX,kernelFunc:RX};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let MI;function DX(n){MI=n.wasm.cwrap(zi,null,["number","number","number","number","number","number"])}function FX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:a,reverse:i}=s,l=r.shape.length;N(r.dtype==="float32"||r.dtype==="int32",()=>`cumprod does not support ${r.dtype} tensors in the WASM backend`);const c=ue([o],l);let u=r;c!==null&&(u=wr({inputs:{x:r},attrs:{perm:c},backend:e}));const d=se(1,l)[0];ie("cumprod",[d],l);const h=e.makeOutput(u.shape,u.dtype),p=u.shape[d],f=e.dataIdMap.get(u.dataId).id,m=e.dataIdMap.get(h.dataId).id;MI(f,a?1:0,i?1:0,p,m,jt[r.dtype]);let g=h;if(c!==null){const b=xs(c);g=wr({inputs:{x:h},attrs:{perm:b},backend:e}),e.disposeData(u.dataId),e.disposeData(h.dataId)}return g}const MX={kernelName:zi,backendName:"wasm",setupFunc:DX,kernelFunc:FX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let OI;function OX(n){OI=n.wasm.cwrap(Uo,null,["number","number","number","number","number","number"])}function LX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{axis:o,exclusive:a,reverse:i}=s,l=r.shape.length;N(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);const c=ue([o],l);let u=r;c!==null&&(u=wr({inputs:{x:r},attrs:{perm:c},backend:e}));const d=se(1,l)[0];ie("cumsum",[d],l);const h=e.makeOutput(u.shape,u.dtype),p=u.shape[d],f=e.dataIdMap.get(u.dataId).id,m=e.dataIdMap.get(h.dataId).id;OI(f,a?1:0,i?1:0,p,m,jt[r.dtype]);let g=h;if(c!==null){const b=xs(c);g=wr({inputs:{x:h},attrs:{perm:b},backend:e}),e.disposeData(u.dataId),e.disposeData(h.dataId)}return g}const PX={kernelName:Uo,backendName:"wasm",setupFunc:OX,kernelFunc:LX};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let LI;function BX(n){LI=n.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])}function zX(n){const{backend:t,inputs:e,attrs:s}=n,{x:r,weights:o}=e,{size:a,binaryOutput:i}=s,l=o.shape.reduce((h,p)=>h*p,1)!==0,c=r.shape.length===1?[a]:[r.shape[0],a],u=t.makeOutput(c,o.dtype);function d(h){return t.dataIdMap.get(h.dataId).id}return LI(d(r),new Uint8Array(new Int32Array(r.shape).buffer),r.shape.length,a,l,d(o),jt[o.dtype],i,d(u)),u}const WX={kernelName:$l,backendName:"wasm",setupFunc:BX,kernelFunc:zX};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let PI;function VX(n){PI=n.wasm.cwrap(Vi,null,["number","number","number","array","number","array","array","number","number"])}function UX(n){const{backend:t,inputs:e,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:a}=s,i=r.shape[0],l=a==="NHWC"?r.shape[1]:r.shape[2],c=a==="NHWC"?r.shape[2]:r.shape[3],u=a==="NHWC"?r.shape[3]:r.shape[1],d=l*o,h=c*o,p=u/(o*o),f=a==="NHWC"?[i,d,h,p]:[i,p,d,h],m=t.makeOutput(f,"float32"),b=t.dataIdMap.get(r.dataId).id,x=new Uint8Array(new Int32Array(pt(r.shape)).buffer),y=new Uint8Array(new Int32Array(f).buffer),w=new Uint8Array(new Int32Array(pt(f)).buffer),I=t.dataIdMap.get(m.dataId).id;return PI(b,o,a==="NHWC"?1:0,x,r.shape.length-1,y,w,f.length,I),m}const GX={kernelName:Vi,backendName:"wasm",setupFunc:VX,kernelFunc:UX};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let BI;function HX(n){BI=n.wasm.cwrap(Go,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function jX(n){const{inputs:t,attrs:e,backend:s}=n,{x:r,filter:o}=t,a=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(o.dataId).id,{strides:l,dilations:c,pad:u,dimRoundingMode:d}=e,h=c??[1,1],p=we(r.shape,o.shape,l,h,u,d,!0),f=p.filterHeight,m=p.filterWidth,g=p.padInfo.top,b=p.padInfo.right,x=p.padInfo.bottom,y=p.padInfo.left,w=p.dilationHeight,I=p.dilationWidth,C=p.strideHeight,S=p.strideWidth,T=p.inChannels,v=p.outChannels,$=p.padInfo.type==="SAME"?1:0;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);const k=s.makeOutput(p.outShape,"float32"),R=s.dataIdMap.get(k.dataId).id;return BI(a,r.shape[0],r.shape[1],r.shape[2],i,f,m,g,b,x,y,$,w,I,C,S,T,v,R),k}const qX={kernelName:Go,backendName:"wasm",setupFunc:HX,kernelFunc:jX};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let zI;function KX(n){zI=n.wasm.cwrap("Diag",null,["number","number","number","number"])}function XX(n){const{inputs:t,backend:e}=n,{x:s}=t,r=L(s.shape),o=e.makeOutput([...s.shape,...s.shape],s.dtype);return zI(e.dataIdMap.get(s.dataId).id,jt[s.dtype],r,e.dataIdMap.get(o.dataId).id),o}const YX={kernelName:nh,backendName:"wasm",setupFunc:KX,kernelFunc:XX};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let WI;function ZX(n){WI=n.wasm.cwrap(Ho,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function JX(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o}=t,{strides:a,pad:i,dilations:l}=s;if(r.dtype!==o.dtype)throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${r.dtype} and ${o.dtype}`);const c=sr(r.shape,o.shape,a,i,"NHWC",l),u=e.makeOutput(c.outShape,r.dtype);return WI(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(u.dataId).id,jt[r.dtype],c.batchSize,c.inChannels,c.inHeight,c.inWidth,c.outHeight,c.outWidth,c.strideHeight,c.strideWidth,c.dilationHeight,c.dilationWidth,c.filterHeight,c.filterWidth,c.padInfo.top,c.padInfo.left),u}const QX={kernelName:Ho,backendName:"wasm",setupFunc:ZX,kernelFunc:JX};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let VI;function t5(n){VI=n.wasm.cwrap(Gi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function e5(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,dy:a}=t,{strides:i,pad:l,dilations:c}=s;if(r.dtype!==o.dtype||r.dtype!==a.dtype)throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${r.dtype}, ${o.dtype}, and ${a.dtype}`);const u=sr(r.shape,o.shape,i,l,"NHWC",c),d=e.makeOutput(o.shape,o.dtype);return VI(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(a.dataId).id,e.dataIdMap.get(d.dataId).id,jt[r.dtype],u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.filterHeight,u.filterWidth,u.padInfo.top,u.padInfo.left),d}const n5={kernelName:Gi,backendName:"wasm",setupFunc:t5,kernelFunc:e5};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let UI;function s5(n){UI=n.wasm.cwrap(Ui,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function r5(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,filter:o,dy:a}=t,{strides:i,pad:l,dilations:c}=s;if(r.dtype!==o.dtype||r.dtype!==a.dtype)throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${r.dtype}, ${o.dtype}, and ${a.dtype}`);const u=sr(r.shape,o.shape,i,l,"NHWC",c),d=e.makeOutput(r.shape,r.dtype);return UI(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(a.dataId).id,e.dataIdMap.get(d.dataId).id,jt[r.dtype],u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.filterHeight,u.filterWidth,u.padInfo.top,u.padInfo.left),d}const o5={kernelName:Ui,backendName:"wasm",setupFunc:s5,kernelFunc:r5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a5=zt(qo);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let GI;function i5(n){GI=n.wasm.cwrap(Hi,null,["number","number","number"])}function u5(n){const{inputs:t,backend:e}=n,{dy:s,y:r}=t,o=e.makeOutput(r.shape,"float32"),a=i=>e.dataIdMap.get(i.dataId).id;return GI(a(r),a(s),a(o)),o}const l5={kernelName:Hi,backendName:"wasm",setupFunc:i5,kernelFunc:u5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c5=Se(ji,!1,"bool");/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d5=zt(Ko);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h5=zt(Xo,"float32");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bm(n){const{inputs:t,attrs:e,backend:s}=n,{input:r}=t,{dim:o}=e,a=r.shape.length,i=r.shape.slice();let l=o;return o<0&&(N(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+o+1),i.splice(l,0,1),mn({inputs:{x:r},backend:s,attrs:{shape:i}})}const p5={kernelName:qi,backendName:"wasm",kernelFunc:bm};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f5=zt(Yo,"float32");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HI(n){const{attrs:{shape:t,value:e},backend:s}=n;let{attrs:{dtype:r}}=n;r=r||Sr(e);const o=s.makeOutput(t,r);return s.typedArrayFromHeap(o).fill(e),o}const m5={kernelName:vl,backendName:"wasm",kernelFunc:HI};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let jI;function g5(n){jI=n.wasm.cwrap(Ki,null,["number","number","number","number","number","number"])}function b5(n){const{inputs:t,backend:e}=n,{image:s}=t,r=e.makeOutput(s.shape,s.dtype),o=e.dataIdMap.get(s.dataId).id,a=e.dataIdMap.get(r.dataId).id,[i,l,c,u]=s.shape;return jI(o,i,l,c,u,a),r}const x5={kernelName:Ki,backendName:"wasm",kernelFunc:b5,setupFunc:g5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y5=zt(Zo);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w5=Se(Jo);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let qI;function I5(n){qI=n.wasm.cwrap(Qo,null,["number","number","number","number","number","number","number"])}function k5(n){const{backend:t,inputs:e,attrs:s}=n,{varianceEpsilon:r}=s,{x:o,mean:a,variance:i,offset:l,scale:c}=e,u=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(a.dataId).id,h=t.dataIdMap.get(i.dataId).id,p=l!=null?t.dataIdMap.get(l.dataId).id:0,f=c!=null?t.dataIdMap.get(c.dataId).id:0,m=t.makeOutput(o.shape,o.dtype);if(L(o.shape)===0)return m;const g=t.dataIdMap.get(m.dataId).id;return qI(u,d,h,p,f,r,g),m}const C5={kernelName:Qo,backendName:"wasm",setupFunc:I5,kernelFunc:k5};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let KI;function $5(n){KI=n.wasm.cwrap(Ha,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function v5(n){const{inputs:t,attrs:e,backend:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dataFormat:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=e,m=we(r.shape,o.shape,l,u,c,h),g=fl[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);const b=s.dataIdMap.get(r.dataId).id,x=s.dataIdMap.get(o.dataId).id,y=m.outChannels;let w=0;if(a!=null){const J=s.dataIdMap.get(a.dataId);if(J.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${J.shape.length}.`);if(J.shape[0]!==y)throw new Error(`FusedConv2D bias shape (${J.shape}) does not match the number of output channels (${y})`);w=J.id}const I=m.filterHeight,C=m.filterWidth,S=m.padInfo.top,T=m.padInfo.right,v=m.padInfo.bottom,$=m.padInfo.left,k=m.dilationHeight,R=m.dilationWidth,F=m.strideHeight,B=m.strideWidth,M=m.inChannels,z=m.padInfo.type==="SAME"?1:0,j=m.batchSize,V=m.inHeight,q=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const X=s.makeOutput(m.outShape,"float32"),Z=s.dataIdMap.get(X.dataId).id,Q=i==null?0:s.dataIdMap.get(i.dataId).id;return KI(b,j,V,q,x,I,C,w,S,T,v,$,z,k,R,F,B,M,y,g,Q,f||0,Z),X}const S5={kernelName:Ha,backendName:"wasm",setupFunc:$5,kernelFunc:v5};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let XI;function N5(n){XI=n.wasm.cwrap(Bl,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function T5(n){const{inputs:t,attrs:e,backend:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=t,{strides:l,pad:c,dilations:u,dataFormat:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=e,m=we(r.shape,o.shape,l,u,c,h,!0),g=fl[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const b=s.dataIdMap.get(r.dataId).id,x=s.dataIdMap.get(o.dataId).id,y=m.outChannels;let w=0;if(a!=null){const J=s.dataIdMap.get(a.dataId);if(J.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${J.shape.length}.`);if(J.shape[0]!==y)throw new Error(`FusedDepthwiseConv2D bias shape (${J.shape}) does not match the number of output channels (${y})`);w=J.id}const I=m.filterHeight,C=m.filterWidth,S=m.padInfo.top,T=m.padInfo.right,v=m.padInfo.bottom,$=m.padInfo.left,k=m.dilationHeight,R=m.dilationWidth,F=m.strideHeight,B=m.strideWidth,M=m.inChannels,z=m.padInfo.type==="SAME"?1:0,j=m.batchSize,V=m.inHeight,q=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const X=s.makeOutput(m.outShape,"float32"),Z=s.dataIdMap.get(X.dataId).id,Q=i==null?0:s.dataIdMap.get(i.dataId).id;return XI(b,j,V,q,x,I,C,w,S,T,v,$,z,k,R,F,B,M,y,g,Q,f||0,Z),X}const _5={kernelName:Bl,backendName:"wasm",setupFunc:N5,kernelFunc:T5};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let YI;function E5(n){YI=n.wasm.cwrap(Sl,null,["number","number","number","number","number","number","array","number"])}function R5(n){const{backend:t,inputs:e}=n,{params:s,indices:r}=e,[o,a,i,l]=hc(s,r),c=t.makeOutput(o,s.dtype);if(a===0)return c;const u=r.shape,d=u[u.length-1],p=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(l).buffer),b=t.dataIdMap.get(c.dataId).id;return YI(p,jt[s.dtype],m,a,d,i,g,b),c}const A5={kernelName:Sl,backendName:"wasm",setupFunc:E5,kernelFunc:R5};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ZI;function D5(n){ZI=n.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function F5(n){const{backend:t,inputs:e,attrs:s}=n,{x:r,indices:o}=e,{axis:a,batchDims:i}=s,l=Et(a,r.shape)[0],c=t.readSync(o.dataId),u=r.shape[l];for(let v=0;v<c.length;++v){const $=c[v];N($<=u-1&&$>=0,()=>`GatherV2: the index value ${$} is not in [0, ${u-1}]`)}const d=vc(r,o,l,i),h=mn({inputs:{x:r},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),p=L(o.shape),f=mn({inputs:{x:o},attrs:{shape:[d.batchSize,p/d.batchSize]},backend:t}),m=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],g=t.makeOutput(m,r.dtype);if(L(r.shape)===0)return g;const b=h.shape.length-1,y=t.dataIdMap.get(h.dataId).id,I=t.dataIdMap.get(f.dataId).id,C=t.dataIdMap.get(g.dataId).id,S=new Uint8Array(new Int32Array(pt(h.shape)).buffer),T=new Uint8Array(new Int32Array(pt(m)).buffer);return ZI(y,jt[r.dtype],S,b,I,d.batchSize,T,C),t.disposeData(h.dataId),t.disposeData(f.dataId),g.shape=d.outputShape,g}const M5={kernelName:Xi,backendName:"wasm",setupFunc:D5,kernelFunc:F5};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O5=Se(Yi,!1,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L5=Se(ta,!1,"bool");/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P5=zt(na,"bool");/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B5=zt(sa,"bool");/**
 * @license
 * Copyright 2022 The TensorFlow Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z5=zt(ra,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let JI;function W5(n){JI=n.wasm.cwrap(oa,null,["number","number","number","number"])}function V5(n){const{inputs:{x:t},attrs:{alpha:e},backend:s}=n,r=s.dataIdMap.get(t.dataId).id,o=s.makeOutput(t.shape,"float32");if(L(t.shape)!==0){const a=s.dataIdMap.get(o.dataId).id;JI(r,jt[t.dtype],e,a)}return o}const U5={kernelName:oa,backendName:"wasm",setupFunc:W5,kernelFunc:V5};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G5=Se(Zi,!1,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H5=Se(Ji,!1,"bool");/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let QI;function j5(n){QI=n.wasm.cwrap(Qi,null,["number","number","number","number"])}function q5(n){const{attrs:t,backend:e}=n,{start:s,stop:r,num:o}=t,a=Math.floor(o),i=e.makeOutput([a],"float32");return QI(e.dataIdMap.get(i.dataId).id,s,r,a),i}const K5={kernelName:Qi,backendName:"wasm",setupFunc:j5,kernelFunc:q5};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X5=zt(aa);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y5=zt(ia);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z5=Se(tu,!1,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J5=zt(eu);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q5=Se(nu,!1,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t8=Se(EC,!1,"bool");/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let tk;function e8(n){tk=n.wasm.cwrap(ua,null,["number","number","number","number","number","number","number"])}function n8(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{depthRadius:o,bias:a,alpha:i,beta:l}=s;if(r.dtype!=="float32")throw new Error("LRN error: x must have dtype float32");const c=e.makeOutput(r.shape,r.dtype);return tk(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(c.dataId).id,r.shape[3],o,a,i,l),c}const s8={kernelName:ua,backendName:"wasm",setupFunc:e8,kernelFunc:n8};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ek;function r8(n){ek=n.wasm.cwrap(su,null,["number","number","number","number","number","number","number","number","number"])}function o8(n){const{inputs:t,backend:e,attrs:s}=n,{x:r,y:o,dy:a}=t,{depthRadius:i,bias:l,alpha:c,beta:u}=s;if(r.dtype!=="float32"||o.dtype!=="float32"||a.dtype!=="float32")throw new Error("LRNGrad error: x, y, and dy must have dtype float32");const d=e.makeOutput(r.shape,r.dtype);return ek(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(a.dataId).id,e.dataIdMap.get(d.dataId).id,a.shape[3],i,l,c,u),d}const a8={kernelName:su,backendName:"wasm",setupFunc:r8,kernelFunc:o8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let nk;function i8(n){nk=n.wasm.cwrap(la,null,["number","number","number","number"])}function u8(n){const{backend:t,inputs:e,attrs:s}=n,{reductionIndices:r,keepDims:o}=s,{x:a}=e;let l=t.dataIdMap.get(a.dataId).id,c=a;const{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=Ir(a,r,t);if(p){const y=t.dataIdMap.get(u.dataId).id;c=u,l=y}const f=c.shape.length;ie("max",d,f);const[m,g]=he(c.shape,d),b=L(g),x=t.makeOutput(m,a.dtype);if(L(c.shape)!==0){const y=t.dataIdMap.get(x.dataId).id;nk(l,jt[a.dtype],b,y)}if(p&&t.disposeData(u.dataId),o){const y=ee(x.shape,h);x.shape=y}return x}const l8={kernelName:la,backendName:"wasm",setupFunc:i8,kernelFunc:u8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c8=Se(ca);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let sk;function d8(n){sk=n.wasm.cwrap(da,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function h8(n){const{inputs:t,attrs:e,backend:s}=n,r=t.x,o=s.dataIdMap.get(r.dataId).id;N(r.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`);const{filterSize:a,strides:i,pad:l,dimRoundingMode:c}=e,u=Ye(r.shape,a,i,1,l,c),d=u.filterHeight,h=u.filterWidth,p=u.padInfo.top,f=u.padInfo.right,m=u.padInfo.bottom,g=u.padInfo.left,b=u.dilationHeight,x=u.dilationWidth,y=u.strideHeight,w=u.strideWidth,I=u.inChannels,C=u.outChannels;if(u.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${u.dataFormat}'. Please use 'channelsLast'.`);const S=s.makeOutput(u.outShape,"float32"),T=s.dataIdMap.get(S.dataId).id;return sk(o,r.shape[0],r.shape[1],r.shape[2],d,h,p,f,m,g,b,x,y,w,I,C,T),S}const p8={kernelName:da,backendName:"wasm",setupFunc:d8,kernelFunc:h8};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let rk;function f8(n){rk=n.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function m8(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:l,dataFormat:c}=s,u=Tn(r.shape,o,a,1,i,l,c),d=e.makeOutput(u.outShape,r.dtype);return rk(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(d.dataId).id,u.batchSize,u.inChannels,u.inDepth,u.inHeight,u.inWidth,u.outDepth,u.outHeight,u.outWidth,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.effectiveFilterDepth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}const g8={kernelName:ru,backendName:"wasm",setupFunc:f8,kernelFunc:m8};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ok;function b8(n){ok=n.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function x8(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,{filterSize:a,strides:i,pad:l,dimRoundingMode:c}=s,u=Tn(o.shape,a,i,1,l,c),d=e.makeOutput(o.shape,o.dtype);return ok(e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(d.dataId).id,u.batchSize,u.inChannels,u.inDepth,u.inHeight,u.inWidth,u.outDepth,u.outHeight,u.outWidth,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.effectiveFilterDepth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}const y8={kernelName:Tl,backendName:"wasm",setupFunc:b8,kernelFunc:x8};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ak;function w8(n){ak=n.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function I8(n){const{inputs:t,backend:e,attrs:s}=n,{dy:r,input:o}=t,{filterSize:a,strides:i,pad:l,dimRoundingMode:c}=s,u=Ye(o.shape,a,i,1,l,c),d=e.makeOutput(o.shape,o.dtype);return ak(e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(d.dataId).id,u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.top,u.padInfo.left),d}const k8={kernelName:Nl,backendName:"wasm",setupFunc:w8,kernelFunc:I8};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ik;function C8(n){ik=n.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function $8(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{filterSize:o,strides:a,pad:i,includeBatchInIndex:l}=s;N(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const c=[1,1];N(We(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const u=Ye(r.shape,o,a,[1,1],i),d=e.makeOutput(u.outShape,r.dtype),h=e.makeOutput(u.outShape,"int32");return ik(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(d.dataId).id,e.dataIdMap.get(h.dataId).id,jt[r.dtype],l,u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.top,u.padInfo.left),[d,h]}const v8={kernelName:ih,backendName:"wasm",setupFunc:C8,kernelFunc:$8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let uk;function S8(n){uk=n.wasm.cwrap(ha,null,["number, number, number"])}function N8(n){const{backend:t,inputs:e,attrs:s}=n,{axis:r,keepDims:o}=s,{x:a}=e,i=t.dataIdMap.get(a.dataId).id;let l=i,c=a;const{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=Ir(a,r,t);let f=d;if(p){const w=t.dataIdMap.get(u.dataId).id;w!==i&&(c=u,l=w,f=se(f.length,c.shape.length))}ie("mean",f,c.shape.length);const[m,g]=he(c.shape,f),b=L(g);let x=c;c.dtype!=="float32"&&(x=kr({backend:t,inputs:{x:c},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(x.dataId).id);const y=t.makeOutput(m,"float32");if(L(c.shape)!==0){const w=t.dataIdMap.get(y.dataId).id;uk(l,b,w)}if(p&&t.disposeData(u.dataId),o){const w=ee(y.shape,h);y.shape=w}return c.dtype!=="float32"&&t.disposeData(x.dataId),y}const T8={kernelName:ha,backendName:"wasm",setupFunc:S8,kernelFunc:N8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let lk;function _8(n){lk=n.wasm.cwrap(pa,null,["number","number","number","number"])}function E8(n){const{backend:t,inputs:e,attrs:s}=n,{axis:r,keepDims:o}=s,{x:a}=e,i=t.dataIdMap.get(a.dataId).id;let l=i,c=a;const{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=Ir(a,r,t);if(p){const y=t.dataIdMap.get(u.dataId).id;y!==i&&(c=u,l=y)}const f=c.shape.length;ie("min",d,f);const[m,g]=he(c.shape,d),b=L(g),x=t.makeOutput(m,c.dtype);if(L(c.shape)!==0){const y=t.dataIdMap.get(x.dataId).id;lk(l,jt[a.dtype],b,y)}if(p&&t.disposeData(u.dataId),o){const y=ee(x.shape,h);x.shape=y}return x}const R8={kernelName:pa,backendName:"wasm",setupFunc:_8,kernelFunc:E8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A8=Se(fa);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var xm;(function(n){n[n.reflect=0]="reflect",n[n.symmetric=1]="symmetric"})(xm||(xm={}));let ck;function D8(n){ck=n.wasm.cwrap(ma,null,["number","array","number","number","array","array","number","number"])}function F8(n){const{inputs:{x:t},backend:e,attrs:{paddings:s,mode:r}}=n,o=s.map((f,m)=>f[0]+t.shape[m]+f[1]),a=e.dataIdMap.get(t.dataId).id,i=e.makeOutput(o,t.dtype),l=e.dataIdMap.get(i.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),u=s.map(f=>f[0]),d=s.map(f=>f[1]),h=new Uint8Array(new Int32Array(u).buffer),p=new Uint8Array(new Int32Array(d).buffer);return ck(a,c,t.shape.length,jt[t.dtype],h,p,xm[r],l),i}const M8={kernelName:ma,backendName:"wasm",kernelFunc:F8,setupFunc:D8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let dk;function O8(n){dk=n.wasm.cwrap(Ba,null,["number","number","number","number"])}function hk(n){const{backend:t,inputs:{logits:e},attrs:{dim:s}}=n,r=t.dataIdMap.get(e.dataId).id,o=t.makeOutput(e.shape,e.dtype),a=t.dataIdMap.get(o.dataId).id,i=e.shape[s],l=L(e.shape)/i;return L(o.shape)===0||dk(r,a,i,l),o}const L8={kernelName:Ba,backendName:"wasm",setupFunc:O8,kernelFunc:hk};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let pk;function P8(n){pk=n.wasm.cwrap(_l,null,["number","number","number","number","number","number"])}function B8(n){const{inputs:t,backend:e,attrs:s}=n,{logits:r}=t,{numSamples:o,seed:a,normalized:i}=s;if(r.dtype!=="float32")throw new Error(`Tensor logits must have dtype float32, got ${r.dtype}`);const l=i?r:hk({inputs:{logits:r},backend:e,attrs:{dim:r.shape.length-1}}),[c,u]=l.shape,d=e.makeOutput([c,o],"int32");return pk(e.dataIdMap.get(l.dataId).id,c,u,o,a,e.dataIdMap.get(d.dataId).id),i||e.disposeData(l.dataId),d}const z8={kernelName:_l,backendName:"wasm",setupFunc:P8,kernelFunc:B8};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W8=Se(ga);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V8=Se(ba);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U8=zt(ou);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ym(n,t){const e=new Int32Array(n.wasm.HEAPU8.buffer,t,4),s=e[0],r=e[1],o=e[2],a=e[3];return n.wasm._free(t),{pSelectedIndices:s,selectedSize:r,pSelectedScores:o,pValidOutputs:a}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fk;function G8(n){fk=n.wasm.cwrap(iu,"number",["number","number","number","number","number"])}function H8(n){const{backend:t,inputs:e,attrs:s}=n,{iouThreshold:r,maxOutputSize:o,scoreThreshold:a}=s,{boxes:i,scores:l}=e,c=t.dataIdMap.get(i.dataId).id,u=t.dataIdMap.get(l.dataId).id,d=fk(c,u,o,r,a),{pSelectedIndices:h,selectedSize:p,pSelectedScores:f,pValidOutputs:m}=ym(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([p],"int32",h)}const j8={kernelName:iu,backendName:"wasm",setupFunc:G8,kernelFunc:H8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let mk;function q8(n){mk=n.wasm.cwrap(uu,"number",["number","number","number","number","number","bool"])}function K8(n){const{backend:t,inputs:e,attrs:s}=n,{iouThreshold:r,maxOutputSize:o,scoreThreshold:a,padToMaxOutputSize:i}=s,{boxes:l,scores:c}=e,u=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(c.dataId).id,h=mk(u,d,o,r,a,i),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=ym(t,h);t.wasm._free(m);const b=t.makeOutput([f],"int32",p),x=t.makeOutput([],"int32",g);return[b,x]}const X8={kernelName:uu,backendName:"wasm",setupFunc:q8,kernelFunc:K8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let gk;function Y8(n){gk=n.wasm.cwrap(lu,"number",["number","number","number","number","number","number"])}function Z8(n){const{backend:t,inputs:e,attrs:s}=n,{iouThreshold:r,maxOutputSize:o,scoreThreshold:a,softNmsSigma:i}=s,{boxes:l,scores:c}=e,u=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(c.dataId).id,h=gk(u,d,o,r,a,i),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=ym(t,h);t.wasm._free(g);const b=t.makeOutput([f],"int32",p),x=t.makeOutput([f],"float32",m);return[b,x]}const J8={kernelName:lu,backendName:"wasm",setupFunc:Y8,kernelFunc:Z8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q8=Se(au,!1,"bool");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bk;function tY(n){bk=n.wasm.cwrap(xa,null,["number","number","number","number","number"])}function eY(n){const{inputs:t,backend:e,attrs:s}=n,{indices:r}=t,{dtype:o,depth:a,onValue:i,offValue:l}=s,c=e.makeOutput([...r.shape,a],o),u=e.dataIdMap.get(c.dataId).id,h=e.dataIdMap.get(r.dataId).id;return bk(h,a,i,l,u),c}const nY={kernelName:xa,backendName:"wasm",setupFunc:tY,kernelFunc:eY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sY(n){const{inputs:{x:t},backend:e}=n,s=e.makeOutput(t.shape,t.dtype);return e.typedArrayFromHeap(s).fill(1),s}const rY={kernelName:cu,backendName:"wasm",kernelFunc:sY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oY(n){const{inputs:t,backend:e,attrs:s}=n,{axis:r}=s;if(t.length===1)return bm({inputs:{input:t[0]},backend:e,attrs:{dim:r}});const o=t[0].shape,a=t[0].dtype;t.forEach(u=>{Sn(o,u.shape,"All tensors passed to stack must have matching shapes"),N(a===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],l=t.map(u=>{const d=bm({inputs:{input:u},backend:e,attrs:{dim:r}});return i.push(d),d}),c=TI({inputs:l,backend:e,attrs:{axis:r}});return i.forEach(u=>e.disposeData(u.dataId)),c}const aY={kernelName:du,backendName:"wasm",kernelFunc:oY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let xk;function iY(n){xk=n.wasm.cwrap(ya,null,["number","array","number","number","array","array","number","number"])}function uY(n){const{inputs:{x:t},backend:e,attrs:{paddings:s,constantValue:r}}=n,o=s.map((m,g)=>m[0]+t.shape[g]+m[1]);if(L(t.shape)===0)return HI({backend:e,attrs:{shape:o,value:r,dtype:t.dtype}});const a=e.dataIdMap.get(t.dataId).id,i=e.makeOutput(o,t.dtype),c=e.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=s.map(m=>m[0]),h=s.map(m=>m[1]),p=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(h).buffer);return xk(a,u,t.shape.length,jt[t.dtype],p,f,r,c),i}const yk={kernelName:ya,backendName:"wasm",kernelFunc:uY,setupFunc:iY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lY=Se(wa);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let wk;function cY(n){wk=n.wasm.cwrap(Ia,null,["number","number","number"])}function dY(n){const{inputs:t,backend:e}=n,{x:s,alpha:r}=t,o=e.dataIdMap.get(s.dataId).id,a=e.dataIdMap.get(r.dataId).id;let i=o;const l=s;let c=l;l.dtype!=="float32"&&(c=kr({backend:e,inputs:{x:s},attrs:{dtype:"float32"}}),i=e.dataIdMap.get(c.dataId).id);const u=e.makeOutput(s.shape,"float32"),d=e.dataIdMap.get(u.dataId).id;return wk(i,a,d),l.dtype!=="float32"&&e.disposeData(c.dataId),u}const hY={kernelName:Ia,backendName:"wasm",setupFunc:cY,kernelFunc:dY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ik;function pY(n){Ik=n.wasm.cwrap(ka,null,["number","number","number","number"])}function fY(n){const{backend:t,inputs:e,attrs:s}=n,{axis:r,keepDims:o}=s,{x:a}=e,i=t.dataIdMap.get(a.dataId).id;let l=i,c=a;const{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=Ir(a,r,t);let f=d;if(p){const y=t.dataIdMap.get(u.dataId).id;y!==i&&(c=u,l=y,f=se(f.length,c.shape.length))}ie("prod",f,c.shape.length);const[m,g]=he(c.shape,f),b=L(g),x=t.makeOutput(m,c.dtype);if(L(c.shape)!==0){const y=t.dataIdMap.get(x.dataId).id;Ik(l,b,jt[x.dtype],y)}if(p&&t.disposeData(u.dataId),o){const y=ee(x.shape,h);x.shape=y}return x}const mY={kernelName:ka,backendName:"wasm",setupFunc:pY,kernelFunc:fY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gY={kernelName:El,backendName:"wasm",kernelFunc:n=>{const{backend:t,attrs:e}=n,{start:s,stop:r,step:o,dtype:a}=e,i=Pf(s,r,o,a),l=t.makeOutput([i.length],a);return t.typedArrayFromHeap(l).set(i),l}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bY=Se(jo);/**
 * @license
 * Copyright 2022 The TensorFlow Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xY=zt(Ca);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yY=zt($a);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wY=zt(Na);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let kk;function IY(n){kk=n.wasm.cwrap(Sa,null,["number","number","number","number","number","number","number","number","number","number"])}function kY(n){const{backend:t,inputs:e,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:i}=s,[l,c]=i,[u,d,h,p]=r.shape,f=[u,l,c,p];let m=t.dataIdMap.get(r.dataId),g;m.dtype!=="float32"&&(g=kr({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));const b=m.id,x=t.makeOutput(f,"float32");if(L(r.shape)===0)return x;const y=t.dataIdMap.get(x.dataId).id;return kk(b,u,d,h,p,l,c,o?1:0,a?1:0,y),g!=null&&t.disposeData(g.dataId),x}const CY={kernelName:Sa,backendName:"wasm",setupFunc:IY,kernelFunc:kY};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ck;function $Y(n){Ck=n.wasm.cwrap(fu,null,["number","number","number","array","array","boolean"])}function vY(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:a}=s,i=e.makeOutput(r.shape,"float32");let l=e.dataIdMap.get(r.dataId),c;return l.dtype!=="float32"&&(c=kr({backend:e,inputs:{x:r},attrs:{dtype:"float32"}}),l=e.dataIdMap.get(c.dataId)),Ck(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(i.dataId).id,new Uint8Array(new Int32Array(r.shape).buffer),new Uint8Array(new Int32Array(o.shape).buffer),a),c!=null&&e.disposeData(c.dataId),i}const SY={kernelName:fu,backendName:"wasm",setupFunc:$Y,kernelFunc:vY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let $k;function NY(n){$k=n.wasm.cwrap(va,null,["number","number","number","number","number","number","number","number","number","number"])}function TY(n){const{backend:t,inputs:e,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:i}=s,[l,c]=i,[u,d,h,p]=r.shape,f=[u,l,c,p],m=t.makeOutput(f,"float32");if(L(r.shape)===0)return m;let g=t.dataIdMap.get(r.dataId),b;g.dtype!=="float32"&&(b=kr({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(b.dataId));const x=g.id,y=t.dataIdMap.get(m.dataId).id;return $k(x,u,d,h,p,l,c,o?1:0,a?1:0,y),b!=null&&t.disposeData(b.dataId),m}const _Y={kernelName:va,backendName:"wasm",setupFunc:NY,kernelFunc:TY};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let vk;function EY(n){vk=n.wasm.cwrap(pu,null,["number","number","number","array","array","boolean"])}function RY(n){const{inputs:t,backend:e,attrs:s}=n,{images:r,dy:o}=t,{alignCorners:a}=s,i=e.makeOutput(r.shape,"float32");let l=e.dataIdMap.get(r.dataId),c;return l.dtype!=="float32"&&(c=kr({backend:e,inputs:{x:r},attrs:{dtype:"float32"}}),l=e.dataIdMap.get(c.dataId)),vk(e.dataIdMap.get(r.dataId).id,e.dataIdMap.get(o.dataId).id,e.dataIdMap.get(i.dataId).id,new Uint8Array(new Int32Array(r.shape).buffer),new Uint8Array(new Int32Array(o.shape).buffer),a),c!=null&&e.disposeData(c.dataId),i}const AY={kernelName:pu,backendName:"wasm",setupFunc:EY,kernelFunc:RY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Sk;function DY(n){Sk=n.wasm.cwrap(Ta,null,["number","array","number","array","number","number"])}function FY(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{dims:o}=s,a=Et(o,r.shape);if(r.shape.length===0)return Cd({inputs:{x:r},backend:e});const i=e.makeOutput(r.shape,r.dtype),l=e.dataIdMap.get(r.dataId).id,c=e.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(a).buffer),d=new Uint8Array(new Int32Array(r.shape).buffer);Sk(l,u,a.length,d,r.shape.length,c);const h=mn({inputs:{x:i},attrs:{shape:r.shape},backend:e});return e.disposeData(i.dataId),h}const MY={kernelName:Ta,backendName:"wasm",kernelFunc:FY,setupFunc:DY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Nk;function OY(n){Nk=n.wasm.cwrap($u,null,["number","number","number","number","number","number","number","number","array","number","number"])}function LY(n){const{inputs:t,backend:e,attrs:s}=n,{image:r}=t,{radians:o,fillValue:a,center:i}=s,l=e.makeOutput(r.shape,r.dtype),c=e.dataIdMap.get(r.dataId).id,u=e.dataIdMap.get(l.dataId).id,[d,h,p,f]=r.shape,[m,g]=yc(i,h,p),b=a===0,x=255,y=typeof a=="number"?[a,a,a,b?0:x]:[...a,x],w=new Uint8Array(new Int32Array(y).buffer);return Nk(c,d,h,p,f,o,m,g,w,y.length,u),l}const PY={kernelName:$u,backendName:"wasm",kernelFunc:LY,setupFunc:OY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BY=zt(_a);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zY=zt(Ea);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Tk;function WY(n){Tk=n.wasm.cwrap(Rl,null,["number","number","number","number","number","number","array","number","number"])}function VY(n){const{backend:t,inputs:e,attrs:s}=n,{indices:r,updates:o}=e,{shape:a}=s,i=t.makeOutput(a,o.dtype);if(L(a)===0)return i;const{sliceRank:l,numUpdates:c,sliceSize:u,strides:d,outputSize:h}=ws(o,r,a),f=t.dataIdMap.get(r.dataId).id,g=t.dataIdMap.get(o.dataId).id,b=new Uint8Array(new Int32Array(d).buffer),x=t.dataIdMap.get(i.dataId).id;return Tk(f,g,jt[o.dtype],l,c,u,b,h,x),i}const UY={kernelName:Rl,backendName:"wasm",setupFunc:WY,kernelFunc:VY};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let _k;function GY(n){_k=n.wasm.cwrap(Dl,null,["number","number","number","number","number","number","bool","number"])}function HY(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:r,values:o}=t,{side:a}=s;if(r.dtype!==o.dtype)throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${r.dtype} and ${o.dtype}`);const i=e.makeOutput(o.shape,"int32");function l(c){return e.dataIdMap.get(c.dataId).id}return _k(l(r),l(o),r.shape[0],r.shape[1],o.shape[1],jt[r.dtype],a==="left",l(i)),i}const jY={kernelName:Dl,backendName:"wasm",setupFunc:GY,kernelFunc:HY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ek;function qY(n){Ek=n.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function KY(n){const{inputs:t,backend:e}=n,{condition:s,t:r,e:o}=t,a=e.dataIdMap.get(s.dataId).id,i=e.dataIdMap.get(r.dataId).id,l=e.dataIdMap.get(o.dataId).id,c=e.makeOutput(r.shape,r.dtype),u=e.dataIdMap.get(c.dataId).id,d=s.shape.length,h=r.shape.length,p=d===0||d>1||h===1?1:L(r.shape.slice(1));return Ek(a,i,l,p,u),c}const XY={kernelName:mu,backendName:"wasm",kernelFunc:KY,setupFunc:qY};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YY=zt(Ra);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Rk;function ZY(n){Rk=n.wasm.cwrap(Ma,null,["number","number"])}function JY(n){const{backend:t,inputs:{x:e}}=n,s=t.dataIdMap.get(e.dataId).id,r=t.makeOutput(e.shape,e.dtype),o=t.dataIdMap.get(r.dataId).id;return L(r.shape)===0||Rk(s,o),r}const QY={kernelName:"Sigmoid",backendName:"wasm",setupFunc:ZY,kernelFunc:JY};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t7=zt(Fa);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e7=zt(Aa);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n7=zt(Da);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s7=zt(Oa);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r7(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,{blockShape:o,paddings:a}=s,i=L(o),l=[[0,0]];l.push(...a);for(let C=1+o.length;C<r.shape.length;++C)l.push([0,0]);const c=yk.kernelFunc({inputs:{x:r},backend:e,attrs:{paddings:l,constantValue:0}}),u=Yr(c.shape,o,i,!1),d=Zr(u.length,o.length,!1),h=Jr(c.shape,o,i,!1),m=mn({inputs:{x:c},backend:e,attrs:{shape:u}}),x=wr({inputs:{x:m},backend:e,attrs:{perm:d}}),I=mn({inputs:{x},backend:e,attrs:{shape:h}});return e.disposeData(c.dataId),e.disposeData(m.dataId),e.disposeData(x.dataId),I}const o7={kernelName:bu,backendName:"wasm",kernelFunc:r7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ak;function a7(n){Ak=n.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function i7(n){const{backend:t,inputs:e}=n,{indices:s,values:r,denseShape:o,defaultValue:a}=e,i=s.shape[0],l=s.shape[1],c=t.readSync(o.dataId)[0],u=[i+c,l],d=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(a.dataId).id,f=t.makeOutput(u,s.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(u.slice(0,1),r.dtype),b=t.dataIdMap.get(g.dataId).id,x=t.makeOutput([c],"bool"),y=t.dataIdMap.get(x.dataId).id,w=t.makeOutput([i],s.dtype),I=t.dataIdMap.get(w.dataId).id,C=t.makeOutput([4],"int32"),S=t.dataIdMap.get(C.dataId).id,T=Ak(d,h,jt[r.dtype],i,c,l,p,m,b,y,I,S),v=t.readSync(C.dataId);let $;switch(v[0]){case 1:{$=Op(v[1]);break}case 2:{$=Lp(v[1],v[2]);break}case 3:$=Pp(v[1],v[2],v[3]);break;default:$=""}if(t.disposeData(C.dataId),$)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(x.dataId),t.disposeData(w.dataId),new Error($);let k=f,R=g;return T!==u[0]&&(k=bo({inputs:{x:f},attrs:{begin:0,size:[T,l]},backend:t}),R=bo({inputs:{x:g},attrs:{begin:0,size:T},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[k,R,x,w]}const u7={kernelName:lh,backendName:"wasm",setupFunc:a7,kernelFunc:i7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Dk;function l7(n){Dk=n.wasm.cwrap(Fl,null,["number","number","number","number","number","number","number"])}function c7(n){const{backend:t,inputs:e}=n,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=t.dataIdMap.get(s.dataId).id,i=t.dataIdMap.get(r.dataId).id,l=t.dataIdMap.get(o.dataId).id,c=s.shape[0],u=L(o.shape),d=t.makeOutput([c,u],s.dtype),h=t.dataIdMap.get(d.dataId).id,p=t.makeOutput([u],o.dtype),f=t.dataIdMap.get(p.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;Dk(a,i,l,c,h,f,g);const b=t.readSync(m.dataId);let x;switch(b[0]){case 0:{x=Bp(b[1],b[2]);break}case 1:{x=zp(b[1],b[2]);break}case 2:x=Wp();break;case 3:{const y=Array.from(t.readSync(r.dataId)),w=Array.from(t.readSync(p.dataId));x=Vp(y,w);break}case 4:{const y=Array.from(t.readSync(r.dataId)),w=Array.from(t.readSync(p.dataId));x=Up(y,w);break}default:x=""}if(t.disposeData(m.dataId),x)throw t.disposeData(d.dataId),t.disposeData(p.dataId),new Error(x);return[d,p]}const d7={kernelName:Fl,backendName:"wasm",setupFunc:l7,kernelFunc:c7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Fk;function Mk(n){Fk=n.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function Ok(n,t){const{backend:e,inputs:s}=n,{data:r,indices:o,segmentIds:a}=s,i=o.shape[0],l=e.readSync(a.dataId,i-1,i)[0],u=i>0?l+1:0;if(u<0)throw new Error(Bu());const d=r.shape.slice();d[0]=u;const h=e.dataIdMap.get(r.dataId).id,p=e.dataIdMap.get(o.dataId).id,f=e.dataIdMap.get(a.dataId).id,m=e.makeOutput(d,r.dtype),g=e.dataIdMap.get(m.dataId).id,b=e.makeOutput([4],"int32"),x=e.dataIdMap.get(b.dataId).id;Fk(h,jt[r.dtype],r.shape[0],p,f,g,x,t,0);const y=e.readSync(b.dataId);let w;switch(y[0]){case 0:{w=Bu();break}case 1:{w=Gp();break}case 2:w=Hp(y[1],y[2]);break;case 3:w=jp(y[1],y[2],y[3]);break;default:w=""}if(e.disposeData(b.dataId),w)throw e.disposeData(m.dataId),new Error(w);return m}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h7(n){return Ok(n,!0)}const p7={kernelName:ch,backendName:"wasm",setupFunc:Mk,kernelFunc:h7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f7(n){return Ok(n,!1)}const m7={kernelName:dh,backendName:"wasm",setupFunc:Mk,kernelFunc:f7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Lk;function g7(n){Lk=n.wasm.cwrap(Ml,null,["number","number","number","number","number","number","number","number","array","number","number"])}function b7(n){const{backend:t,inputs:e,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:a}=e,{outputShape:i}=s,l=t.makeOutput(i,a.dtype);if(L(i)===0)return l;const{sliceRank:c,numUpdates:u,sliceSize:d,strides:h,outputSize:p}=ws(o,r,i),f=t.dataIdMap.get(r.dataId).id,m=t.dataIdMap.get(o.dataId).id,g=t.dataIdMap.get(a.dataId).id,b=new Uint8Array(new Int32Array(h).buffer),x=t.dataIdMap.get(l.dataId).id;return Lk(f,m,o.shape.length,g,jt[a.dtype],c,u,d,b,p,x),l}const x7={kernelName:Ml,backendName:"wasm",setupFunc:g7,kernelFunc:b7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y7(n){const{inputs:t,attrs:e,backend:s}=n,{x:r}=t,{numOrSizeSplits:o,axis:a}=e,i=Et(a,r.shape)[0],l=$c(r,o,i),c=new Array(r.shape.length).fill(0),u=r.shape.slice();return l.map(d=>{const h=[...u];h[i]=d;const p=bo({inputs:{x:r},attrs:{begin:c,size:h},backend:s});return c[i]+=d,p})}const w7={kernelName:xu,backendName:"wasm",kernelFunc:y7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I7=zt(La);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k7=zt(Ol);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C7=Se(za);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Pk;function $7(n){Pk=n.wasm.cwrap(Er,null,["number","number","number","number"])}function v7(n){const{backend:t,inputs:e,attrs:s}=n,{alpha:r}=s,{x:o}=e,a=t.dataIdMap.get(o.dataId).id,i=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(i.dataId).id;return Pk(a,r,jt[o.dtype],l),i}const S7={kernelName:Er,backendName:"wasm",setupFunc:$7,kernelFunc:v7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Bk;function N7(n){Bk=n.wasm.cwrap(yu,null,["number","array","number","array","array","array","array","array","number","number"])}function T7(n){const{backend:t,inputs:e,attrs:s}=n,{x:r}=e,{begin:o,end:a,strides:i,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:x,end:y,strides:w}=gc(r.shape,o,a,i,l,c,u,d,h);let I;if(m)I=mn({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||b){N(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const C=pc(x,y,w),S=bo({inputs:{x:r},backend:t,attrs:{begin:x,size:C}});I=mn({inputs:{x:S},backend:t,attrs:{shape:f}}),t.disposeData(S.dataId)}else{const C=t.makeOutput(p,"float32"),S=t.dataIdMap.get(r.dataId).id,T=new Uint8Array(new Int32Array(pt(r.shape)).buffer),v=new Uint8Array(new Int32Array(x).buffer),$=new Uint8Array(new Int32Array(y).buffer),k=new Uint8Array(new Int32Array(w).buffer),R=new Uint8Array(new Int32Array(p).buffer),F=new Uint8Array(new Int32Array(pt(p)).buffer),B=t.dataIdMap.get(C.dataId).id;Bk(S,T,r.shape.length,v,$,k,R,F,p.length,B),I=mn({inputs:{x:C},backend:t,attrs:{shape:f}}),t.disposeData(C.dataId)}return I}const _7={kernelName:yu,backendName:"wasm",setupFunc:N7,kernelFunc:T7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E7(n){const{backend:t,inputs:e,attrs:s}=n,{data:r,dataSplits:o}=e,{separator:a,nGramWidths:i,leftPad:l,rightPad:c,padWidth:u,preserveShortSequences:d}=s,h=t.readSync(r.dataId),p=t.readSync(o.dataId),[f,m]=zf(h,p,a,i,l,c,u,d),g=t.makeOutput([f.length],"string"),b=t.dataIdMap.get(g.dataId);b.stringBytes=f;const x=t.makeOutput(o.shape,"int32");return t.typedArrayFromHeap(x).set(m),[g,x]}const R7={kernelName:ph,backendName:"wasm",kernelFunc:E7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A7(n){const{backend:t,inputs:e,attrs:s}=n,{input:r,delimiter:o}=e,{skipEmpty:a}=s,i=t.readSync(r.dataId),l=t.readSync(o.dataId),[c,u,d]=Wf(i,l[0],a),h=u.length,p=t.makeOutput([h,2],"int32");t.typedArrayFromHeap(p).set(c);const m=t.makeOutput([h],"string"),g=t.dataIdMap.get(m.dataId);g.stringBytes=u;const b=t.makeOutput([2],"int32");return t.typedArrayFromHeap(b).set(d),[p,m,b]}const D7={kernelName:fh,backendName:"wasm",kernelFunc:A7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F7(n){const{backend:t,inputs:e,attrs:s}=n,{input:r}=e,{numBuckets:o}=s,a=t.readSync(r.dataId),i=Vf(a,o),l=t.makeOutput(r.shape,"int32");return t.typedArrayFromHeap(l).set(i),l}const M7={kernelName:mh,backendName:"wasm",kernelFunc:F7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O7=Se(Wa);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let zk;function L7(n){zk=n.wasm.cwrap(Pa,null,["number","number","number","number"])}function P7(n){const{backend:t,inputs:e,attrs:s}=n,{axis:r,keepDims:o}=s,{x:a}=e,i=t.dataIdMap.get(a.dataId).id;let l=i,c=a;const{transposed:u,axes:d,originalAxes:h,inputWasTransposed:p}=Ir(a,r,t);let f=d;if(p){const y=t.dataIdMap.get(u.dataId).id;y!==i&&(c=u,l=y,f=se(f.length,c.shape.length))}ie("sum",f,c.shape.length);const[m,g]=he(c.shape,f),b=L(g),x=t.makeOutput(m,c.dtype);if(L(c.shape)!==0){const y=t.dataIdMap.get(x.dataId).id;zk(l,b,jt[x.dtype],y)}if(p&&t.disposeData(u.dataId),o){const y=ee(x.shape,h);x.shape=y}return x}const B7={kernelName:Pa,backendName:"wasm",setupFunc:L7,kernelFunc:P7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z7=zt(Va);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W7=zt(Ua);/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Wk;function V7(n){Wk=n.wasm.cwrap(Al,null,["number","number","number","number","number","number","array","number","number","number"])}function U7(n){const{backend:t,inputs:e,attrs:s}=n,{tensor:r,indices:o,updates:a}=e,i=t.makeOutput(r.shape,r.dtype);if(L(r.shape)===0)return i;const{sliceRank:l,numUpdates:c,sliceSize:u,strides:d,outputSize:h}=ws(a,o,r.shape),f=t.dataIdMap.get(o.dataId).id,g=t.dataIdMap.get(a.dataId).id,x=t.dataIdMap.get(r.dataId).id,y=new Uint8Array(new Int32Array(d).buffer),w=t.dataIdMap.get(i.dataId).id;return Wk(f,g,jt[a.dtype],l,c,u,y,h,w,x),i}const G7={kernelName:Al,backendName:"wasm",setupFunc:V7,kernelFunc:U7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Vk;function H7(n){Vk=n.wasm.cwrap(_r,null,["number","array","number","array","number","number"])}function j7(n){const{inputs:t,backend:e,attrs:s}=n,{x:r}=t,o=e.dataIdMap.get(r.dataId).id,{reps:a}=s,i=new Array(r.shape.length);for(let h=0;h<i.length;h++)i[h]=r.shape[h]*a[h];const l=new Uint8Array(new Int32Array(r.shape).buffer),c=new Uint8Array(new Int32Array(i).buffer),u=e.makeOutput(i,r.dtype),d=e.dataIdMap.get(u.dataId).id;return Vk(o,l,r.shape.length,c,i.length,jt[u.dtype],d),u}const q7={kernelName:_r,backendName:"wasm",setupFunc:H7,kernelFunc:j7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Uk;function K7(n){Uk=n.wasm.cwrap(wu,null,["number","array","number","number","number","bool","number","number"])}const X7={kernelName:wu,backendName:"wasm",setupFunc:K7,kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s}=n,{k:r,sorted:o}=e,a=t.dataIdMap.get(s.dataId).id,i=new Uint8Array(new Int32Array(s.shape).buffer),l=s.shape.slice();l[l.length-1]=r;const c=t.makeOutput(l,s.dtype),u=t.dataIdMap.get(c.dataId).id,d=t.makeOutput(l,"int32"),h=t.dataIdMap.get(d.dataId).id;return Uk(a,i,s.shape.length,jt[s.dtype],r,o,u,h),[c,d]}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Gk;function Y7(n){Gk=n.wasm.cwrap(Iu,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function Z7(n){const{backend:t,inputs:e,attrs:s}=n,{image:r,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:l,outputShape:c}=s,[u,d,h,p]=r.shape,[f,m]=c??[d,h],g=[u,f,m,p],b=new Uint8Array(new Int32Array(pt(r.shape)).buffer),x=new Uint8Array(new Int32Array(pt(g)).buffer),y=t.makeOutput(g,r.dtype),w=t.dataIdMap.get(y.dataId).id,C=t.dataIdMap.get(r.dataId).id,T=t.dataIdMap.get(o.dataId).id,v=a==="nearest"?1:2;let $;switch(i){case"constant":$=1;break;case"reflect":$=2;break;case"wrap":$=3;break;case"nearest":$=4;break;default:$=1;break}return Gk(C,T,o.shape[0]>1,u,f,m,p,h,d,b,r.shape.length-1,x,g.length-1,v,$,l,w),y}const J7={kernelName:Iu,backendName:"wasm",setupFunc:Y7,kernelFunc:Z7};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q7(n){const{inputs:t,attrs:e,backend:s}=n,{axis:r}=e,{x:o}=t,{outputValues:a,outputShape:i,indices:l}=Gf(s.readSync(o.dataId),r,o.shape,o.dtype);return[s.makeOutput(i,o.dtype,void 0,a),s.makeOutput([l.length],"int32",void 0,l)]}const t9={kernelName:Ll,backendName:"wasm",kernelFunc:Q7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e9(n){const{inputs:t,backend:e,attrs:s}=n,{value:r}=t;let{axis:o}=s;o<0&&(o+=r.shape.length);const a=r.shape[o],i=r.shape.length,l=new Array(i-1);let c=0;for(let p=0;p<i;p++)p!==o&&(l[c++]=r.shape[p]);const u=new Array(a),d=new Array(i).fill(0),h=r.shape.slice();h[o]=1;for(let p=0;p<u.length;p++)d[o]=p,u[p]=bo({inputs:{x:r},attrs:{begin:d,size:h},backend:e});return u.map(({dataId:p,dtype:f})=>({dataId:p,dtype:f,shape:l}))}const n9={kernelName:ku,backendName:"wasm",kernelFunc:e9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s9(n){const{inputs:{x:t},backend:e}=n,s=e.makeOutput(t.shape,t.dtype);return e.typedArrayFromHeap(s).fill(0),s}const r9={kernelName:Cu,backendName:"wasm",kernelFunc:s9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o9=[iK,uK,lK,cK,dK,fK,kK,vK,SK,NK,TK,_K,EK,RK,AK,MK,GK,PK,WK,KK,tX,sX,rX,aX,iX,uX,dX,hX,mX,xX,IX,$X,NX,TX,_X,AX,MX,PX,WX,GX,qX,YX,QX,n5,o5,a5,l5,c5,d5,h5,p5,f5,m5,x5,y5,w5,C5,S5,_5,A5,M5,O5,L5,mK,P5,B5,z5,U5,G5,H5,K5,Y5,X5,Z5,J5,Q5,t8,s8,a8,l8,c8,p8,g8,y8,k8,v8,T8,R8,A8,M8,z8,W8,V8,U8,j8,X8,J8,Q8,nY,rY,aY,yk,lY,hY,mY,gY,bY,xY,yY,wY,HK,CY,SY,_Y,AY,MY,PY,BY,zY,UY,jY,XY,YY,QY,t7,e7,n7,JK,L8,s7,o7,u7,d7,p7,m7,x7,w7,I7,k7,C7,S7,_7,R7,D7,M7,O7,B7,z7,W7,G7,q7,X7,J7,yK,t9,n9,r9];for(const n of o9)bh(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wm=H();wm.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch{return!1}}),wm.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(wm.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var Im={exports:{}},Hk;function a9(){return Hk||(Hk=1,function(n,t){var e=(()=>{var s=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(s=s||__filename),function(r){r=r||{};function o(){return V.buffer!=dt&&qt(V.buffer),yt}function a(){return V.buffer!=dt&&qt(V.buffer),Nt}function i(){return V.buffer!=dt&&qt(V.buffer),_t}function l(){return V.buffer!=dt&&qt(V.buffer),Bt}function c(){return V.buffer!=dt&&qt(V.buffer),Yt}var u=typeof r<"u"?r:{},d,h;u.ready=new Promise(function(E,U){d=E,h=U});var p;typeof process<"u"&&process.listeners&&(p={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var f=Object.assign({},u),m=(E,U)=>{throw U},g=typeof window=="object",b=typeof importScripts=="function",x=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",y=u.ENVIRONMENT_IS_PTHREAD||!1,w="";function I(E){return u.locateFile?u.locateFile(E,w):w+E}var C,S,T;function v(E){if(E instanceof js)return;M("exiting due to exception: "+E)}if(x){var $=or,k=or;b?w=k.dirname(w)+"/":w=__dirname+"/",C=(U,rt)=>(U=Cr(U)?new URL(U):k.normalize(U),$.readFileSync(U,rt?void 0:"utf8")),T=U=>{var rt=C(U,!0);return rt.buffer||(rt=new Uint8Array(rt)),rt},S=(U,rt,Ct)=>{U=Cr(U)?new URL(U):k.normalize(U),$.readFile(U,function(Rt,Dt){Rt?Ct(Rt):rt(Dt.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(U){if(!(U instanceof js))throw U}),process.on("unhandledRejection",function(U){throw U}),m=(U,rt)=>{if(ge())throw process.exitCode=U,rt;v(rt),process.exit(U)},u.inspect=function(){return"[Emscripten Module object]"};let E;try{E=or}catch(U){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),U}Km.Worker=E.Worker}else(g||b)&&(b?w=self.location.href:typeof document<"u"&&document.currentScript&&(w=document.currentScript.src),typeof s<"u"&&s&&(w=s),w.indexOf("blob:")!==0?w=w.substr(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1):w="",x||(C=E=>{var U=new XMLHttpRequest;return U.open("GET",E,!1),U.send(null),U.responseText},b&&(T=E=>{var U=new XMLHttpRequest;return U.open("GET",E,!1),U.responseType="arraybuffer",U.send(null),new Uint8Array(U.response)}),S=(E,U,rt)=>{var Ct=new XMLHttpRequest;Ct.open("GET",E,!0),Ct.responseType="arraybuffer",Ct.onload=()=>{if(Ct.status==200||Ct.status==0&&Ct.response){U(Ct.response);return}rt()},Ct.onerror=rt,Ct.send(null)}));x&&typeof performance>"u"&&(Km.performance=or.performance);var R=console.log.bind(console),F=console.warn.bind(console);x&&(R=E=>$.writeSync(1,E+`
`),F=E=>$.writeSync(2,E+`
`));var B=u.print||R,M=u.printErr||F;Object.assign(u,f),f=null,u.arguments&&u.arguments,u.thisProgram&&u.thisProgram,u.quit&&(m=u.quit);var z;u.wasmBinary&&(z=u.wasmBinary);var j=u.noExitRuntime||!0;typeof WebAssembly!="object"&&ps("no native wasm support detected");var V,q,X=!1,Z;function Q(E,U){E||ps(U)}var J=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function ot(E,U,rt){U>>>=0;for(var Ct=U+rt,Rt=U;E[Rt]&&!(Rt>=Ct);)++Rt;if(Rt-U>16&&E.buffer&&J)return J.decode(E.buffer instanceof SharedArrayBuffer?E.slice(U,Rt):E.subarray(U,Rt));for(var Dt="";U<Rt;){var ht=E[U++];if(!(ht&128)){Dt+=String.fromCharCode(ht);continue}var It=E[U++]&63;if((ht&224)==192){Dt+=String.fromCharCode((ht&31)<<6|It);continue}var ye=E[U++]&63;if((ht&240)==224?ht=(ht&15)<<12|It<<6|ye:ht=(ht&7)<<18|It<<12|ye<<6|E[U++]&63,ht<65536)Dt+=String.fromCharCode(ht);else{var Bn=ht-65536;Dt+=String.fromCharCode(55296|Bn>>10,56320|Bn&1023)}}return Dt}function nt(E,U){return E>>>=0,E?ot(a(),E,U):""}function ut(E,U,rt,Ct){if(rt>>>=0,!(Ct>0))return 0;for(var Rt=rt,Dt=rt+Ct-1,ht=0;ht<E.length;++ht){var It=E.charCodeAt(ht);if(It>=55296&&It<=57343){var ye=E.charCodeAt(++ht);It=65536+((It&1023)<<10)|ye&1023}if(It<=127){if(rt>=Dt)break;U[rt++>>>0]=It}else if(It<=2047){if(rt+1>=Dt)break;U[rt++>>>0]=192|It>>6,U[rt++>>>0]=128|It&63}else if(It<=65535){if(rt+2>=Dt)break;U[rt++>>>0]=224|It>>12,U[rt++>>>0]=128|It>>6&63,U[rt++>>>0]=128|It&63}else{if(rt+3>=Dt)break;U[rt++>>>0]=240|It>>18,U[rt++>>>0]=128|It>>12&63,U[rt++>>>0]=128|It>>6&63,U[rt++>>>0]=128|It&63}}return U[rt>>>0]=0,rt-Rt}function xt(E,U,rt){return ut(E,a(),U,rt)}var dt,yt,Nt,_t,Bt,Yt;y&&(dt=u.buffer);function qt(E){dt=E,u.HEAP8=yt=new Int8Array(E),u.HEAP16=new Int16Array(E),u.HEAP32=_t=new Int32Array(E),u.HEAPU8=Nt=new Uint8Array(E),u.HEAPU16=new Uint16Array(E),u.HEAPU32=Bt=new Uint32Array(E),u.HEAPF32=new Float32Array(E),u.HEAPF64=Yt=new Float64Array(E)}var Gt=u.INITIAL_MEMORY||16777216;if(y)V=u.wasmMemory,dt=u.buffer;else if(u.wasmMemory)V=u.wasmMemory;else if(V=new WebAssembly.Memory({initial:Gt/65536,maximum:65536,shared:!0}),!(V.buffer instanceof SharedArrayBuffer))throw M("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),x&&M("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");V&&(dt=V.buffer),Gt=dt.byteLength,qt(dt);var Tt,Qt=[],te=[],Cn=[];function ge(){return j}function $n(){if(u.preRun)for(typeof u.preRun=="function"&&(u.preRun=[u.preRun]);u.preRun.length;)gn(u.preRun.shift());de(Qt)}function Ge(){y||de(te)}function Zn(){if(!y){if(u.postRun)for(typeof u.postRun=="function"&&(u.postRun=[u.postRun]);u.postRun.length;)Jn(u.postRun.shift());de(Cn)}}function gn(E){Qt.unshift(E)}function Ln(E){te.unshift(E)}function Jn(E){Cn.unshift(E)}var He=0,un=null;function Hs(E){He++,u.monitorRunDependencies&&u.monitorRunDependencies(He)}function xo(E){if(He--,u.monitorRunDependencies&&u.monitorRunDependencies(He),He==0&&un){var U=un;un=null,U()}}function ps(E){u.onAbort&&u.onAbort(E),E="Aborted("+E+")",M(E),X=!0,Z=1,E+=". Build with -sASSERTIONS for more info.";var U=new WebAssembly.RuntimeError(E);throw h(U),U}var gl="data:application/octet-stream;base64,";function Rs(E){return E.startsWith(gl)}function Cr(E){return E.startsWith("file://")}var je;je="tfjs-backend-wasm-threaded-simd.wasm",Rs(je)||(je=I(je));function vd(E){try{if(E==je&&z)return new Uint8Array(z);if(T)return T(E);throw"both async and sync fetching of the wasm failed"}catch(U){ps(U)}}function Sd(){if(!z&&(g||b)){if(typeof fetch=="function"&&!Cr(je))return fetch(je,{credentials:"same-origin"}).then(function(E){if(!E.ok)throw"failed to load wasm binary file at '"+je+"'";return E.arrayBuffer()}).catch(function(){return vd(je)});if(S)return new Promise(function(E,U){S(je,function(rt){E(new Uint8Array(rt))},U)})}return Promise.resolve().then(function(){return vd(je)})}function Nd(){var E={env:aC,wasi_snapshot_preview1:aC};function U(ht,It){var ye=ht.exports;if(u.asm=ye,qs(u.asm._emscripten_tls_init),Tt=u.asm.__indirect_function_table,Ln(u.asm.__wasm_call_ctors),q=It,!y){var Bn=lt.unusedWorkers.length;lt.unusedWorkers.forEach(function(Ks){lt.loadWasmModuleToWorker(Ks,function(){--Bn||xo()})})}}y||Hs();function rt(ht){U(ht.instance,ht.module)}function Ct(ht){return Sd().then(function(It){return WebAssembly.instantiate(It,E)}).then(function(It){return It}).then(ht,function(It){M("failed to asynchronously prepare wasm: "+It),ps(It)})}function Rt(){return!z&&typeof WebAssembly.instantiateStreaming=="function"&&!Rs(je)&&!Cr(je)&&!x&&typeof fetch=="function"?fetch(je,{credentials:"same-origin"}).then(function(ht){var It=WebAssembly.instantiateStreaming(ht,E);return It.then(rt,function(ye){return M("wasm streaming compile failed: "+ye),M("falling back to ArrayBuffer instantiation"),Ct(rt)})}):Ct(rt)}if(u.instantiateWasm)try{var Dt=u.instantiateWasm(E,U);return Dt}catch(ht){M("Module.instantiateWasm callback failed with error: "+ht),h(ht)}return Rt().catch(h),{}}var Td={};function js(E){this.name="ExitStatus",this.message="Program terminated with exit("+E+")",this.status=E}function $i(E){var U=lt.pthreads[E];delete lt.pthreads[E],U.terminate(),Tm(E),lt.runningWorkers.splice(lt.runningWorkers.indexOf(U),1),U.pthread_ptr=0}function _d(E){var U=lt.pthreads[E];U.postMessage({cmd:"cancel"})}function yo(E){var U=lt.pthreads[E];Q(U),lt.returnWorkerToPool(U)}function wo(E){var U=lt.getNewWorker();if(!U)return 6;lt.runningWorkers.push(U),lt.pthreads[E.pthread_ptr]=U,U.pthread_ptr=E.pthread_ptr;var rt={cmd:"run",start_routine:E.startRoutine,arg:E.arg,pthread_ptr:E.pthread_ptr};return U.runPthread=()=>{x&&U.ref(),U.postMessage(rt,E.transferList),delete U.runPthread},U.loaded&&U.runPthread(),0}function Ed(E){if(y)return vi(1,1,E);Z=E,ge()||(lt.terminateAllThreads(),u.onExit&&u.onExit(E),X=!0),m(E,new js(E))}function Y(E,U){if(Z=E,!U&&y)throw Pt(E),"unwind";Ed(E)}var st=Y;function kt(E){if(E instanceof js||E=="unwind")return Z;m(1,E)}var lt={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){y?lt.initWorker():lt.initMainThread()},initMainThread:function(){for(var E=8;E--;)lt.allocateUnusedWorker()},initWorker:function(){j=!1},setExitStatus:function(E){Z=E},terminateAllThreads:function(){for(var E of Object.values(lt.pthreads))lt.returnWorkerToPool(E);for(var E of lt.unusedWorkers)E.terminate();lt.unusedWorkers=[]},returnWorkerToPool:function(E){var U=E.pthread_ptr;delete lt.pthreads[U],lt.unusedWorkers.push(E),lt.runningWorkers.splice(lt.runningWorkers.indexOf(E),1),E.pthread_ptr=0,x&&E.unref(),Tm(U)},receiveObjectTransfer:function(E){},threadInitTLS:function(){lt.tlsInitFunctions.forEach(E=>E())},loadWasmModuleToWorker:function(E,U){E.onmessage=Dt=>{var ht=Dt.data,It=ht.cmd;if(E.pthread_ptr&&(lt.currentProxiedOperationCallerThread=E.pthread_ptr),ht.targetThread&&ht.targetThread!=Fd()){var ye=lt.pthreads[ht.targetThread];ye?ye.postMessage(ht,ht.transferList):M('Internal error! Worker sent a message "'+It+'" to target pthread '+ht.targetThread+", but that thread no longer exists!"),lt.currentProxiedOperationCallerThread=void 0;return}It==="processProxyingQueue"?vm(ht.queue):It==="spawnThread"?wo(ht):It==="cleanupThread"?yo(ht.thread):It==="killThread"?$i(ht.thread):It==="cancelThread"?_d(ht.thread):It==="loaded"?(E.loaded=!0,x&&E.unref(),U&&U(E),E.runPthread&&E.runPthread()):It==="print"?B("Thread "+ht.threadId+": "+ht.text):It==="printErr"?M("Thread "+ht.threadId+": "+ht.text):It==="alert"?alert("Thread "+ht.threadId+": "+ht.text):ht.target==="setimmediate"?E.postMessage(ht):It==="callHandler"?u[ht.handler](...ht.args):It&&M("worker sent an unknown command "+It),lt.currentProxiedOperationCallerThread=void 0},E.onerror=Dt=>{var ht="worker sent an error!";throw M(ht+" "+Dt.filename+":"+Dt.lineno+": "+Dt.message),Dt},x&&(E.on("message",function(Dt){E.onmessage({data:Dt})}),E.on("error",function(Dt){E.onerror(Dt)}),E.on("detachedExit",function(){}));var rt=[],Ct=["onExit","onAbort","print","printErr"];for(var Rt of Ct)u.hasOwnProperty(Rt)&&rt.push(Rt);E.postMessage({cmd:"load",handlers:rt,urlOrBlob:u.mainScriptUrlOrBlob||s,wasmMemory:V,wasmModule:q})},allocateUnusedWorker:function(){var E,U=I("tfjs-backend-wasm-threaded-simd.worker.js");E=new Worker(U),lt.unusedWorkers.push(E)},getNewWorker:function(){return lt.unusedWorkers.length==0&&(lt.allocateUnusedWorker(),lt.loadWasmModuleToWorker(lt.unusedWorkers[0])),lt.unusedWorkers.pop()}};u.PThread=lt;function de(E){for(;E.length>0;)E.shift()(u)}function be(){var E=Fd(),U=i()[E+52>>>2],rt=i()[E+56>>>2],Ct=U-rt;dC(U,Ct),Md(U)}u.establishStackSpace=be;function Pt(E){if(y)return vi(2,0,E);try{st(E)}catch(U){kt(U)}}var At=[];function Ne(E){var U=At[E];return U||(E>=At.length&&(At.length=E+1),At[E]=U=Tt.get(E)),U}function Pn(E,U){var rt=Ne(E)(U);ge()?lt.setExitStatus(rt):cC(rt)}u.invokeEntryPoint=Pn;function qs(E){lt.tlsInitFunctions.push(E)}function Rd(E){iC(E,!b,1,!g),lt.threadInitTLS()}function bl(E){y?postMessage({cmd:"cleanupThread",thread:E}):yo(E)}function Ad(E,U,rt,Ct){return y?vi(3,1,E,U,rt,Ct):tn(E,U,rt,Ct)}function tn(E,U,rt,Ct){if(typeof SharedArrayBuffer>"u")return M("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var Rt=[],Dt=0;if(y&&(Rt.length===0||Dt))return Ad(E,U,rt,Ct);var ht={startRoutine:rt,pthread_ptr:E,arg:Ct,transferList:Rt};return y?(ht.cmd="spawnThread",postMessage(ht,Rt),0):wo(ht)}function $r(){return 65536}var Dd=!0;function I9(){return Dd}function vm(E){Atomics.store(i(),E>>2,1),Fd()&&lC(E),Atomics.compareExchange(i(),E>>2,1,0)}u.executeNotifiedProxyingQueue=vm;function k9(E,U,rt,Ct){if(E==U)setTimeout(()=>vm(Ct));else if(y)postMessage({targetThread:E,cmd:"processProxyingQueue",queue:Ct});else{var Rt=lt.pthreads[E];if(!Rt)return;Rt.postMessage({cmd:"processProxyingQueue",queue:Ct})}return 1}function C9(E,U,rt){return-1}function $9(){ps("")}function xl(E){xl.shown||(xl.shown={}),xl.shown[E]||(xl.shown[E]=1,x&&(E="warning: "+E),M(E))}function v9(){x||b||xl("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function S9(){return Date.now()}function eC(){return 4294901760}function N9(){return eC()}var Sm;x?Sm=()=>{var E=process.hrtime();return E[0]*1e3+E[1]/1e6}:Sm=()=>performance.timeOrigin+performance.now();function T9(E,U,rt){a().copyWithin(E>>>0,U>>>0,U+rt>>>0)}function _9(){return x?or.cpus().length:navigator.hardwareConcurrency}function E9(E){var U=_m(),rt=E();return Md(U),rt}function vi(E,U){var rt=arguments.length-2,Ct=arguments;return E9(()=>{for(var Rt=rt,Dt=Od(Rt*8),ht=Dt>>3,It=0;It<rt;It++){var ye=Ct[2+It];c()[ht+It>>>0]=ye}return uC(E,Rt,Dt,U)})}var Nm=[];function R9(E,U,rt){Nm.length=U;for(var Ct=rt>>3,Rt=0;Rt<U;Rt++)Nm[Rt]=c()[Ct+Rt>>>0];var Dt=E<0,ht=Dt?Td[-E-1]:z9[E];return ht.apply(null,Nm)}function A9(E){try{return V.grow(E-dt.byteLength+65535>>>16),qt(V.buffer),1}catch{}}function D9(E){var U=a().length;if(E=E>>>0,E<=U)return!1;var rt=eC();if(E>rt)return!1;let Ct=(ye,Bn)=>ye+(Bn-ye%Bn)%Bn;for(var Rt=1;Rt<=4;Rt*=2){var Dt=U*(1+.2/Rt);Dt=Math.min(Dt,E+100663296);var ht=Math.min(rt,Ct(Math.max(E,Dt),65536)),It=A9(ht);if(It)return!0}return!1}function F9(){throw"unwind"}function nC(E){return y?vi(4,1,E):52}function sC(E,U,rt,Ct,Rt){return y?vi(5,1,E,U,rt,Ct,Rt):70}var M9=[null,[],[]];function O9(E,U){var rt=M9[E];U===0||U===10?((E===1?B:M)(ot(rt,0)),rt.length=0):rt.push(U)}function rC(E,U,rt,Ct){if(y)return vi(6,1,E,U,rt,Ct);for(var Rt=0,Dt=0;Dt<rt;Dt++){var ht=l()[U>>>2],It=l()[U+4>>>2];U+=8;for(var ye=0;ye<It;ye++)O9(E,a()[ht+ye>>>0]);Rt+=It}return l()[Ct>>>2]=Rt,0}function oC(E){var U=u["_"+E];return U}function L9(E,U){o().set(E,U>>>0)}function P9(E,U,rt,Ct,Rt){var Dt={string:vn=>{var Si=0;if(vn!=null&&vn!==0){var fC=(vn.length<<2)+1;Si=Od(fC),xt(vn,Si,fC)}return Si},array:vn=>{var Si=Od(vn.length);return L9(vn,Si),Si}};function ht(vn){return U==="string"?nt(vn):U==="boolean"?!!vn:vn}var It=oC(E),ye=[],Bn=0;if(Ct)for(var Ks=0;Ks<Ct.length;Ks++){var pC=Dt[rt[Ks]];pC?(Bn===0&&(Bn=_m()),ye[Ks]=pC(Ct[Ks])):ye[Ks]=Ct[Ks]}var Em=It.apply(null,ye);function V9(vn){return Bn!==0&&Md(Bn),ht(vn)}return Em=V9(Em),Em}function B9(E,U,rt,Ct){rt=rt||[];var Rt=rt.every(ht=>ht==="number"||ht==="boolean"),Dt=U!=="string";return Dt&&Rt&&!Ct?oC(E):function(){return P9(E,U,rt,arguments)}}lt.init();var z9=[null,Ed,Pt,Ad,nC,sC,rC],aC={__emscripten_init_main_thread_js:Rd,__emscripten_thread_cleanup:bl,__pthread_create_js:tn,_emscripten_default_pthread_stack_size:$r,_emscripten_get_now_is_monotonic:I9,_emscripten_notify_task_queue:k9,_emscripten_set_offscreencanvas_size:C9,abort:$9,emscripten_check_blocking_allowed:v9,emscripten_date_now:S9,emscripten_get_heap_max:N9,emscripten_get_now:Sm,emscripten_memcpy_big:T9,emscripten_num_logical_cores:_9,emscripten_receive_on_main_thread_js:R9,emscripten_resize_heap:D9,emscripten_unwind_to_js_event_loop:F9,exit:st,fd_close:nC,fd_seek:sC,fd_write:rC,memory:V||u.wasmMemory};Nd(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.__wasm_call_ctors).apply(null,arguments)},u._init=function(){return(u._init=u.asm.init).apply(null,arguments)},u._init_with_threads_count=function(){return(u._init_with_threads_count=u.asm.init_with_threads_count).apply(null,arguments)},u._get_threads_count=function(){return(u._get_threads_count=u.asm.get_threads_count).apply(null,arguments)},u._register_tensor=function(){return(u._register_tensor=u.asm.register_tensor).apply(null,arguments)},u._dispose_data=function(){return(u._dispose_data=u.asm.dispose_data).apply(null,arguments)},u._dispose=function(){return(u._dispose=u.asm.dispose).apply(null,arguments)},u._Abs=function(){return(u._Abs=u.asm.Abs).apply(null,arguments)},u._Acos=function(){return(u._Acos=u.asm.Acos).apply(null,arguments)},u._Acosh=function(){return(u._Acosh=u.asm.Acosh).apply(null,arguments)},u._Add=function(){return(u._Add=u.asm.Add).apply(null,arguments)},u._AddN=function(){return(u._AddN=u.asm.AddN).apply(null,arguments)},u._All=function(){return(u._All=u.asm.All).apply(null,arguments)},u._Any=function(){return(u._Any=u.asm.Any).apply(null,arguments)},u._ArgMax=function(){return(u._ArgMax=u.asm.ArgMax).apply(null,arguments)},u._ArgMin=function(){return(u._ArgMin=u.asm.ArgMin).apply(null,arguments)},u._Asin=function(){return(u._Asin=u.asm.Asin).apply(null,arguments)},u._Asinh=function(){return(u._Asinh=u.asm.Asinh).apply(null,arguments)},u._Atan=function(){return(u._Atan=u.asm.Atan).apply(null,arguments)},u._Atan2=function(){return(u._Atan2=u.asm.Atan2).apply(null,arguments)},u._Atanh=function(){return(u._Atanh=u.asm.Atanh).apply(null,arguments)},u._AvgPool=function(){return(u._AvgPool=u.asm.AvgPool).apply(null,arguments)},u._AvgPool3D=function(){return(u._AvgPool3D=u.asm.AvgPool3D).apply(null,arguments)},u._AvgPool3DGrad=function(){return(u._AvgPool3DGrad=u.asm.AvgPool3DGrad).apply(null,arguments)},u._AvgPoolGrad=function(){return(u._AvgPoolGrad=u.asm.AvgPoolGrad).apply(null,arguments)},u._BatchMatMul=function(){return(u._BatchMatMul=u.asm.BatchMatMul).apply(null,arguments)},u._Bincount=function(){return(u._Bincount=u.asm.Bincount).apply(null,arguments)},u._BitwiseAnd=function(){return(u._BitwiseAnd=u.asm.BitwiseAnd).apply(null,arguments)},u._Ceil=function(){return(u._Ceil=u.asm.Ceil).apply(null,arguments)},u._ClipByValue=function(){return(u._ClipByValue=u.asm.ClipByValue).apply(null,arguments)},u._Conv2D=function(){return(u._Conv2D=u.asm.Conv2D).apply(null,arguments)},u._Conv2DBackpropInput=function(){return(u._Conv2DBackpropInput=u.asm.Conv2DBackpropInput).apply(null,arguments)},u._Conv3D=function(){return(u._Conv3D=u.asm.Conv3D).apply(null,arguments)},u._Conv3DBackpropFilterV2=function(){return(u._Conv3DBackpropFilterV2=u.asm.Conv3DBackpropFilterV2).apply(null,arguments)},u._Conv3DBackpropInputV2=function(){return(u._Conv3DBackpropInputV2=u.asm.Conv3DBackpropInputV2).apply(null,arguments)},u._Cos=function(){return(u._Cos=u.asm.Cos).apply(null,arguments)},u._Cosh=function(){return(u._Cosh=u.asm.Cosh).apply(null,arguments)},u._CropAndResize=function(){return(u._CropAndResize=u.asm.CropAndResize).apply(null,arguments)},u._Cumprod=function(){return(u._Cumprod=u.asm.Cumprod).apply(null,arguments)},u._Cumsum=function(){return(u._Cumsum=u.asm.Cumsum).apply(null,arguments)},u._DenseBincount=function(){return(u._DenseBincount=u.asm.DenseBincount).apply(null,arguments)},u._DepthToSpace=function(){return(u._DepthToSpace=u.asm.DepthToSpace).apply(null,arguments)},u._DepthwiseConv2dNative=function(){return(u._DepthwiseConv2dNative=u.asm.DepthwiseConv2dNative).apply(null,arguments)},u._Diag=function(){return(u._Diag=u.asm.Diag).apply(null,arguments)},u._Dilation2D=function(){return(u._Dilation2D=u.asm.Dilation2D).apply(null,arguments)},u._Dilation2DBackpropFilter=function(){return(u._Dilation2DBackpropFilter=u.asm.Dilation2DBackpropFilter).apply(null,arguments)},u._Dilation2DBackpropInput=function(){return(u._Dilation2DBackpropInput=u.asm.Dilation2DBackpropInput).apply(null,arguments)},u._Elu=function(){return(u._Elu=u.asm.Elu).apply(null,arguments)},u._EluGrad=function(){return(u._EluGrad=u.asm.EluGrad).apply(null,arguments)},u._Equal=function(){return(u._Equal=u.asm.Equal).apply(null,arguments)},u._Erf=function(){return(u._Erf=u.asm.Erf).apply(null,arguments)},u._Exp=function(){return(u._Exp=u.asm.Exp).apply(null,arguments)},u._Expm1=function(){return(u._Expm1=u.asm.Expm1).apply(null,arguments)},u._FlipLeftRight=function(){return(u._FlipLeftRight=u.asm.FlipLeftRight).apply(null,arguments)},u._Floor=function(){return(u._Floor=u.asm.Floor).apply(null,arguments)},u._FloorDiv=function(){return(u._FloorDiv=u.asm.FloorDiv).apply(null,arguments)},u._FusedBatchNorm=function(){return(u._FusedBatchNorm=u.asm.FusedBatchNorm).apply(null,arguments)},u._FusedConv2D=function(){return(u._FusedConv2D=u.asm.FusedConv2D).apply(null,arguments)},u._FusedDepthwiseConv2D=function(){return(u._FusedDepthwiseConv2D=u.asm.FusedDepthwiseConv2D).apply(null,arguments)},u._Gather=function(){return(u._Gather=u.asm.Gather).apply(null,arguments)},u._GatherNd=function(){return(u._GatherNd=u.asm.GatherNd).apply(null,arguments)},u._Greater=function(){return(u._Greater=u.asm.Greater).apply(null,arguments)},u._GreaterEqual=function(){return(u._GreaterEqual=u.asm.GreaterEqual).apply(null,arguments)},u._IsFinite=function(){return(u._IsFinite=u.asm.IsFinite).apply(null,arguments)},u._IsInf=function(){return(u._IsInf=u.asm.IsInf).apply(null,arguments)},u._IsNan=function(){return(u._IsNan=u.asm.IsNan).apply(null,arguments)},u._LRN=function(){return(u._LRN=u.asm.LRN).apply(null,arguments)},u._LRNGrad=function(){return(u._LRNGrad=u.asm.LRNGrad).apply(null,arguments)},u._LeakyRelu=function(){return(u._LeakyRelu=u.asm.LeakyRelu).apply(null,arguments)},u._Less=function(){return(u._Less=u.asm.Less).apply(null,arguments)},u._LessEqual=function(){return(u._LessEqual=u.asm.LessEqual).apply(null,arguments)},u._LinSpace=function(){return(u._LinSpace=u.asm.LinSpace).apply(null,arguments)},u._Log=function(){return(u._Log=u.asm.Log).apply(null,arguments)},u._Log1p=function(){return(u._Log1p=u.asm.Log1p).apply(null,arguments)},u._LogicalAnd=function(){return(u._LogicalAnd=u.asm.LogicalAnd).apply(null,arguments)},u._LogicalNot=function(){return(u._LogicalNot=u.asm.LogicalNot).apply(null,arguments)},u._LogicalOr=function(){return(u._LogicalOr=u.asm.LogicalOr).apply(null,arguments)},u._LogicalXor=function(){return(u._LogicalXor=u.asm.LogicalXor).apply(null,arguments)},u._Max=function(){return(u._Max=u.asm.Max).apply(null,arguments)},u._MaxPool=function(){return(u._MaxPool=u.asm.MaxPool).apply(null,arguments)},u._MaxPool3D=function(){return(u._MaxPool3D=u.asm.MaxPool3D).apply(null,arguments)},u._MaxPool3DGrad=function(){return(u._MaxPool3DGrad=u.asm.MaxPool3DGrad).apply(null,arguments)},u._MaxPoolGrad=function(){return(u._MaxPoolGrad=u.asm.MaxPoolGrad).apply(null,arguments)},u._MaxPoolWithArgmax=function(){return(u._MaxPoolWithArgmax=u.asm.MaxPoolWithArgmax).apply(null,arguments)},u._Maximum=function(){return(u._Maximum=u.asm.Maximum).apply(null,arguments)},u._Mean=function(){return(u._Mean=u.asm.Mean).apply(null,arguments)},u._Min=function(){return(u._Min=u.asm.Min).apply(null,arguments)},u._Minimum=function(){return(u._Minimum=u.asm.Minimum).apply(null,arguments)},u._MirrorPad=function(){return(u._MirrorPad=u.asm.MirrorPad).apply(null,arguments)},u._Mod=function(){return(u._Mod=u.asm.Mod).apply(null,arguments)},u._Multinomial=function(){return(u._Multinomial=u.asm.Multinomial).apply(null,arguments)},u._Multiply=function(){return(u._Multiply=u.asm.Multiply).apply(null,arguments)},u._Neg=function(){return(u._Neg=u.asm.Neg).apply(null,arguments)},u._NonMaxSuppressionV3=function(){return(u._NonMaxSuppressionV3=u.asm.NonMaxSuppressionV3).apply(null,arguments)},u._NonMaxSuppressionV4=function(){return(u._NonMaxSuppressionV4=u.asm.NonMaxSuppressionV4).apply(null,arguments)},u._NonMaxSuppressionV5=function(){return(u._NonMaxSuppressionV5=u.asm.NonMaxSuppressionV5).apply(null,arguments)},u._NotEqual=function(){return(u._NotEqual=u.asm.NotEqual).apply(null,arguments)},u._OneHot=function(){return(u._OneHot=u.asm.OneHot).apply(null,arguments)},u._PadV2=function(){return(u._PadV2=u.asm.PadV2).apply(null,arguments)},u._Pow=function(){return(u._Pow=u.asm.Pow).apply(null,arguments)},u._Prelu=function(){return(u._Prelu=u.asm.Prelu).apply(null,arguments)},u._Prod=function(){return(u._Prod=u.asm.Prod).apply(null,arguments)},u._RealDiv=function(){return(u._RealDiv=u.asm.RealDiv).apply(null,arguments)},u._Reciprocal=function(){return(u._Reciprocal=u.asm.Reciprocal).apply(null,arguments)},u._Relu=function(){return(u._Relu=u.asm.Relu).apply(null,arguments)},u._Relu6=function(){return(u._Relu6=u.asm.Relu6).apply(null,arguments)},u._ResizeBilinear=function(){return(u._ResizeBilinear=u.asm.ResizeBilinear).apply(null,arguments)},u._ResizeBilinearGrad=function(){return(u._ResizeBilinearGrad=u.asm.ResizeBilinearGrad).apply(null,arguments)},u._ResizeNearestNeighbor=function(){return(u._ResizeNearestNeighbor=u.asm.ResizeNearestNeighbor).apply(null,arguments)},u._ResizeNearestNeighborGrad=function(){return(u._ResizeNearestNeighborGrad=u.asm.ResizeNearestNeighborGrad).apply(null,arguments)},u._Reverse=function(){return(u._Reverse=u.asm.Reverse).apply(null,arguments)},u._RotateWithOffset=function(){return(u._RotateWithOffset=u.asm.RotateWithOffset).apply(null,arguments)},u._Round=function(){return(u._Round=u.asm.Round).apply(null,arguments)},u._Rsqrt=function(){return(u._Rsqrt=u.asm.Rsqrt).apply(null,arguments)},u._ScatterNd=function(){return(u._ScatterNd=u.asm.ScatterNd).apply(null,arguments)},u._SearchSorted=function(){return(u._SearchSorted=u.asm.SearchSorted).apply(null,arguments)},u._SelectV2=function(){return(u._SelectV2=u.asm.SelectV2).apply(null,arguments)},u._Selu=function(){return(u._Selu=u.asm.Selu).apply(null,arguments)},u._Sigmoid=function(){return(u._Sigmoid=u.asm.Sigmoid).apply(null,arguments)},u._Sign=function(){return(u._Sign=u.asm.Sign).apply(null,arguments)},u._Sin=function(){return(u._Sin=u.asm.Sin).apply(null,arguments)},u._Sinh=function(){return(u._Sinh=u.asm.Sinh).apply(null,arguments)},u._Softmax=function(){return(u._Softmax=u.asm.Softmax).apply(null,arguments)},u._Softplus=function(){return(u._Softplus=u.asm.Softplus).apply(null,arguments)},u._SparseFillEmptyRows=function(){return(u._SparseFillEmptyRows=u.asm.SparseFillEmptyRows).apply(null,arguments)},u._SparseReshape=function(){return(u._SparseReshape=u.asm.SparseReshape).apply(null,arguments)},u._SparseSegmentReduction=function(){return(u._SparseSegmentReduction=u.asm.SparseSegmentReduction).apply(null,arguments)},u._SparseToDense=function(){return(u._SparseToDense=u.asm.SparseToDense).apply(null,arguments)},u._Sqrt=function(){return(u._Sqrt=u.asm.Sqrt).apply(null,arguments)},u._Square=function(){return(u._Square=u.asm.Square).apply(null,arguments)},u._SquaredDifference=function(){return(u._SquaredDifference=u.asm.SquaredDifference).apply(null,arguments)},u._Step=function(){return(u._Step=u.asm.Step).apply(null,arguments)},u._StridedSlice=function(){return(u._StridedSlice=u.asm.StridedSlice).apply(null,arguments)},u._Sub=function(){return(u._Sub=u.asm.Sub).apply(null,arguments)},u._Sum=function(){return(u._Sum=u.asm.Sum).apply(null,arguments)},u._Tan=function(){return(u._Tan=u.asm.Tan).apply(null,arguments)},u._Tanh=function(){return(u._Tanh=u.asm.Tanh).apply(null,arguments)},u._TensorScatterUpdate=function(){return(u._TensorScatterUpdate=u.asm.TensorScatterUpdate).apply(null,arguments)},u._Tile=function(){return(u._Tile=u.asm.Tile).apply(null,arguments)},u._TopK=function(){return(u._TopK=u.asm.TopK).apply(null,arguments)},u._Transform=function(){return(u._Transform=u.asm.Transform).apply(null,arguments)},u._Transpose=function(){return(u._Transpose=u.asm.Transpose).apply(null,arguments)},u.__FusedMatMul=function(){return(u.__FusedMatMul=u.asm._FusedMatMul).apply(null,arguments)},u._malloc=function(){return(u._malloc=u.asm.malloc).apply(null,arguments)},u._free=function(){return(u._free=u.asm.free).apply(null,arguments)},u.__emscripten_tls_init=function(){return(u.__emscripten_tls_init=u.asm._emscripten_tls_init).apply(null,arguments)};var Fd=u._pthread_self=function(){return(Fd=u._pthread_self=u.asm.pthread_self).apply(null,arguments)};u.___errno_location=function(){return(u.___errno_location=u.asm.__errno_location).apply(null,arguments)};var iC=u.__emscripten_thread_init=function(){return(iC=u.__emscripten_thread_init=u.asm._emscripten_thread_init).apply(null,arguments)};u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm._emscripten_thread_crashed).apply(null,arguments)},u._emscripten_main_thread_process_queued_calls=function(){return(u._emscripten_main_thread_process_queued_calls=u.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},u._emscripten_main_browser_thread_id=function(){return(u._emscripten_main_browser_thread_id=u.asm.emscripten_main_browser_thread_id).apply(null,arguments)};var uC=u._emscripten_run_in_main_runtime_thread_js=function(){return(uC=u._emscripten_run_in_main_runtime_thread_js=u.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)};u._emscripten_dispatch_to_thread_=function(){return(u._emscripten_dispatch_to_thread_=u.asm.emscripten_dispatch_to_thread_).apply(null,arguments)};var lC=u.__emscripten_proxy_execute_task_queue=function(){return(lC=u.__emscripten_proxy_execute_task_queue=u.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)},Tm=u.__emscripten_thread_free_data=function(){return(Tm=u.__emscripten_thread_free_data=u.asm._emscripten_thread_free_data).apply(null,arguments)},cC=u.__emscripten_thread_exit=function(){return(cC=u.__emscripten_thread_exit=u.asm._emscripten_thread_exit).apply(null,arguments)},dC=u._emscripten_stack_set_limits=function(){return(dC=u._emscripten_stack_set_limits=u.asm.emscripten_stack_set_limits).apply(null,arguments)},_m=u.stackSave=function(){return(_m=u.stackSave=u.asm.stackSave).apply(null,arguments)},Md=u.stackRestore=function(){return(Md=u.stackRestore=u.asm.stackRestore).apply(null,arguments)},Od=u.stackAlloc=function(){return(Od=u.stackAlloc=u.asm.stackAlloc).apply(null,arguments)};u.dynCall_iijjiiii=function(){return(u.dynCall_iijjiiii=u.asm.dynCall_iijjiiii).apply(null,arguments)},u.dynCall_jiji=function(){return(u.dynCall_jiji=u.asm.dynCall_jiji).apply(null,arguments)},u.keepRuntimeAlive=ge,u.wasmMemory=V,u.cwrap=B9,u.ExitStatus=js,u.PThread=lt;var Ld;un=function E(){Ld||hC(),Ld||(un=E)};function hC(E){if(He>0)return;if(y){d(u),Ge(),startWorker(u);return}if($n(),He>0)return;function U(){Ld||(Ld=!0,u.calledRun=!0,!X&&(Ge(),d(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),Zn()))}u.setStatus?(u.setStatus("Running..."),setTimeout(function(){setTimeout(function(){u.setStatus("")},1),U()},1)):U()}if(u.preInit)for(typeof u.preInit=="function"&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();hC();var Pd;p&&(Pd={uncaughtException:process.listeners("uncaughtException").filter(function(E){return!p.uncaughtException.indexOf(E)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(E){return!p.unhandledRejection.indexOf(E)>-1})});var Bd;if(typeof WasmBackendModule<"u")Bd=WasmBackendModule;else if(typeof r<"u")Bd=r;else throw new Error("Could not find wasm module in post.js");if(Pd){var W9=Bd._dispose;Bd._dispose=function(){W9(),Pd.uncaughtException.forEach(function(E){process.removeListener("uncaughtException",E)}),Pd.unhandledRejection.forEach(function(E){process.removeListener("unhandledRejection",E)})}}return r.ready}})();n.exports=e}(Im)),Im.exports}var jk=a9(),qk=xh(jk),i9=As({__proto__:null,default:qk},[jk]),km={},Kk;function u9(){return Kk||(Kk=1,km.wasmWorkerContents=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};`),km}var l9=u9(),Cm={exports:{}},Xk;function c9(){return Xk||(Xk=1,function(n,t){var e=(()=>{var s=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(s=s||__filename),function(r){r=r||{};var o=typeof r<"u"?r:{},a,i;o.ready=new Promise(function(Y,st){a=Y,i=st});var l;typeof process<"u"&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var c=Object.assign({},o),u=typeof window=="object",d=typeof importScripts=="function",h=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",p="";function f(Y){return o.locateFile?o.locateFile(Y,p):p+Y}var m,g,b;if(h){var x=or,y=or;d?p=y.dirname(p)+"/":p=__dirname+"/",m=(Y,st)=>(Y=Gt(Y)?new URL(Y):y.normalize(Y),x.readFileSync(Y,st?void 0:"utf8")),b=Y=>{var st=m(Y,!0);return st.buffer||(st=new Uint8Array(st)),st},g=(Y,st,kt)=>{Y=Gt(Y)?new URL(Y):y.normalize(Y),x.readFile(Y,function(lt,de){lt?kt(lt):st(de.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(Y){if(!(Y instanceof ge))throw Y}),process.on("unhandledRejection",function(Y){throw Y}),o.inspect=function(){return"[Emscripten Module object]"}}else(u||d)&&(d?p=self.location.href:typeof document<"u"&&document.currentScript&&(p=document.currentScript.src),s&&(p=s),p.indexOf("blob:")!==0?p=p.substr(0,p.replace(/[?#].*/,"").lastIndexOf("/")+1):p="",m=Y=>{var st=new XMLHttpRequest;return st.open("GET",Y,!1),st.send(null),st.responseText},d&&(b=Y=>{var st=new XMLHttpRequest;return st.open("GET",Y,!1),st.responseType="arraybuffer",st.send(null),new Uint8Array(st.response)}),g=(Y,st,kt)=>{var lt=new XMLHttpRequest;lt.open("GET",Y,!0),lt.responseType="arraybuffer",lt.onload=()=>{if(lt.status==200||lt.status==0&&lt.response){st(lt.response);return}kt()},lt.onerror=kt,lt.send(null)});var w=o.print||console.log.bind(console),I=o.printErr||console.warn.bind(console);Object.assign(o,c),c=null,o.arguments&&o.arguments,o.thisProgram&&o.thisProgram,o.quit&&o.quit;var C;o.wasmBinary&&(C=o.wasmBinary),o.noExitRuntime,typeof WebAssembly!="object"&&Bt("no native wasm support detected");var S,T=!1,v=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function $(Y,st,kt){st>>>=0;for(var lt=st+kt,de=st;Y[de]&&!(de>=lt);)++de;if(de-st>16&&Y.buffer&&v)return v.decode(Y.subarray(st,de));for(var be="";st<de;){var Pt=Y[st++];if(!(Pt&128)){be+=String.fromCharCode(Pt);continue}var At=Y[st++]&63;if((Pt&224)==192){be+=String.fromCharCode((Pt&31)<<6|At);continue}var Ne=Y[st++]&63;if((Pt&240)==224?Pt=(Pt&15)<<12|At<<6|Ne:Pt=(Pt&7)<<18|At<<12|Ne<<6|Y[st++]&63,Pt<65536)be+=String.fromCharCode(Pt);else{var Pn=Pt-65536;be+=String.fromCharCode(55296|Pn>>10,56320|Pn&1023)}}return be}function k(Y,st){return Y>>>=0,Y?$(z,Y,st):""}function R(Y,st,kt,lt){if(kt>>>=0,!(lt>0))return 0;for(var de=kt,be=kt+lt-1,Pt=0;Pt<Y.length;++Pt){var At=Y.charCodeAt(Pt);if(At>=55296&&At<=57343){var Ne=Y.charCodeAt(++Pt);At=65536+((At&1023)<<10)|Ne&1023}if(At<=127){if(kt>=be)break;st[kt++>>>0]=At}else if(At<=2047){if(kt+1>=be)break;st[kt++>>>0]=192|At>>6,st[kt++>>>0]=128|At&63}else if(At<=65535){if(kt+2>=be)break;st[kt++>>>0]=224|At>>12,st[kt++>>>0]=128|At>>6&63,st[kt++>>>0]=128|At&63}else{if(kt+3>=be)break;st[kt++>>>0]=240|At>>18,st[kt++>>>0]=128|At>>12&63,st[kt++>>>0]=128|At>>6&63,st[kt++>>>0]=128|At&63}}return st[kt>>>0]=0,kt-de}function F(Y,st,kt){return R(Y,z,st,kt)}var B,M,z,j;function V(Y){B=Y,o.HEAP8=M=new Int8Array(Y),o.HEAP16=new Int16Array(Y),o.HEAP32=new Int32Array(Y),o.HEAPU8=z=new Uint8Array(Y),o.HEAPU16=new Uint16Array(Y),o.HEAPU32=j=new Uint32Array(Y),o.HEAPF32=new Float32Array(Y),o.HEAPF64=new Float64Array(Y)}o.INITIAL_MEMORY;var q=[],X=[],Z=[];function Q(){if(o.preRun)for(typeof o.preRun=="function"&&(o.preRun=[o.preRun]);o.preRun.length;)nt(o.preRun.shift());$n(q)}function J(){$n(X)}function ot(){if(o.postRun)for(typeof o.postRun=="function"&&(o.postRun=[o.postRun]);o.postRun.length;)xt(o.postRun.shift());$n(Z)}function nt(Y){q.unshift(Y)}function ut(Y){X.unshift(Y)}function xt(Y){Z.unshift(Y)}var dt=0,yt=null;function Nt(Y){dt++,o.monitorRunDependencies&&o.monitorRunDependencies(dt)}function _t(Y){if(dt--,o.monitorRunDependencies&&o.monitorRunDependencies(dt),dt==0&&yt){var st=yt;yt=null,st()}}function Bt(Y){o.onAbort&&o.onAbort(Y),Y="Aborted("+Y+")",I(Y),T=!0,Y+=". Build with -sASSERTIONS for more info.";var st=new WebAssembly.RuntimeError(Y);throw i(st),st}var Yt="data:application/octet-stream;base64,";function qt(Y){return Y.startsWith(Yt)}function Gt(Y){return Y.startsWith("file://")}var Tt;Tt="tfjs-backend-wasm.wasm",qt(Tt)||(Tt=f(Tt));function Qt(Y){try{if(Y==Tt&&C)return new Uint8Array(C);if(b)return b(Y);throw"both async and sync fetching of the wasm failed"}catch(st){Bt(st)}}function te(){if(!C&&(u||d)){if(typeof fetch=="function"&&!Gt(Tt))return fetch(Tt,{credentials:"same-origin"}).then(function(Y){if(!Y.ok)throw"failed to load wasm binary file at '"+Tt+"'";return Y.arrayBuffer()}).catch(function(){return Qt(Tt)});if(g)return new Promise(function(Y,st){g(Tt,function(kt){Y(new Uint8Array(kt))},st)})}return Promise.resolve().then(function(){return Qt(Tt)})}function Cn(){var Y={env:Sd,wasi_snapshot_preview1:Sd};function st(Pt,At){var Ne=Pt.exports;o.asm=Ne,S=o.asm.memory,V(S.buffer),o.asm.__indirect_function_table,ut(o.asm.__wasm_call_ctors),_t()}Nt();function kt(Pt){st(Pt.instance)}function lt(Pt){return te().then(function(At){return WebAssembly.instantiate(At,Y)}).then(function(At){return At}).then(Pt,function(At){I("failed to asynchronously prepare wasm: "+At),Bt(At)})}function de(){return!C&&typeof WebAssembly.instantiateStreaming=="function"&&!qt(Tt)&&!Gt(Tt)&&!h&&typeof fetch=="function"?fetch(Tt,{credentials:"same-origin"}).then(function(Pt){var At=WebAssembly.instantiateStreaming(Pt,Y);return At.then(kt,function(Ne){return I("wasm streaming compile failed: "+Ne),I("falling back to ArrayBuffer instantiation"),lt(kt)})}):lt(kt)}if(o.instantiateWasm)try{var be=o.instantiateWasm(Y,st);return be}catch(Pt){I("Module.instantiateWasm callback failed with error: "+Pt),i(Pt)}return de().catch(i),{}}function ge(Y){this.name="ExitStatus",this.message="Program terminated with exit("+Y+")",this.status=Y}function $n(Y){for(;Y.length>0;)Y.shift()(o)}function Ge(){Bt("")}function Zn(){return 4294901760}function gn(){return Zn()}function Ln(Y,st,kt){z.copyWithin(Y>>>0,st>>>0,st+kt>>>0)}function Jn(Y){try{return S.grow(Y-B.byteLength+65535>>>16),V(S.buffer),1}catch{}}function He(Y){var st=z.length;Y=Y>>>0;var kt=Zn();if(Y>kt)return!1;let lt=(Ne,Pn)=>Ne+(Pn-Ne%Pn)%Pn;for(var de=1;de<=4;de*=2){var be=st*(1+.2/de);be=Math.min(be,Y+100663296);var Pt=Math.min(kt,lt(Math.max(Y,be),65536)),At=Jn(Pt);if(At)return!0}return!1}function un(Y){return 52}function Hs(Y,st,kt,lt,de){return 70}var xo=[null,[],[]];function ps(Y,st){var kt=xo[Y];st===0||st===10?((Y===1?w:I)($(kt,0)),kt.length=0):kt.push(st)}function gl(Y,st,kt,lt){for(var de=0,be=0;be<kt;be++){var Pt=j[st>>>2],At=j[st+4>>>2];st+=8;for(var Ne=0;Ne<At;Ne++)ps(Y,z[Pt+Ne>>>0]);de+=At}return j[lt>>>2]=de,0}function Rs(Y){var st=o["_"+Y];return st}function Cr(Y,st){M.set(Y,st>>>0)}function je(Y,st,kt,lt,de){var be={string:tn=>{var $r=0;if(tn!=null&&tn!==0){var Dd=(tn.length<<2)+1;$r=js(Dd),F(tn,$r,Dd)}return $r},array:tn=>{var $r=js(tn.length);return Cr(tn,$r),$r}};function Pt(tn){return st==="string"?k(tn):st==="boolean"?!!tn:tn}var At=Rs(Y),Ne=[],Pn=0;if(lt)for(var qs=0;qs<lt.length;qs++){var Rd=be[kt[qs]];Rd?(Pn===0&&(Pn=Nd()),Ne[qs]=Rd(lt[qs])):Ne[qs]=lt[qs]}var bl=At.apply(null,Ne);function Ad(tn){return Pn!==0&&Td(Pn),Pt(tn)}return bl=Ad(bl),bl}function vd(Y,st,kt,lt){kt=kt||[];var de=kt.every(Pt=>Pt==="number"||Pt==="boolean"),be=st!=="string";return be&&de&&!lt?Rs(Y):function(){return je(Y,st,kt,arguments)}}var Sd={abort:Ge,emscripten_get_heap_max:gn,emscripten_memcpy_big:Ln,emscripten_resize_heap:He,fd_close:un,fd_seek:Hs,fd_write:gl};Cn(),o.___wasm_call_ctors=function(){return(o.___wasm_call_ctors=o.asm.__wasm_call_ctors).apply(null,arguments)},o._init=function(){return(o._init=o.asm.init).apply(null,arguments)},o._init_with_threads_count=function(){return(o._init_with_threads_count=o.asm.init_with_threads_count).apply(null,arguments)},o._get_threads_count=function(){return(o._get_threads_count=o.asm.get_threads_count).apply(null,arguments)},o._register_tensor=function(){return(o._register_tensor=o.asm.register_tensor).apply(null,arguments)},o._dispose_data=function(){return(o._dispose_data=o.asm.dispose_data).apply(null,arguments)},o._dispose=function(){return(o._dispose=o.asm.dispose).apply(null,arguments)},o._Abs=function(){return(o._Abs=o.asm.Abs).apply(null,arguments)},o._Acos=function(){return(o._Acos=o.asm.Acos).apply(null,arguments)},o._Acosh=function(){return(o._Acosh=o.asm.Acosh).apply(null,arguments)},o._Add=function(){return(o._Add=o.asm.Add).apply(null,arguments)},o._AddN=function(){return(o._AddN=o.asm.AddN).apply(null,arguments)},o._All=function(){return(o._All=o.asm.All).apply(null,arguments)},o._Any=function(){return(o._Any=o.asm.Any).apply(null,arguments)},o._ArgMax=function(){return(o._ArgMax=o.asm.ArgMax).apply(null,arguments)},o._ArgMin=function(){return(o._ArgMin=o.asm.ArgMin).apply(null,arguments)},o._Asin=function(){return(o._Asin=o.asm.Asin).apply(null,arguments)},o._Asinh=function(){return(o._Asinh=o.asm.Asinh).apply(null,arguments)},o._Atan=function(){return(o._Atan=o.asm.Atan).apply(null,arguments)},o._Atan2=function(){return(o._Atan2=o.asm.Atan2).apply(null,arguments)},o._Atanh=function(){return(o._Atanh=o.asm.Atanh).apply(null,arguments)},o._AvgPool=function(){return(o._AvgPool=o.asm.AvgPool).apply(null,arguments)},o._AvgPool3D=function(){return(o._AvgPool3D=o.asm.AvgPool3D).apply(null,arguments)},o._AvgPool3DGrad=function(){return(o._AvgPool3DGrad=o.asm.AvgPool3DGrad).apply(null,arguments)},o._AvgPoolGrad=function(){return(o._AvgPoolGrad=o.asm.AvgPoolGrad).apply(null,arguments)},o._BatchMatMul=function(){return(o._BatchMatMul=o.asm.BatchMatMul).apply(null,arguments)},o._Bincount=function(){return(o._Bincount=o.asm.Bincount).apply(null,arguments)},o._BitwiseAnd=function(){return(o._BitwiseAnd=o.asm.BitwiseAnd).apply(null,arguments)},o._Ceil=function(){return(o._Ceil=o.asm.Ceil).apply(null,arguments)},o._ClipByValue=function(){return(o._ClipByValue=o.asm.ClipByValue).apply(null,arguments)},o._Conv2D=function(){return(o._Conv2D=o.asm.Conv2D).apply(null,arguments)},o._Conv2DBackpropInput=function(){return(o._Conv2DBackpropInput=o.asm.Conv2DBackpropInput).apply(null,arguments)},o._Conv3D=function(){return(o._Conv3D=o.asm.Conv3D).apply(null,arguments)},o._Conv3DBackpropFilterV2=function(){return(o._Conv3DBackpropFilterV2=o.asm.Conv3DBackpropFilterV2).apply(null,arguments)},o._Conv3DBackpropInputV2=function(){return(o._Conv3DBackpropInputV2=o.asm.Conv3DBackpropInputV2).apply(null,arguments)},o._Cos=function(){return(o._Cos=o.asm.Cos).apply(null,arguments)},o._Cosh=function(){return(o._Cosh=o.asm.Cosh).apply(null,arguments)},o._CropAndResize=function(){return(o._CropAndResize=o.asm.CropAndResize).apply(null,arguments)},o._Cumprod=function(){return(o._Cumprod=o.asm.Cumprod).apply(null,arguments)},o._Cumsum=function(){return(o._Cumsum=o.asm.Cumsum).apply(null,arguments)},o._DenseBincount=function(){return(o._DenseBincount=o.asm.DenseBincount).apply(null,arguments)},o._DepthToSpace=function(){return(o._DepthToSpace=o.asm.DepthToSpace).apply(null,arguments)},o._DepthwiseConv2dNative=function(){return(o._DepthwiseConv2dNative=o.asm.DepthwiseConv2dNative).apply(null,arguments)},o._Diag=function(){return(o._Diag=o.asm.Diag).apply(null,arguments)},o._Dilation2D=function(){return(o._Dilation2D=o.asm.Dilation2D).apply(null,arguments)},o._Dilation2DBackpropFilter=function(){return(o._Dilation2DBackpropFilter=o.asm.Dilation2DBackpropFilter).apply(null,arguments)},o._Dilation2DBackpropInput=function(){return(o._Dilation2DBackpropInput=o.asm.Dilation2DBackpropInput).apply(null,arguments)},o._Elu=function(){return(o._Elu=o.asm.Elu).apply(null,arguments)},o._EluGrad=function(){return(o._EluGrad=o.asm.EluGrad).apply(null,arguments)},o._Equal=function(){return(o._Equal=o.asm.Equal).apply(null,arguments)},o._Erf=function(){return(o._Erf=o.asm.Erf).apply(null,arguments)},o._Exp=function(){return(o._Exp=o.asm.Exp).apply(null,arguments)},o._Expm1=function(){return(o._Expm1=o.asm.Expm1).apply(null,arguments)},o._FlipLeftRight=function(){return(o._FlipLeftRight=o.asm.FlipLeftRight).apply(null,arguments)},o._Floor=function(){return(o._Floor=o.asm.Floor).apply(null,arguments)},o._FloorDiv=function(){return(o._FloorDiv=o.asm.FloorDiv).apply(null,arguments)},o._FusedBatchNorm=function(){return(o._FusedBatchNorm=o.asm.FusedBatchNorm).apply(null,arguments)},o._FusedConv2D=function(){return(o._FusedConv2D=o.asm.FusedConv2D).apply(null,arguments)},o._FusedDepthwiseConv2D=function(){return(o._FusedDepthwiseConv2D=o.asm.FusedDepthwiseConv2D).apply(null,arguments)},o._Gather=function(){return(o._Gather=o.asm.Gather).apply(null,arguments)},o._GatherNd=function(){return(o._GatherNd=o.asm.GatherNd).apply(null,arguments)},o._Greater=function(){return(o._Greater=o.asm.Greater).apply(null,arguments)},o._GreaterEqual=function(){return(o._GreaterEqual=o.asm.GreaterEqual).apply(null,arguments)},o._IsFinite=function(){return(o._IsFinite=o.asm.IsFinite).apply(null,arguments)},o._IsInf=function(){return(o._IsInf=o.asm.IsInf).apply(null,arguments)},o._IsNan=function(){return(o._IsNan=o.asm.IsNan).apply(null,arguments)},o._LRN=function(){return(o._LRN=o.asm.LRN).apply(null,arguments)},o._LRNGrad=function(){return(o._LRNGrad=o.asm.LRNGrad).apply(null,arguments)},o._LeakyRelu=function(){return(o._LeakyRelu=o.asm.LeakyRelu).apply(null,arguments)},o._Less=function(){return(o._Less=o.asm.Less).apply(null,arguments)},o._LessEqual=function(){return(o._LessEqual=o.asm.LessEqual).apply(null,arguments)},o._LinSpace=function(){return(o._LinSpace=o.asm.LinSpace).apply(null,arguments)},o._Log=function(){return(o._Log=o.asm.Log).apply(null,arguments)},o._Log1p=function(){return(o._Log1p=o.asm.Log1p).apply(null,arguments)},o._LogicalAnd=function(){return(o._LogicalAnd=o.asm.LogicalAnd).apply(null,arguments)},o._LogicalNot=function(){return(o._LogicalNot=o.asm.LogicalNot).apply(null,arguments)},o._LogicalOr=function(){return(o._LogicalOr=o.asm.LogicalOr).apply(null,arguments)},o._LogicalXor=function(){return(o._LogicalXor=o.asm.LogicalXor).apply(null,arguments)},o._Max=function(){return(o._Max=o.asm.Max).apply(null,arguments)},o._MaxPool=function(){return(o._MaxPool=o.asm.MaxPool).apply(null,arguments)},o._MaxPool3D=function(){return(o._MaxPool3D=o.asm.MaxPool3D).apply(null,arguments)},o._MaxPool3DGrad=function(){return(o._MaxPool3DGrad=o.asm.MaxPool3DGrad).apply(null,arguments)},o._MaxPoolGrad=function(){return(o._MaxPoolGrad=o.asm.MaxPoolGrad).apply(null,arguments)},o._MaxPoolWithArgmax=function(){return(o._MaxPoolWithArgmax=o.asm.MaxPoolWithArgmax).apply(null,arguments)},o._Maximum=function(){return(o._Maximum=o.asm.Maximum).apply(null,arguments)},o._Mean=function(){return(o._Mean=o.asm.Mean).apply(null,arguments)},o._Min=function(){return(o._Min=o.asm.Min).apply(null,arguments)},o._Minimum=function(){return(o._Minimum=o.asm.Minimum).apply(null,arguments)},o._MirrorPad=function(){return(o._MirrorPad=o.asm.MirrorPad).apply(null,arguments)},o._Mod=function(){return(o._Mod=o.asm.Mod).apply(null,arguments)},o._Multinomial=function(){return(o._Multinomial=o.asm.Multinomial).apply(null,arguments)},o._Multiply=function(){return(o._Multiply=o.asm.Multiply).apply(null,arguments)},o._Neg=function(){return(o._Neg=o.asm.Neg).apply(null,arguments)},o._NonMaxSuppressionV3=function(){return(o._NonMaxSuppressionV3=o.asm.NonMaxSuppressionV3).apply(null,arguments)},o._NonMaxSuppressionV4=function(){return(o._NonMaxSuppressionV4=o.asm.NonMaxSuppressionV4).apply(null,arguments)},o._NonMaxSuppressionV5=function(){return(o._NonMaxSuppressionV5=o.asm.NonMaxSuppressionV5).apply(null,arguments)},o._NotEqual=function(){return(o._NotEqual=o.asm.NotEqual).apply(null,arguments)},o._OneHot=function(){return(o._OneHot=o.asm.OneHot).apply(null,arguments)},o._PadV2=function(){return(o._PadV2=o.asm.PadV2).apply(null,arguments)},o._Pow=function(){return(o._Pow=o.asm.Pow).apply(null,arguments)},o._Prelu=function(){return(o._Prelu=o.asm.Prelu).apply(null,arguments)},o._Prod=function(){return(o._Prod=o.asm.Prod).apply(null,arguments)},o._RealDiv=function(){return(o._RealDiv=o.asm.RealDiv).apply(null,arguments)},o._Reciprocal=function(){return(o._Reciprocal=o.asm.Reciprocal).apply(null,arguments)},o._Relu=function(){return(o._Relu=o.asm.Relu).apply(null,arguments)},o._Relu6=function(){return(o._Relu6=o.asm.Relu6).apply(null,arguments)},o._ResizeBilinear=function(){return(o._ResizeBilinear=o.asm.ResizeBilinear).apply(null,arguments)},o._ResizeBilinearGrad=function(){return(o._ResizeBilinearGrad=o.asm.ResizeBilinearGrad).apply(null,arguments)},o._ResizeNearestNeighbor=function(){return(o._ResizeNearestNeighbor=o.asm.ResizeNearestNeighbor).apply(null,arguments)},o._ResizeNearestNeighborGrad=function(){return(o._ResizeNearestNeighborGrad=o.asm.ResizeNearestNeighborGrad).apply(null,arguments)},o._Reverse=function(){return(o._Reverse=o.asm.Reverse).apply(null,arguments)},o._RotateWithOffset=function(){return(o._RotateWithOffset=o.asm.RotateWithOffset).apply(null,arguments)},o._Round=function(){return(o._Round=o.asm.Round).apply(null,arguments)},o._Rsqrt=function(){return(o._Rsqrt=o.asm.Rsqrt).apply(null,arguments)},o._ScatterNd=function(){return(o._ScatterNd=o.asm.ScatterNd).apply(null,arguments)},o._SearchSorted=function(){return(o._SearchSorted=o.asm.SearchSorted).apply(null,arguments)},o._SelectV2=function(){return(o._SelectV2=o.asm.SelectV2).apply(null,arguments)},o._Selu=function(){return(o._Selu=o.asm.Selu).apply(null,arguments)},o._Sigmoid=function(){return(o._Sigmoid=o.asm.Sigmoid).apply(null,arguments)},o._Sign=function(){return(o._Sign=o.asm.Sign).apply(null,arguments)},o._Sin=function(){return(o._Sin=o.asm.Sin).apply(null,arguments)},o._Sinh=function(){return(o._Sinh=o.asm.Sinh).apply(null,arguments)},o._Softmax=function(){return(o._Softmax=o.asm.Softmax).apply(null,arguments)},o._Softplus=function(){return(o._Softplus=o.asm.Softplus).apply(null,arguments)},o._SparseFillEmptyRows=function(){return(o._SparseFillEmptyRows=o.asm.SparseFillEmptyRows).apply(null,arguments)},o._SparseReshape=function(){return(o._SparseReshape=o.asm.SparseReshape).apply(null,arguments)},o._SparseSegmentReduction=function(){return(o._SparseSegmentReduction=o.asm.SparseSegmentReduction).apply(null,arguments)},o._SparseToDense=function(){return(o._SparseToDense=o.asm.SparseToDense).apply(null,arguments)},o._Sqrt=function(){return(o._Sqrt=o.asm.Sqrt).apply(null,arguments)},o._Square=function(){return(o._Square=o.asm.Square).apply(null,arguments)},o._SquaredDifference=function(){return(o._SquaredDifference=o.asm.SquaredDifference).apply(null,arguments)},o._Step=function(){return(o._Step=o.asm.Step).apply(null,arguments)},o._StridedSlice=function(){return(o._StridedSlice=o.asm.StridedSlice).apply(null,arguments)},o._Sub=function(){return(o._Sub=o.asm.Sub).apply(null,arguments)},o._Sum=function(){return(o._Sum=o.asm.Sum).apply(null,arguments)},o._Tan=function(){return(o._Tan=o.asm.Tan).apply(null,arguments)},o._Tanh=function(){return(o._Tanh=o.asm.Tanh).apply(null,arguments)},o._TensorScatterUpdate=function(){return(o._TensorScatterUpdate=o.asm.TensorScatterUpdate).apply(null,arguments)},o._Tile=function(){return(o._Tile=o.asm.Tile).apply(null,arguments)},o._TopK=function(){return(o._TopK=o.asm.TopK).apply(null,arguments)},o._Transform=function(){return(o._Transform=o.asm.Transform).apply(null,arguments)},o._Transpose=function(){return(o._Transpose=o.asm.Transpose).apply(null,arguments)},o.__FusedMatMul=function(){return(o.__FusedMatMul=o.asm._FusedMatMul).apply(null,arguments)},o._malloc=function(){return(o._malloc=o.asm.malloc).apply(null,arguments)},o._free=function(){return(o._free=o.asm.free).apply(null,arguments)},o.___errno_location=function(){return(o.___errno_location=o.asm.__errno_location).apply(null,arguments)};var Nd=o.stackSave=function(){return(Nd=o.stackSave=o.asm.stackSave).apply(null,arguments)},Td=o.stackRestore=function(){return(Td=o.stackRestore=o.asm.stackRestore).apply(null,arguments)},js=o.stackAlloc=function(){return(js=o.stackAlloc=o.asm.stackAlloc).apply(null,arguments)};o.dynCall_iijjiiii=function(){return(o.dynCall_iijjiiii=o.asm.dynCall_iijjiiii).apply(null,arguments)},o.dynCall_jiji=function(){return(o.dynCall_jiji=o.asm.dynCall_jiji).apply(null,arguments)},o.cwrap=vd;var $i;yt=function Y(){$i||_d(),$i||(yt=Y)};function _d(Y){if(dt>0||(Q(),dt>0))return;function st(){$i||($i=!0,o.calledRun=!0,!T&&(J(),a(o),o.onRuntimeInitialized&&o.onRuntimeInitialized(),ot()))}o.setStatus?(o.setStatus("Running..."),setTimeout(function(){setTimeout(function(){o.setStatus("")},1),st()},1)):st()}if(o.preInit)for(typeof o.preInit=="function"&&(o.preInit=[o.preInit]);o.preInit.length>0;)o.preInit.pop()();_d();var yo;l&&(yo={uncaughtException:process.listeners("uncaughtException").filter(function(Y){return!l.uncaughtException.indexOf(Y)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(Y){return!l.unhandledRejection.indexOf(Y)>-1})});var wo;if(typeof r<"u")wo=r;else if(typeof WasmBackendModuleThreadedSimd<"u")wo=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(yo){var Ed=wo._dispose;wo._dispose=function(){Ed(),yo.uncaughtException.forEach(function(Y){process.removeListener("uncaughtException",Y)}),yo.unhandledRejection.forEach(function(Y){process.removeListener("unhandledRejection",Y)})}}return r.ready}})();n.exports=e}(Cm)),Cm.exports}var Yk=c9(),Zk=xh(Yk),d9=As({__proto__:null,default:Zk},[Yk]);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jk=qk||i9,h9=Zk||d9;class p9 extends yl{constructor(t){super(),this.wasm=t,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(y9),this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new zd(this,es())}write(t,e,s){const r={id:this.dataIdNextNumber++};return this.move(r,t,e,s,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(t){const e=Xe();return t(),{kernelMs:Xe()-e}}move(t,e,s,r,o){const a=this.dataIdNextNumber++;if(r==="string"){const u=e;this.dataIdMap.set(t,{id:a,stringBytes:u,shape:s,dtype:r,memoryOffset:null,refCount:o});return}const i=L(s),l=i*vo(r),c=this.wasm._malloc(l)>>>0;this.dataIdMap.set(t,{id:a,memoryOffset:c,shape:s,dtype:r,refCount:o}),this.wasm.tfjs.registerTensor(a,i,c),e!=null&&this.wasm.HEAPU8.set(new Uint8Array(e.buffer,e.byteOffset,l),c)}async read(t){return this.readSync(t)}readSync(t,e,s){const{memoryOffset:r,dtype:o,shape:a,stringBytes:i}=this.dataIdMap.get(t);if(o==="string")return(e==null||e===0)&&(s==null||s>=i.length)?i:i.slice(e,s);e=e||0,s=s||L(a);const l=vo(o),c=this.wasm.HEAPU8.slice(r+e*l,r+s*l);return g9(c.buffer,o)}disposeData(t,e=!1){if(this.dataIdMap.has(t)){const s=this.dataIdMap.get(t);if(s.refCount--,!e&&s.refCount>0)return!1;this.wasm._free(s.memoryOffset),this.wasm.tfjs.disposeData(s.id),this.dataIdMap.delete(t)}return!0}refCount(t){return this.dataIdMap.has(t)?this.dataIdMap.get(t).refCount:0}incRef(t){const e=this.dataIdMap.get(t);e!=null&&e.refCount++}floatPrecision(){return 32}getMemoryOffset(t){return this.dataIdMap.get(t).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(t,e,s,r){let o;if(s==null)o=this.write(r??null,t,e);else{const a=this.dataIdNextNumber++;o={id:a},this.dataIdMap.set(o,{id:a,memoryOffset:s,shape:t,dtype:e,refCount:1});const i=L(t);this.wasm.tfjs.registerTensor(a,i,s)}return{dataId:o,shape:t,dtype:e}}typedArrayFromHeap({shape:t,dtype:e,dataId:s}){const r=this.wasm.HEAPU8.buffer,{memoryOffset:o}=this.dataIdMap.get(s),a=L(t);switch(e){case"float32":return new Float32Array(r,o,a);case"int32":return new Int32Array(r,o,a);case"bool":return new Uint8Array(r,o,a);default:throw new Error(`Unknown dtype ${e}`)}}}function f9(n){return(t,e)=>(GC(n,{credentials:"same-origin"}).then(s=>{s.ok||t.env.a(`failed to load wasm binary file at '${n}'`),s.arrayBuffer().then(r=>{WebAssembly.instantiate(r,t).then(o=>{e(o.instance,o.module)})})}),{})}function Qk(n,t,e){let s="tfjs-backend-wasm.wasm";return n&&t?s="tfjs-backend-wasm-threaded-simd.wasm":n&&(s="tfjs-backend-wasm-simd.wasm"),$m!=null&&$m[s]!=null?$m[s]:e+s}async function m9(){const[n,t]=await Promise.all([H().getAsync("WASM_HAS_SIMD_SUPPORT"),H().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((e,s)=>{const r={};r.locateFile=(i,l)=>{if(i.endsWith(".worker.js")){const c=l9.wasmWorkerContents.replace(/\n/g,"\\n"),u=new Blob([c],{type:"application/javascript"});return URL.createObjectURL(u)}return i.endsWith(".wasm")?Qk(n,t,ml??l):l+i},tC&&(r.instantiateWasm=f9(Qk(n,t,ml??"")));let o=!1;r.onAbort=()=>{if(o||$d)return;$d=!0,s({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let a;t&&n&&b9==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+Jk.toString()],{type:"text/javascript"}),a=Jk(r)):a=h9(r),a.then(i=>{o=!0,$d=!1;const l=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",l,["number"]),dispose:i.cwrap("dispose",l,[])},e({wasm:i})}).catch(s)})}function g9(n,t){switch(t){case"float32":return new Float32Array(n);case"int32":return new Int32Array(n);case"bool":return new Uint8Array(n);default:throw new Error(`Unknown dtype ${t}`)}}let b9=null,ml=null,$m={},$d=!1,tC=!1;function x9(n,t=!1){if($d)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");ml=n,tC=t}let y9=-1;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Th("wasm",async()=>{const{wasm:n}=await m9();return new p9(n)},2),x9("/tfjs-backend-wasm/");const w9={"Flow Matching":rK};self.onmessage=async n=>{const{type:t,data:e}=n.data;if(t==="sample"){const s=e.modelJSONPath,r=e.modelType,o=e.modelConfig,a=e.numberOfSteps,i=e.numSamples;await u$("wasm"),await l$();const l=w9[r],c=new l(o.dim,o.hidden),u=await bD(s);c.setModel(u);const h=c.sample(i,a).arraySync();self.postMessage({type:"result",allSamples:h})}}})();
